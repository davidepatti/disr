%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 77 316 472 653
%%Title: C:\Users\Andrea\Desktop\Disegno1.ps
%%Creator: GSview from C:\Users\Andrea\Desktop\Disegno1.ps
%%CreationDate: Mon Dec 23 13:24:06 2013
%%Pages: 1
%%EndComments
%%Page: 1 1
%%BeginDocument: C:\Users\Andrea\Desktop\Disegno1.ps
% Document information
[/Producer <feff 0050 0044 0046 0020 0050 0072 0069 006E 0074 0065 0072 0020 002F 0020 0077 0077 0077 002E 0062 0075 006C 006C 007A 0069 0070 002E 0063 006F 006D 0020 002F 0020 0043 0050 0020 002F 0020 0046 0072 0065 0065 0077 0061 0072 0065 0020 0045 0064 0069 0074 0069 006F 006E>
/Title <feff 0044 0069 0073 0065 0067 006E 006F 0031 002E 0070 0064 0066>
/Author <feff 0041 006E 0064 0072 0065 0061>
/DOCINFO pdfmark
%!PS-Adobe-3.0
%%CreationDate: 12/23/2013 13:22:16
%%BoundingBox: (atend)
%%Pages: (atend)
%%Orientation: Portrait
%%PageOrder: (atend)
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentData: Clean7Bit
%%TargetDevice:  (3011.104) 0
%%LanguageLevel: 2
%%HiResBoundingBox: 0 0.4920 594.9600 841.6681
%%CropBox: 0 0.4920 594.9600 841.6681
%ADO_BeginApplicationHeaderComments
%%LanguageLevel: 3
%ADO_EndApplicationHeaderComments
%%DocumentProcessColors: (atend)
%%DocumentCustomColors: (atend)
%%EndComments

%%BeginDefaults
%ADO_BeginApplicationDefaultsComments
%%ViewingOrientation: 1 0 0 1
%ADO_EndApplicationDefaultsComments

%%ViewingOrientation: 1 0 0 1
%%EndDefaults


%%BeginProlog
%%BeginResource: file Pscript_WinNT_ErrorHandler 5.0 0
/currentpacking where{pop/oldpack currentpacking def/setpacking where{pop false
setpacking}if}if/$brkpage 64 dict def $brkpage begin/prnt{dup type/stringtype
ne{=string cvs}if dup length 6 mul/tx exch def/ty 10 def currentpoint/toy exch
def/tox exch def 1 setgray newpath tox toy 2 sub moveto 0 ty rlineto tx 0
rlineto 0 ty neg rlineto closepath fill tox toy moveto 0 setgray show}bind def
/nl{currentpoint exch pop lmargin exch moveto 0 -10 rmoveto}def/=={/cp 0 def
typeprint nl}def/typeprint{dup type exec}readonly def/lmargin 72 def/rmargin 72
def/tprint{dup length cp add rmargin gt{nl/cp 0 def}if dup length cp add/cp
exch def prnt}readonly def/cvsprint{=string cvs tprint( )tprint}readonly def
/integertype{cvsprint}readonly def/realtype{cvsprint}readonly def/booleantype
{cvsprint}readonly def/operatortype{(--)tprint =string cvs tprint(-- )tprint}
readonly def/marktype{pop(-mark- )tprint}readonly def/dicttype{pop
(-dictionary- )tprint}readonly def/nulltype{pop(-null- )tprint}readonly def
/filetype{pop(-filestream- )tprint}readonly def/savetype{pop(-savelevel- )
tprint}readonly def/fonttype{pop(-fontid- )tprint}readonly def/nametype{dup
xcheck not{(/)tprint}if cvsprint}readonly def/stringtype{dup rcheck{(\()tprint
tprint(\))tprint}{pop(-string- )tprint}ifelse}readonly def/arraytype{dup rcheck
{dup xcheck{({)tprint{typeprint}forall(})tprint}{([)tprint{typeprint}forall(])
tprint}ifelse}{pop(-array- )tprint}ifelse}readonly def/packedarraytype{dup
rcheck{dup xcheck{({)tprint{typeprint}forall(})tprint}{([)tprint{typeprint}
forall(])tprint}ifelse}{pop(-packedarray- )tprint}ifelse}readonly def/courier
/Courier findfont 10 scalefont def end errordict/handleerror{systemdict begin
$error begin $brkpage begin newerror{/newerror false store vmstatus pop pop 0
ne{grestoreall}if errorname(VMerror)ne{showpage}if initgraphics courier setfont
lmargin 720 moveto errorname(VMerror)eq{userdict/ehsave known{clear userdict
/ehsave get restore 2 vmreclaim}if vmstatus exch pop exch pop PrtVMMsg}{
(ERROR: )prnt errorname prnt nl(OFFENDING COMMAND: )prnt/command load prnt
$error/ostack known{nl nl(STACK:)prnt nl nl $error/ostack get aload length{==}
repeat}if}ifelse systemdict/showpage get exec(%%[ Error: )print errorname
=print(; OffendingCommand: )print/command load =print( ]%%)= flush}if end end
end}dup 0 systemdict put dup 4 $brkpage put bind readonly put/currentpacking
where{pop/setpacking where{pop oldpack setpacking}if}if
%%EndResource
userdict /Pscript_WinNT_Incr 230 dict dup begin put
%%BeginResource: file Pscript_FatalError 5.0 0
userdict begin/FatalErrorIf{{initgraphics findfont 1 index 0 eq{exch pop}{dup
length dict begin{1 index/FID ne{def}{pop pop}ifelse}forall/Encoding
{ISOLatin1Encoding}stopped{StandardEncoding}if def currentdict end
/ErrFont-Latin1 exch definefont}ifelse exch scalefont setfont counttomark 3 div
cvi{moveto show}repeat showpage quit}{cleartomark}ifelse}bind def end
%%EndResource
userdict begin/PrtVMMsg{vmstatus exch sub exch pop gt{[
(Questo lavoro richiede una quantità di memoria maggiore di quella disponibile nella stampante.)
100 500(Attenersi alle istruzioni seguenti; quindi stampare di nuovo:)100 485
(Per il formato di output, scegliere Massima portabilità.)115 470
(Controllare che la quantità di memoria PostScript disponibile sia accurata nella scheda Impostazioni periferica.)
115 455(Ridurre il numero di caratteri del documento.)115 440
(Stampare il documento in parti.)115 425 12/Times-Roman showpage
(%%[ PrinterError: Low Printer VM ]%%)= true FatalErrorIf}if}bind def end
version cvi 2016 ge{/VM?{pop}bind def}{/VM? userdict/PrtVMMsg get def}ifelse
105000 VM?
%%BeginResource: file Pscript_Win_Basic 5.0 0
/d/def load def/,/load load d/~/exch , d/?/ifelse , d/!/pop , d/`/begin , d/^
/index , d/@/dup , d/+/translate , d/$/roll , d/U/userdict , d/M/moveto , d/-
/rlineto , d/&/currentdict , d/:/gsave , d/;/grestore , d/F/false , d/T/true ,
d/N/newpath , d/E/end , d/Ac/arc , d/An/arcn , d/A/ashow , d/D/awidthshow , d/C
/closepath , d/V/div , d/O/eofill , d/L/fill , d/I/lineto , d/-c/curveto , d/-M
/rmoveto , d/+S/scale , d/Ji/setfont , d/Lc/setlinecap , d/Lj/setlinejoin , d
/Lw/setlinewidth , d/Lm/setmiterlimit , d/sd/setdash , d/S/show , d/LH/showpage
, d/K/stroke , d/W/widthshow , d/R/rotate , d/L2? false/languagelevel where{pop
languagelevel 2 ge{pop true}if}if d L2?{/xS/xshow , d/yS/yshow , d/zS/xyshow ,
d}if/b{bind d}bind d/bd{bind d}bind d/xd{~ d}bd/ld{, d}bd/bn/bind ld/lw/Lw ld
/lc/Lc ld/lj/Lj ld/sg/setgray ld/ADO_mxRot null d/self & d/OrgMx matrix
currentmatrix d/reinitialize{: OrgMx setmatrix[/TextInit/GraphInit/UtilsInit
counttomark{@ where{self eq}{F}?{cvx exec}{!}?}repeat cleartomark ;}b
/initialize{`{/Pscript_Win_Data where{!}{U/Pscript_Win_Data & put}?/ADO_mxRot ~
d/TextInitialised? F d reinitialize E}{U/Pscript_Win_Data 230 dict @ ` put
/ADO_mxRot ~ d/TextInitialised? F d reinitialize}?}b/terminate{!{& self eq
{exit}{E}?}loop E}b/suspend/terminate , d/resume{` Pscript_Win_Data `}b U `
/lucas 21690 d/featurebegin{countdictstack lucas[}b/featurecleanup{stopped
{cleartomark @ lucas eq{! exit}if}loop countdictstack ~ sub @ 0 gt{{E}repeat}
{!}?}b E/snap{transform 0.25 sub round 0.25 add ~ 0.25 sub round 0.25 add ~
itransform}b/dsnap{dtransform round ~ round ~ idtransform}b/nonzero_round{@ 0.5
ge{round}{@ -0.5 lt{round}{0 ge{1}{-1}?}?}?}b/nonzero_dsnap{dtransform
nonzero_round ~ nonzero_round ~ idtransform}b U<04>cvn{}put/rr{1 ^ 0 - 0 ~ -
neg 0 - C}b/irp{4 -2 $ + +S fx 4 2 $ M 1 ^ 0 - 0 ~ - neg 0 -}b/rp{4 2 $ M 1 ^ 0
- 0 ~ - neg 0 -}b/solid{[]0 sd}b/g{@ not{U/DefIf_save save put}if U/DefIf_bool
2 ^ put}b/DefIf_El{if U/DefIf_bool get not @{U/DefIf_save get restore}if}b/e
{DefIf_El !}b/UDF{L2?{undefinefont}{!}?}b/UDR{L2?{undefineresource}{! !}?}b
/freeVM{/Courier findfont[40 0 0 -40 0 0]makefont Ji 2 vmreclaim}b/hfRedefFont
{findfont @ length dict `{1 ^/FID ne{d}{! !}?}forall & E @ ` ~{/CharStrings 1
dict `/.notdef 0 d & E d}if/Encoding 256 array 0 1 255{1 ^ ~/.notdef put}for d
E definefont !}bind d/hfMkCIDFont{/CIDFont findresource @ length 2 add dict `{1
^ @/FID eq ~ @/XUID eq ~/UIDBase eq or or{! !}{d}?}forall/CDevProc ~ d/Metrics2
16 dict d/CIDFontName 1 ^ d & E 1 ^ ~/CIDFont defineresource ![~]composefont !}
bind d
%%EndResource
%%BeginResource: file Pscript_Win_Utils_L2 5.0 0
/rf/rectfill , d/fx{1 1 dtransform @ 0 ge{1 sub 0.5}{1 add -0.5}? 3 -1 $ @ 0 ge
{1 sub 0.5}{1 add -0.5}? 3 1 $ 4 1 $ idtransform 4 -2 $ idtransform}b/BZ{4 -2 $
snap + +S fx rf}b/rs/rectstroke , d/rc/rectclip , d/UtilsInit{currentglobal{F
setglobal}if}b/scol{! setcolor}b/colspA/DeviceGray d/colspABC/DeviceRGB d
/colspRefresh{colspABC setcolorspace}b/SetColSpace{colspABC setcolorspace}b
/resourcestatus where{!/ColorRendering/ProcSet resourcestatus{! ! T}{F}?}{F}?
not{/ColorRendering<</GetHalftoneName{currenthalftone @/HalftoneName known{
/HalftoneName get}{!/none}?}bn/GetPageDeviceName{currentpagedevice @
/PageDeviceName known{/PageDeviceName get @ null eq{!/none}if}{!/none}?}bn
/GetSubstituteCRD{!/DefaultColorRendering/ColorRendering resourcestatus{! !
/DefaultColorRendering}{(DefaultColorRendering*){cvn exit}127 string
/ColorRendering resourceforall}?}bn>>/defineresource where{!/ProcSet
defineresource !}{! !}?}if/buildcrdname{/ColorRendering/ProcSet findresource `
mark GetHalftoneName @ type @/nametype ne ~/stringtype ne and{!/none}if(.)
GetPageDeviceName @ type @/nametype ne ~/stringtype ne and{!/none}if(.)5 ^ 0 5
-1 1{^ length add}for string 6 1 $ 5 ^ 5{~ 1 ^ cvs length 1 ^ length 1 ^ sub
getinterval}repeat ! cvn 3 1 $ ! ! E}b/definecolorrendering{~ buildcrdname ~
/ColorRendering defineresource !}b/findcolorrendering where{!}{
/findcolorrendering{buildcrdname @/ColorRendering resourcestatus{! ! T}{
/ColorRendering/ProcSet findresource ` GetSubstituteCRD E F}?}b}?
/selectcolorrendering{findcolorrendering !/ColorRendering findresource
setcolorrendering}b/G2UBegin{findresource/FontInfo get/GlyphNames2Unicode get
`}bind d/G2CCBegin{findresource/FontInfo get/GlyphNames2HostCode get `}bind d
/G2UEnd{E}bind d/AddFontInfoBegin{/FontInfo 8 dict @ `}bind d/AddFontInfo{
/GlyphNames2Unicode 16 dict d/GlyphNames2HostCode 16 dict d}bind d
/AddFontInfoEnd{E d}bind d/T0AddCFFMtx2{/CIDFont findresource/Metrics2 get ` d
E}bind d
%%EndResource
end
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog

%%BeginSetup
statusdict begin (%%[ ProductName: ) print product print ( ]%%)= flush end
[ 1 0 0 1 0 0 ] false Pscript_WinNT_Incr dup /initialize get exec
featurebegin{
%%BeginNonPPDFeature: JobTimeout 0
0 /languagelevel where{pop languagelevel}{1}ifelse 2 ge{1 dict dup/JobTimeout  4 -1 roll put setuserparams}{statusdict/setjobtimeout get exec}ifelse
%%EndNonPPDFeature
}featurecleanup

featurebegin{
%%BeginNonPPDFeature: WaitTimeout 300
300 /languagelevel where{pop languagelevel}{1}ifelse 2 ge{1 dict dup/WaitTimeout 4 -1 roll put setuserparams}{statusdict/waittimeout 3 -1 roll put}ifelse
%%EndNonPPDFeature
}featurecleanup

featurebegin{
%%BeginFeature: *Resolution 600dpi
<< /HWResolution [600 600] >> setpagedevice
%%EndFeature
}featurecleanup
featurebegin{
%%BeginFeature: *PageSize A4
<< /PageSize [595 842] /ImagingBBox null >> setpagedevice
%%EndFeature
}featurecleanup
1 setlinecap 1 setlinejoin
/mysetup [ 72 600 V 0 0 -72 600 V 0 842.0003 ] def 
Adobe_AGM_Utils begin
3 3010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 920 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='ï»¿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.2-c001 63.139439, 2010/09/27-13:37:26        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
   xmp:CreateDate="2013-12-23T13:21:35+01:00"
   xmp:CreatorTool="MicrosoftÂ® VisioÂ® 2010"
   xmp:ModifyDate="2013-12-23T13:21:35+01:00"
   pdf:Keywords=""
   pdf:Producer="MicrosoftÂ® VisioÂ® 2010">
   <dc:creator>
    <rdf:Seq>
     <rdf:li>Andrea Mineo</rdf:li>
    </rdf:Seq>
   </dc:creator>
   <dc:description>
    <rdf:Alt>
     <rdf:li xml:lang="x-default"/>
    </rdf:Alt>
   </dc:description>
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default"/>
    </rdf:Alt>
   </dc:title>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[{Catalog} {Doc_Metadata} /Metadata pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup

userdict begin /ehsave save def end
%%Page: 1 1

%%EndPageComments
%%BeginPageSetup
/DeviceRGB dup setcolorspace /colspABC exch def
mysetup concat colspRefresh
Adobe_AGM_Utils begin
[
[/Label (1)]
[/TrimBox [0 .491943359375 594.9599609375 841.66802978516]]
[/BleedBox [0 .491943359375 594.9599609375 841.66802978516]]
[/ArtBox [0 .371948 594.96 841.548 ]]
]xpdfm
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
Adobe_CoolType_Core/ps get exec
true set_gvm
%ADOBeginSubsetFont: PBAAAA+Calibri Initial
ct_T42Dict begin
-0.5 -0.305 1.238 0.961
 256 array 0 1 255 {1 index exch /.notdef put} for  /PBAAAA+Calibri
Type42DictBegin
[<00010000000c000c000c000c4f532f32f9dcd859000000cc000000606376
7420b09bc4d20000012c0000051c6670676df6f64d0c000006480000091a
676c79668e3dff5200008f600000316868656164ecde32e000000f640000
0036686865610dad0c0b00000f9c00000024686d74780ccd230500000fc0
00002fe06c6f6361e4d3d77900003fa000001e4e6d617870213524d60000
5df0000000206e616d6519aa717b00005e1000000d3e707265706baf02fe
00006b5000002410676469720000000000000000000000000003042b0190
00050008059905330000011e05990533000003d0008602000800020f0502
020204030204e00002ff4000acff00000001000000004d53202000400000
20810600fe0001c4079e02262000019f0000000003b7050e000000200003
0000079e0000fe930000000000000000000000000050006a007300800080
0086008d009300bf00db006200830093009900a000a600a900b000c100c9
00d700000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000fe79056d000c03b700060013
0000fffaffedfea6ffedfeb8050e000600130000fffaffedfe93050e0013
0420000600130000fffaffedff10ffee050e00130420000600130000fffa
ffeefe93ff10feb80612000a050e0006000d02d2fffafff301fdfffa023f
0006000dff36fffafff302870006000f0000fffafff1079efeaffea70000
0000000000000000000000500051005a005b005c005d0060006100620064
00680069006a006b006c006d006e00680069006e00600067006e00660068
005f00610063006400660068006a006b006c006d006e006f0070006f0072
0074007500760076007000720073007400750076006f0070007100720073
00750077007700780079007a007b007c007d007b007c007d00770079007a
007c0078007a007c007d0078007d007e007f008000810082007e007f0081
0082007e007f008000810082008300840085008600870088008900830084
008500860087008800890083008400850086008700880089008900860087
00880089008a008b008c008d008e008f008a008b008c008d008e008f008a
008b008c008d008e008f008d008a008b008c008d008e008f009000900091
0092009300940095009600980099009b009c009000910092009300940095
0096009700980099009a009e009f00a60090009100950098009f00900091
0096009700bc00c600b500ae00af00b6006800690063006a006f00700071
006f0070007100720066006c006d00700079007c007f0083008600870088
0089008a0074007500760077007a007b007c007d007e008200850086008a
0088008900830078007b00820083008600870088008900760079007a007c
007d007e0083008500880089008a0073007400750077007a007d00880089
008a008b008c008d008e00900094008b008c008d00910092009300940095
008c008d00910095008f009000910092009300940095008b008c008d008e
008f009000910092009300940095008b008c008d008e008f009000910092
00930096009700980099009c0096009700980099009a009b009c00960099
009a009c0096009700980099009a009b009c009700980099009a009b009c
009700980099009a009b009c0096009d00a000a1009d009e009f00a000a1
00a2009d009f00a000a1009f00a2009d009e009f00a000a100a2009d009e
00a000a1009d009e00a000a2009d00a300a400a500a600a700a300a400a6
00a700a300a400a500a600a700a600a300a700a800a900aa00ab00ac00ac
00a800a900aa00ab00ac00a800a900aa00ab00ac00a800aa00ab00ac00ae
00ad00ae00af00b000b100b200b300b400b500b600b700b800ad00ae00ad
00ae00af00b000b100b200b300b400b500b600b700b800ad00ae00af00b0
00b100b200b300b400b500b600b700b800b300ae00af00b000b200b500b6
00b700b800b900ba00bb00bc00be00c000c100c200c200b900ba00bb00bc
00bd00be00bf00c000c100c200c400ba00bb00be00bf00c000c200c300c4
00b900ba00bf00c000c200c600c700c900ca00cb00cc00cf00c500c700ce
00c500c700c800cf00d000d200d300d7010d00d000d100e900d000fd00d0
05e4000e0041000005ba009c009c005e005e4047645f5e5d5c5b5a595855
54535251504f4e4d4c4b4a494847464544434241403f3e3d3c3b3a393837
36352f2e2d2c2826252423221f181411100f0d0b0a090807060504030201
002c4523466020b02660b004262348482d2c452346236120b02661b00426
2348482d2c45234660b0206120b04660b004262348482d2c4523462361b0
206020b02661b02061b004262348482d2c45234660b0406120b06660b004
262348482d2c4523462361b0406020b02661b04061b004262348482d2c01
10203c003c2d2c20452320b0cd442320b8015a51582320b08d44235920b0
ed51582320b04d44235920b0042651582320b00d44235921212d2c202045
18684420b001602045b04676688a4560442d2c01b10b0a432343650a2d2c
00b10a0b4323430b2d2c00b0282370b101283e01b0282370b10228453ab1
0200080d2d2c2045b00325456164b050515845441b2121592d2c2045b000
4360442d2c01b00643b00743650a2d2c2069b04061b0008b20b12cc08a8c
b8100062602b0c642364615c58b00361592d2c8a03458a8a87b0112bb029
2344b0297ae4182d2c4565b02c234445b02b23442d2c4b525845441b2121
592d2c01b005251023208af500b0016023edec2d2c01b005251023208af5
00b0016123edec2d2c01b0062510f500edec2d2c20b001600110203c003c
2d2c20b001610110203c003c2d2c00b00743b006430b2d2c21210c642364
8bb84000622d2c21b08051580c6423648bb82000621bb200402f2b59b002
602d2c21b0c051580c6423648bb81555621bb200802f2b59b002602d2c0c
6423648bb84000626023212d2c4523456023456023456023766818b08062
202d2cb00426b00426b00425b0042545234520b003266062636820b00326
61658a2344442d2c2045b0005458b040442045b04061441b2121592d2c45
b1302f4523456160b0016069442d2c4b5158b02f2370b01423421b212159
2d2c4b515820b0032545695358441b2121591b2121592d2c45b01443b000
6063b0016069442d2cb02f45442d2c452320458a60442d2c45234560442d
2c4b235158b90033ffe0b134201bb3330034005944442d2cb0164358b003
26458a586466b01f601b64b020606620581b21b04059b001615923586559
b02923442310b029e01b2121212121592d2cb0164358b004254564b02060
6620581b21b04059b0016123586559b0292344b00425b00725082058021b
0359b0052510b004252046b0042523423cb0072510b006252046b00425b0
016023423c2058011b0059b0052510b00425b029e0b0072510b00625b029
e0b00425b00725082058021b0359b00425b003254348b00625b00325b001
6043481b2159212121212121212d2cb0164358b004254564b02060662058
1b21b04059b0016123581b6559b0292344b00525b00825082058021b0359
b0042510b005252046b0042523423cb00425b0072508b0072510b0062520
46b00425b0016023423c2058011b0059b0042510b00525b029e0b0292045
6544b0072510b00625b029e0b00525b00825082058021b0359b00525b003
254348b00425b0072508b00625b00325b0016043481b2159212121212121
212d2c02b00425202046b004252342b0052508b003254548212121212d2c
02b0032520b0042508b0022543482121212d2c452320451820b000502058
23652359236820b040505821b04059235865598a60442d2c4b53234b515a
5820458a60441b2121592d2c4b545820458a60441b2121592d2c4b53234b
515a58381b2121592d2cb000214b5458381b2121592d2cb002435458b046
2b1b21212121592d2cb002435458b0472b1b212121592d2cb002435458b0
482b1b21212121592d2cb002435458b0492b1b212121592d2c208a08234b
538a4b515a5823381b2121592d2c0020b200400325b0062649618b381234
2d2c014623466023466123201020468a61b8ff80628ab140408a70456068
3a2d2c208a2349648a2353583c1b21592d2c4b52587d1b7a592d2cb01200
4b014b54422d2cb1020042b123018851b1400188535a58b9100000208854
58b202010243604259b12401885158b920000040885458b2020202436042
b12401885458b2022002436042004b014b5258b2020802436042591bb940
000080885458b202040243604259b94000008063b80100885458b2020802
43604259b94000010063b80200885458b202100243604259b94000020063
b80400885458b202400243604259595959592d2c451868234b5158232045
2064b04050587c59688a6059442d2cb00016b00225b0022501b001233e00
b002233eb10102060cb00a236542b00b234201b001233f00b002233fb101
02060cb006236542b0072342b00116012d2c20b82000628a6023622d2cb0
072558001b0159b0042510b00325b0022520b8ffff545821cd1bed5921b0
06255cb006255a58b0092b5920b005254ab0042547b004254760b0062547
b0806361b00225b0005558b00325b00725496359b0082558001b0159b004
25b0062549b009255cb009255a58b0092b59b0072546b0806361b0032520
b0005558631b2159612320b0005558b080631b21b08059b0592bb006255c
586959b00425202010b00048233ab0062658001b0159b0052658b003252f
598a12233221212d2cb00625b00a2587b00625b009254ab0005358b00625
b00a251bb00925b0072559b00225b00225070cb005256323b00625636020
b94000040063535821b00426b00426b00a1bb94000040063655158b00426
65b0042665b00a1bb00426b00426b000b00325b003250b0d0ab0092eb007
25b007250b0d0ab00b2eb00525b0052507595920b0005558b00525b00525
87b00725b007250bb0092510b00b25b0092620b8ffff545821cd1bed59b0
0525b0052507b00825b00b254923b00625b0062587b00a2510b00b25c159
20b00051b800522378b00161b00225b00725b0072507b00a25b00d254961
b08062b00525b005250bb00a252338b00625b0062587b00825b008250bb0
0a2510b00b25c4b00625b0062507b00925b00c2549b0032554b8ffa72379
2121212121212121212121212d2c23b0005458b9400000001bb900004000
598ab0005458b9400000001bb90000400059b05b2b2d2c08b0005458b940
0000001bb900004000590db05b2b2d2c8a8a080d8ab0005458b940000000
1bb90000400059b05b2b2d2cb00426b00426080db00426b00426080db05b
2b2d2c204569442d0000000100000005b852618c10e35f0f3cf500190800
00000000bbeb7ccc00000000cbdab383fbfafd8b09ec07b6000000090002
000000000000000100000600fe0001c40aa0fbfafaa009ec000100000000
0000000000000000000008ca040e0000000000000000000001cf000004a1
002300000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000045a00ac000000000000
00000000000000000000000000000000000004ec00ac0000000000000000
0000000003e800ac00000000000000000000000000000000000000000000
000000000000000000000000000000000000050c005b0000000000000000
0000000000000000000000000000000000000000020400ac000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000035d00ac000000000000
000000000000000000000000000006d700ac052a00ac0000000000000000
000000000000000000000000054c00630000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
042200ac0000000000000000045800ac0000000000000000000000000000
0000000000000000000000000000000000000000000003e6000f00000000
0000000000000000052200aa000000000000000000000000000000000000
00000000000000000000000000000000000000000000048a002200000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000003f40010
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000040400a10000000000000000
00000000000000000000000000000000046500a100000000000000000000
0000038000a1000000000000000000000000000000000000000000000000
000000000000000000000000000000000482006c00000000000000000000
00000000000000000000000000000000000001ec00a10000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000002e000a10000000000000000
000000000000000000000000060600a1049100a100000000000000000000
0000000000000000000004aa006600000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000003c5
00a1000000000000000003ed00a100000000000000000000000000000000
00000000000000000000000000000000000000000359001c000000000000
000000000000048d009f0000000000000000000000000000000000000000
000000000000000000000000000000000000000003fd0021000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
043400600000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000002ca00990000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000002e50048000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000001f6
006c00000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000029b010a000000000000
000000000000000000000000000000000000026000ed0000000000000000
000000000000000000000000022400bb0000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000335
008b00000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000002cb002300000000
000000000000000000000000000000000000000000000000000000000000
0000040e00ae000000000000000000000000000000000000000000000000
000000000000000000000000028d00190000000000000000000000000000
00000000000000000000000000000000000000000000039f008d00000000
000000000000000000000000000000000000000000000000000000000000
000002cb0023000000000000000000000000000000000000000000000000
000000000000000000000000040e00ae0000000000000000000000000000
0000000000000000000000000000000000000000000001f8002300000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000001f8002300000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000001f5003100000000
000000000000000000000000000000000000000000000000000000000000
000001f50031000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000002f5001c02e7008e00000000034b
008e02a8008e000000000344005a0000000001a6008e0000000000000000
025b008e046d008e0375008d0375005a02d8008e00000000029b00570000
0000025700040314005702e3001a00000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000002f5001c0000000002e7008e00000000034b008e
02a8008e000000000344005a0000000001a6008e0000000000000000025b
008e046d008e0375008d000000000375005a0000000002d8008e029b0057
025700040314005700000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00a100a100a100a1012f012f012f012f012f012f012f012f012f012f012f
012f012f01e501e501e501e501e501e501e5025202520252025202ce02ce
02ce02ce02ce02ce02ce02ce02ce02ce02ce037503750375037503750375
0375037503c003c003c003c003c003c003c003c003c003c003c003c003c0
03c003c0040e040e040e040e040e040e04bb055605560556055605560556
05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce064706470647
06f206f206f206f206f206f206f206f206f206f2075907590759075907e4
07e407e407e407e407e407e407e407e407e407e408560856085608560856
0856085608560856085608560856085608560856085608bc08bc08bc08bc
08bc08bc08bc08bc08bc08bc08bc08bc08bc092c092c092c092c092c092c
092c096e096e096e096e09c709c709c709c709c709c709c709c709c709c7
09c70a3e0a3e0a3e0a3e0a3e0a3e0a3e0a3e0a6a0a6a0a6a0a6a0a6a0a6a
0a6a0a6a0a6a0a6a0a6a0a6a0a6a0a6a0a6a0a9f0a9f0a9f0a9f0a9f0a9f
0b150b810b810b810b810b810b810bcf0bcf0bcf0bcf0bcf0bcf0bcf0bcf
0bcf0bcf0bcf0bcf0c260c260c260ca00ca00ca00ca00ca00ca00ca00ca0
0ca00ca00ce10ce10ce10ce10d310d310d310d310d310d310d310d310d31
0d310d310d830d830d830d830d830d830d830d830d830d830d830d830d83
0d830d830d830d830d830d830d830d830d830d830d830d830d830d830d83
0d830d830d830d830d830d830d830d830d830d830d830d830e1a0e1a0e1a
0e1a0e1a0e1a0e1a0e1a0e1a0e1a0e1a0e1a0e1a0e1a0e1a0e1a0e1a0e1a
0e1a0e1a0e1a0e1a0e1a0e1a0e1a0e1a0e1a0e1a0e1a0e1a0e1a0e1a0e1a
0e1a0e1a0e1a0e1a0e1a0e1a0e1a0e1a0e1a0e1a0e1a0e1a0e1a0e1a0e1a
0e1a0e1a0e1a0e1a0e1a0e1a0e1a0e1a0e1a0e1a0e1a0e1a0e1a0e1a0e1a
0e1a0e1a0e1a0e1a0e1a0e1a0e1a0e1a0e1a0e1a0e1a0e1a0e1a0e1a0e1a
0e1a0e1a0e1a0e1a0e1a0e1a0e1a0e1a0e1a0e1a0e1a0e1a0e1a0e1a0e1a
0e1a0e1a0e1a0e1a0e1a0e1a0e1a0e1a0e1a0e1a0e1a0e1a0e1a0e1a0e1a
0e1a0e1a0e1a0e1a0e1a0e1a0e930e930e930e930e930e930e930e930e93
0e930e930e930e930e930e930e930e930e930e930e930e930e930e930e93
0e930e930e930e930e930e930e930e930e930e930e930e930e930e930e93
0e930e930e930e930e930e930e930e930e930e930e930e930e930e930e93
0e930e930e930e930e930e930e930e930e930e930e930e930e930e930e93
0e930e930e930e930e930ef90ef90ef90ef90ef90ef90ef90ef90ef90ef9
0ef90ef90ef90ef90f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c
0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c
0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c
0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c
0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c
0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c
0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c
0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c
0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c
0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c
0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c
0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c
0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c
0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c
0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c
0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c
0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c
0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c
0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c
0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c
0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c
0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c
0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c
0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c0f4c
0f4c0f4c0f910f910f910f910f910f910f910fdf0fdf0fdf0fdf0fdf0fdf
102710271027102710271027102710271027102710271027102710271027
102710271027102710271027102710271027102710271027102710271027
102710271027102710271027102710271027102710271027102710271027
102710271027102710271027102710271027102710271027102710271027
1027102710271027106d106d106d106d106d106d106d106d106d106d106d
106d106d106d106d106d106d106d106d106d106d106d106d106d106d106d
106d106d106d106d106d106d106d106d106d106d10b010b010b010b010b0
10b010b010b010b010b0110c110c110c110c110c110c110c110c110c110c
114f114f114f114f114f114f114f114f114f114f11a811a811a811a811a8
11a811a811a811a811a811ea11ea11ea11ea11ea11ea11ea11ea11ea11ea
12a112a112a112a112a112a112a112a112a112a112aa12aa12aa12aa12aa
12aa12aa12aa12aa12aa12aa12aa12aa12aa12aa12ed12ed12ed12ed12ed
12ed12ed12ed12ed12ed12ed12ed12ed12ed12ed132f132f132f132f132f
132f132f132f132f132f1338133813381338133813381338133813381338
133813381338133813381338133813381338133813381338133813381338
133813381338133813381338133813381338133813381338133813381338
133813381338133813381338133813381338133813381338133813381338
133813381338133813381338133813381338133813381338133813381338
133813381338133813381338133813381338133813381338133813381338
133813381338133813381338133813381338133813381338133813381338
133813381338133813381338133813381338133813381338133813381338
133813381338133813381338133813381338133813381338133813381338
133813381338133813381338133813381338133813381338133813381338
133813381338133813381338133813381338133813381338133813381338
133813381338133813381338133813381338133813381338133813381338
133813381338133813381338133813381338133813381338133813381338
133813381338133813381338133813381338133813381338133813381338
133813381338133813381338133813381338133813381338133813381338
133813381338133813381338133813381338133813381338133813381338
133813381338133813381338133813381338133813381338133813381338
133813401348134813501358135813601360136813681368137013781380
1388139013901398139813a013a813eb13eb13eb13eb13eb13eb13eb13eb
13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb
13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb
13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb
13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb
13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb
13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb
13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb
13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb
13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb
13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb
13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb
13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb
13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb
13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb
13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb
13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb
13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb
13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb
13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb
13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb
13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb
13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb
13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb
13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb
13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb
13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb
13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb
13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb
13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb
13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb
13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb
13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb
13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb
13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb
13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb
13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb
13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb
13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb
13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb
13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb
13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb
13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb
13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb
13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb
13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb
13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb
13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb
13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb
13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb
13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb
13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb
13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb
13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb
13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb
13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb
13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb
13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb
13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb
13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb13eb
13eb13eb13eb13eb13eb13eb13eb1437143714a914a914eb1544154415b7
15b715e515e515e5161d168e16fe16fe174517451799181f186218b418b4
18b418b418b418b418b418b418b418b418b418b418b418b418b418b418b4
18b418b418b418b418b418b418b418b418b418b418b418b418b418b418b4
18b418b418b418b418b418b418b418b418b418b418b418b418b418b418b4
18b418b418b418b418b418b418b418b418b418b418b418b418b418b418b4
18b418b418b418b418b418b418b418b418b418b418b418b418b418b418b4
18b418b418b418b418b418b418b418b418b418b418b418b418b418b418b4
18b418b418b418b418b418b418b418b418b418b418b418b418b418b418b4
18b418b418b418b418b418b418b418b418b418b418b418b418b418b418b4
18b418b418b418b418b418b418b418b418b418b418b418b418b418b418b4
18b418b418b418b418b418b418b418b418b418b418b418b418b418b418b4
18b418b418b418b418b418b418b418b418b418b418b418b418b418b418b4
18b418b418b418b418b418b418b418b418b418b418b418b418b418b418b4
18b418b418b418b418b418b418b418b418b418b418b418b418b418b418b4
18b418b418b418b418b418b418b418b418b418b418b418b418b418b418b4
18b418b418b418b418b418b418b418b418b418b418b418b418b418b418b4
18b418b418b418b418b418b418b418b418b418b418b418b418b418b418b4
18b418b418b418b418b418b418b418b418b418b418b418b418b418b418b4
18b418b418b418b418b418b418b418b418b418b418b418b418b418b418b4
18b418b418b418b418b418b418b418b418b418b418b418b418b418b418b4
18b418b418b418b418b418b418b418b418b418b418b418b418b418b418b4
18b418b418b418b418b418b418b418b418b418b418b418b418b418b418b4
18b418b418b418b418b418b418b418b418b418b418b418b418b418b418b4
18b418b418b418b418b418b418b418b418b418b418b418b418b418b418b4
18b418b418b418b418b418b418b418b418b418b418b418b418b418b418b4
18b418b418b418b418b418b418b418b418b418b418b418b418b418b418b4
18b418b418b418b418b418b418b418b418b418b418b418b418b418b418b4
18b418b418b418b418b418b418b418b418b418b418b418b418b418b418b4
18b418b418b418b418b418b418b418b418b418b418b418b418b418b418b4
18b418b418b418b418b418b418b418b418b418b418b418b418b418b418b4
18b418b418b418b418b418b418b418b418b418b418b418b418b418b418b4
18b418b418b418b418b418b418b418b418b418b418b418b418b418b418b4
18b418b418b418b418b418b418b418b418b418b418b418b418b418b418b4
18b418b418b418b418b418b418b418b418b418b418b418b418b418b418b4
18b418b418b418b418b418b418b418b418b418b418b418b418b418b418b4
18b418b418b418b418b418b418b418b418b418b418b418b418b418b418b4
18b418b418b418b418b418b418b418b418b418b418b418b418b418b418b4
18b418b418b418b418b418b418b418b418b418b418b418b418b418b418b4
18b418b418b418b418b418b418b418b418b418b418b418b418b418b418b4
18b418b418b418b418b418b418b418b418b418b418b418b418b418b418b4
18b418b418b418b418b418b418b418b418b418b418b418b418b418b418b4
18b418b418b418b418b418b418b418b418b418b418b418b418b418b418b4
18b418b418b418b418b418b418b418b418b418b418b418b418b418b418b4
18b418b418b418b418b418b418b418b418b418b418b418b418b418b418b4
18b418b418b418b418b418b418b418b418b418b418b418b418b418b418b4
18b418b418b418b418b418b418b418b418b418b418b418b418b418b418b4
18b418b418b418b418b418b418b418b418b418b418b418b418b418b418b4
18b418b418b418b418b418b418b418b418b418b418b418b418b418b418b4
18b418b418b418b418b418b418b418b418b418b418b418b418b418b418b4
18b418b418b418b418b418b418b418b418b418b418b418b418b418b418b4
18b418b418b418b418b418b418b418b418b418b418b418b418b418b418b4
18b418b418b418b418b418b418b418b418b418b418b418b418b418b418b4
18b418b418b418b418b418b418b418b418b418b418b418b418b418b418b4
18b418b418b418b418b418b418b418b418b418b418b418b418b418b418b4
18b418b418b418b418b418b418b418b418b418b418b418b418b418b418b4
18b418b418b418b418b418b418b418b418b418b418b418b418b418b418b4
18b418b418b418b418b418b418b418b418b418b418b418b418b418b418b4
18b418b418b418b418b418b418b418b418b418b418b418b418b418b418b4
18b418b418b418b418b418b418b418b418b418b418b418b418b418b418b4
18b418b418b418b418b418b418b418b418b418b418b418b418b418b418b4
18b418b418b418b418b418b418b418b418b418b418b418b418b418b418b4
18b418b418b418b418b418b418b418b418b418b418b418b418b418b418b4
18b418b418b418b418b418b418b418b418b418b418b418b418b418b418b4
18b418b418b418b418b418b418b418b418b418b418b418b418b418b418b4
18b418b418b418b418b418b418b418b418b418b418b418b418b418b418b4
18b418b418b418b418b418b418b418b418b418b418b418b418b418b418b4
18b418b418b418b418b418b418b418b418b418b418b418b418b418b418b4
18b418b418b418b418b418b418b418b418b418b418b418b418b418b418b4
18b418b418b418b418b418b418b418b418b418b418b418b418b418b418b4
18b418b418b418b418b418b418b418b418b418b418b418b418b418b418b4
18b418b418b418b418b418b418b418b418b418b418b418b418b418b418b4
18b418b418b418b418b418b418b418b418b418b418b418b418b418b418b4
18b418b418b418b418b418b418b418b418b418b418b418b418b418b418b4
18b418b418b418b418b418b418b418b418b418b418b418b418b418b418b4
18b418b418b418b418b418b418b418b418b418b418b418b418b418b418b4
18b418b418b418b418b418b418b418b418b418b418b418b418b418b418b4
18b418b418b418b418b418b418b418b418b418b418b418b418b418b418b4
18b418b418b418b418b418b418b418b418b418b418b418b418b418b418b4
18b418b418b418b418b418b418b418b418b418b418b418b418b418b418b4
18b418b418b418b418b418b418b418b418b418b418b418b418b418b418b4
18b418b418b418b418b418b418b418b418b418b418b418b418b418b418b4
18b418b418b418b418b418b418b418b418b418b418b418b418b418b418b4
18b418b418b418b418b418b418b418b418b418b418b418b418b418b418b4
18b418b418b418b418b418b418b418b418b418b418b418b418b418b418b4
18b418b418b418b418b418b418b418b418b418b418b418b418b418b418b4
18b418b418b418b418b418b418b418b418b418b418b418b418b418b418b4
18b418b418b418b418b418b418b418b418b418b418b418b418b418b418b4
18b418b418b418b418b418b418b418b418b418b418b418b418b418b418b4
18b418b418b418b418b418b418b418b418b418b418b418b418b418b418b4
18b418b418b418b418b418b418b418b418b418b418b418b418b418b418b4
18b418b418b418b418b418b418b418b418b418b418b418b418b418b418b4
18b418b418b418b418b418b418b418b418b418b418b418b418b418b418b4
18b418b418b418b418b418b418b418b418b418b418b418b418b418b418b4
18b418b418b418b418b418b418b418b418b418b418b418b418b418b418b4
18b418b418b418b418b418b418b418b418b418b418b418b418b418b418b4
18b418b418b418b418b418b418b418b418b418b418b418b418b418b418b4
18b418b418b418b418b418b418b418b418b418b418b418b418b418b418b4
18b418b418b418b418b418b418b418b418b418b418b418b418b418b418b4
18b418b418b418b418b418b418b418b418b418b418b418b418b418b418b4
18b418b418b418b418b418b418b418b418b418b418b418b418b418b418b4
18b418b418b418b418b418b418b418b418b418b418b418b418b418b418b4
18b418b418b418b418b418b418b418b418b418b418b418b418b418b418b4
18b418b418b418b418b418b418b418b418b418b418b418b418b418b418b4
18b418b418b418b418b418b418b418b418b418b418b418b418b418b418b4
18b418b418b418b418b418b418b418b418b418b418b418b418b418b418b4
18b418b418b418b418b418b418b418b418b418b418b418b418b418b418b4
18b418b418b418b418b418b418b418b418b418b418b418b418b418b418b4
18b418b418b418b418b418b418b418b418b418b418b418b418b418b418b4
18b418b418b418b418b418b418b418b418b418b418b418b418b418b418b4
18b418b418b418b418b418b418b418b40000000100000f26004f00050045
000300020010002f0065000011902410000100010000002d022200000003
00000000006400000000000300000001000e00640000000300000002000e
03040000000300000003002403120000000300000004000e006400000003
00000005001803360000000300000006000e006400000003000000070076
034e0000000300000008002a000e0000000300000009002003c400000003
0000000a02a00064000000030000000b005603e4000000030000000c002a
043a000000030000000d02980464000000030000000e006c06fc00010000
000000000032076800010000000000010007079a00010000000000020007
08ea0001000000000003001208f100010000000000040007079a00010000
00000005000c090300010000000000060007079a0001000000000007003b
090f00010000000000080015076f00010000000000090010094a00010000
0000000a0150079a000100000000000b002b095a000100000000000c0015
0985000100000000000d014c099a000100000000000e00360ae600030001
04090000006400000003000104090001000e00640003000104090002000e
03040003000104090003002403120003000104090004000e006400030001
04090005001803360003000104090006000e006400030001040900070076
034e0003000104090008002a000e0003000104090009002003c400030001
0409000a02a00064000300010409000b005603e4000300010409000c002a
043a000300010409000d02980464000300010409000e006c06fc00a90020
00320030003100320020004d006900630072006f0073006f006600740020
0043006f00720070006f0072006100740069006f006e002e00200041006c
006c00200052006900670068007400730020005200650073006500720076
00650064002e00430061006c006900620072006900200069007300200061
0020006d006f006400650072006e002000730061006e0073002000730065
007200690066002000660061006d0069006c007900200077006900740068
00200073007500620074006c006500200072006f0075006e00640069006e
006700730020006f006e0020007300740065006d007300200061006e0064
00200063006f0072006e006500720073002e002000490074002000660065
0061007400750072006500730020007200650061006c0020006900740061
006c006900630073002c00200073006d0061006c006c0020006300610070
0073002c00200061006e00640020006d0075006c007400690070006c0065
0020006e0075006d006500720061006c00200073006500740073002e0020
004900740073002000700072006f0070006f007200740069006f006e0073
00200061006c006c006f00770020006800690067006800200069006d0070
00610063007400200069006e002000740069006700680074006c00790020
0073006500740020006c0069006e006500730020006f0066002000620069
006700200061006e006400200073006d0061006c006c0020007400650078
007400200061006c0069006b0065002e002000430061006c006900620072
0069002700730020006d0061006e00790020006300750072007600650073
00200061006e006400200074006800650020006e00650077002000720061
007300740065007200690073006500720020007400650061006d00200075
007000200069006e0020006200690067006700650072002000730069007a
0065007300200074006f002000720065007600650061006c002000610020
007700610072006d00200061006e006400200073006f0066007400200063
00680061007200610063007400650072002e0052006500670075006c0061
0072004d006900630072006f0073006f00660074003a002000430061006c
006900620072006900560065007200730069006f006e00200035002e0037
003200430061006c00690062007200690020006900730020006100200074
0072006100640065006d00610072006b0020006f00660020007400680065
0020004d006900630072006f0073006f00660074002000670072006f0075
00700020006f006600200063006f006d00700061006e006900650073002e
004c007500630028006100730029002000640065002000470072006f006f
00740068007400740070003a002f002f007700770077002e006d00690063
0072006f0073006f00660074002e0063006f006d002f007400790070006f
006700720061007000680079002f006300740066006f006e007400730068
007400740070003a002f002f0066006f006e007400660061006200720069
006b002e0063006f006d0059006f00750020006d00610079002000750073
00650020007400680069007300200066006f006e00740020006100730020
007000650072006d00690074007400650064002000620079002000740068
0065002000450055004c004100200066006f007200200074006800650020
00700072006f006400750063007400200069006e00200077006800690063
00680020007400680069007300200066006f006e00740020006900730020
0069006e0063006c007500640065006400200074006f0020006400690073
0070006c0061007900200061006e00640020007000720069006e00740020
0063006f006e00740065006e0074002e00200059006f00750020006d0061
00790020006f006e006c0079002000280069002900200065006d00620065
00640020007400680069007300200066006f006e007400200069006e0020
0063006f006e00740065006e00740020006100730020007000650072006d
00690074007400650064002000620079002000740068006500200065006d
00620065006400640069006e006700200072006500730074007200690063
00740069006f006e007300200069006e0063006c00750064006500640020
0069006e0020007400680069007300200066006f006e0074003b00200061
006e006400200028006900690029002000740065006d0070006f00720061
00720069006c007900200064006f0077006e006c006f0061006400200074
00680069007300200066006f006e007400200074006f0020006100200070
00720069006e0074006500720020006f00720020006f0074006800650072
0020006f0075007400700075007400200064006500760069006300650020
0074006f002000680065006c00700020007000720069006e007400200063
006f006e00740065006e0074002e0068007400740070003a002f002f0077
00770077002e006d006900630072006f0073006f00660074002e0063006f
006d002f007400790070006f006700720061007000680079002f0066006f
006e00740073002f00640065006600610075006c0074002e006100730070
0078a92032303132204d6963726f736f667420436f72706f726174696f6e
2e20416c6c205269676874732052657365727665642e43616c6962726920
69732061206d6f6465726e2073616e732073657269662066616d696c7920
7769746820737562746c6520726f756e64696e6773206f6e207374656d73
20616e6420636f726e6572732e204974206665617475726573207265616c
206974616c6963732c20736d616c6c20636170732c20616e64206d756c74
69706c65206e756d6572616c20736574732e204974732070726f706f7274
696f6e7320616c6c6f77206869676820696d7061637420696e2074696768
746c7920736574206c696e6573206f662062696720616e6420736d616c6c
207465787420616c696b652e2043616c696272692773206d616e79206375
7276657320616e6420746865206e65772072617374657269736572207465
616d20757020696e206269676765722073697a657320746f207265766561
6c2061207761726d20616e6420736f6674206368617261637465722e5265
67756c61724d6963726f736f66743a2043616c6962726956657273696f6e
20352e373243616c6962726920697320612074726164656d61726b206f66
20746865204d6963726f736f66742067726f7570206f6620636f6d70616e
6965732e4c7563286173292064652047726f6f74687474703a2f2f777777
2e6d6963726f736f66742e636f6d2f7479706f6772617068792f6374666f
6e7473687474703a2f2f666f6e7466616272696b2e636f6d596f75206d61
7920757365207468697320666f6e74206173207065726d69747465642062
79207468652045554c4120666f72207468652070726f6475637420696e20
7768696368207468697320666f6e7420697320696e636c7564656420746f
20646973706c617920616e64207072696e7420636f6e74656e742e20596f
75206d6179206f6e6c792028692920656d626564207468697320666f6e74
20696e20636f6e74656e74206173207065726d6974746564206279207468
6520656d62656464696e67207265737472696374696f6e7320696e636c75
64656420696e207468697320666f6e743b20616e6420286969292074656d
706f726172696c7920646f776e6c6f6164207468697320666f6e7420746f
2061207072696e746572206f72206f74686572206f757470757420646576
69636520746f2068656c70207072696e7420636f6e74656e742e68747470
3a2f2f7777772e6d6963726f736f66742e636f6d2f7479706f6772617068
792f666f6e74732f64656661756c742e61737078000000>
<b2090320b80284b40918014a20b80283b40918014a20b80282b40918014a
20b80281b40918014a20b80280b40918014a20b8027fb40918014a20b802
7eb40918014a20b8027db40918014a20b8027cb40918014a20b8027bb409
18014a20b8027ab40918014a20b80279b40918014a20b80278b40918014a
20b80277b40918014a20b80276b40918014a20b80275b40918014a20b802
74b40918014a20b80273b40918014a20b80271b40918014a20b80270b409
18014a20b8026fb40918014a20b8026eb40918014a20b8026db40918014a
20b8026cb40918014a20b8026bb40918014a20b8026ab40918014a20b802
69b40918014a20b80268b40918014a20b80267b40918014a20b80266b409
18014a20b80265b40918014a20b80264b40918014a20b80263b40918014a
20b80262b40918014a20b80261b40918014a20b80260b40918014a20b802
5fb40918014a20b8025eb40918014a20b8025db40918014a20b8025cb409
18014a20b8025bb40918014a20b8025ab40918014a20b80259b40918014a
20b80258b40918014a20b80257b40918014a20b80256b40918014a20b802
55b40918014a20b80254b40918014a20b80253b40918014a20b80252b409
18014a20b80251b40918014a20b80250b40918014a20b8024fb40918014a
20b8024eb40918014a20b8024db40918014a20b8024cb40918014a20b802
4bb40918014a20b8024ab40918014a20b80249b40918014a20b80248b409
18014a20b80247b40918014a20b80246b40918014a20b80245b40918014a
20b80244b40918014a20b80243b40918014a20b80242b40918014a20b802
41b40918014a20b80240b40918014a20b8023fb40918014a20b8023eb409
18014a20b8023db40918014a20b8023cb40918014a20b8023bb40918014a
20b8023ab40918014a20b80239b40918014a20b80238b40918014a20b802
37b40918014a20b80236b40918014a20b80235b40918014a20b80234b409
18014a20b80233b40918014a20b80232b40918014a20b80231b40918014a
20b80230b40918014a20b8022fb40918014a20b8022eb40918014a20b802
2db40918014a20b8022cb40918014a20b8022bb40918014a20b8022ab409
18014a20b80229b40918014a20b80228b40918014a20b80227b40918014a
20b80226b40918014a20b80225b40918014a20b80224b40918014a20b802
23b40918014a20b80222b40918014a20b80221b40918014a20b80220b409
18014a20b8021fb40918014a20b8021eb40918014a20b8021db40918014a
20b8021cb40918014a20b8021bb40918014a20b8021ab40918014a20b802
19b40918014a20b80218b40918014a20b80217b40918014a20b80216b409
18014a20b80215b40918014a20b80214b40918014a20b80213b40918014a
20b80212b40918014a20b80211b40918014a20b80210b40918014a20b802
0fb40918014a20b8020eb40918014a20b8020db40918014a20b8020cb409
18014a20b8020bb40918014a20b8020ab40918014a20b80209b40918014a
20b80208b40918014a20b80207b40918014a20b80206b40918014a20b802
05b40918014a20b80204b40918014a20b80203b40918014a20b80202b409
18014a20b80201b40918014a20b80200b40918014a20b801ffb40918014a
20b801feb40918014a20b801fdb40918014a20b801fcb40918014a20b801
fbb40918014a20b801fab40918014a20b801f9b40918014a20b801f8b409
18014a20b801f7b40918014a20b801f6b40918014a20b801f5b40918014a
20b801f4b40918014a20b801f3b40918014a20b801f2b40918014a20b801
f1b40918014a20b801f0b40918014a20b801efb40918014a20b801eeb409
18014a20b801edb40918014a20b801ecb40918014a20b801ebb40918014a
20b801eab40918014a20b801e9b40918014a20b801e8b40918014a20b801
e7b40918014a20b801e6b40918014a20b801e5b40918014a20b801e4b409
18014a20b801e3b40918014a20b801e2b40918014a20b801e1b40918014a
20b801e0b40918014a20b801dfb40918014a20b801deb40918014a20b801
ddb40918014a20b801dcb40918014a20b801dbb40918014a20b801dab409
18014a20b801d9b40918014a20b801d8b40918014a20b801d7b40918014a
20b801d6b40918014a20b801d5b40918014a20b801d4b40918014a20b801
d3b40918014a20b801d2b40918014a20b801d1b40918014a20b801d0b409
18014a20b801cfb40918014a20b801ceb40918014a20b801cdb40918014a
20b801ccb40918014a20b801cbb40918014a20b801cab40918014a20b801
c9b40918014a20b801c8b40918014a20b801c7b40918014a20b801c6b409
18014a20b801c5b40918014a20b801c4b40918014a20b801c3b40918014a
20b801c2b40918014a20b801c1b40918014a20b801c0b40918014a20b801
bfb40918014a20b801beb40918014a20b801bdb40918014a20b801bcb409
18014a20b801bbb40918014a20b801bab40918014a20b801b9b40918014a
20b801b8b40918014a20b801b7b40918014a20b801b6b40918014a20b801
b5b40918014a20b801b4b40918014a20b801b3b40918014a20b801b2b409
18014a20b801b1b40918014a20b801b0b40918014a20b801afb40918014a
20b801aeb40918014a20b801adb40918014a20b801acb40918014a20b801
abb40918014a20b801aab40918014a20b801a9b40918014a20b801a8b409
18014a20b801a7b40918014a20b801a6b40918014a20b801a5b40918014a
20b801a4b40918014a20b801a3b40918014a20b801a2b40918014a20b801
a1b40918014a20b801a0b40918014a20b8019fb40918014a20b8019eb409
18014a20b8019db40918014a20b8019cb40918014a20b8019bb40918014a
20b8019ab40918014a20b80199b40918014a20b80198b40918014a20b801
97b40918014a20b80196b40918014a20b80195b40918014a20b80194b409
18014a20b80193b40918014a20b80192b40918014a20b80191b40918014a
20b80190b40918014a20b8018fb40918014a20b8018eb40918014a20b801
8db40918014a20b8018cb40918014a20b8018bb40918014a20b8018ab409
18014a20b80189b40918014a20b80188b40918014a20b80187b40918014a
20b80186b40918014a20b80185b40918014a20b80184b40918014a20b801
83b40918014a20b80182b40918014a20b80181b40918014a20b80180b409
18014a20b8017fb40918014a20b8017eb40918014a20b8017db40918014a
20b8017cb40918014a20b8017bb40918014a20b8017ab40918014a20b801
79b40918014a20b80178b40918014a20b80177b40918014a20b80176b409
18014a20b80175b40918014a20b80174b40918014a20b80173b40918014a
20b80172b40918014a20b80171b40918014a20b80170b40918014a20b801
6fb40918014a20b8016eb40918014a20b8016db40918014a20b8016cb409
18014a20b8016bb40918014a20b8016ab40918014a20b80169b40918014a
20b80168b40918014a20b80167b40918014a20b80166b40918014a20b801
65b40918014a20b80164b40918014a20b80163b40918014a20b80162b409
18014a20b80161b40918014a20b80160b40918014a20b8015fb40918014a
20b8015eb40918014a20b8015db40918014a20b8015cb40918014a20b801
5bb40918014a20b8015ab40918014a20b80159b40918014a20b80158b409
18014a20b80157b40918014a20b80156b40918014a20b80155b40918014a
20b80154b40918014a20b80153b40918014a20b80152b40918014a20b801
50b40918014a20b8014fb40918014a20b8014eb40918014a20b8014cb409
18014a20b8014bb40918014a20b8014ab40918014a20b80149b40918014a
20b80148b40918014a20b80147b40918014a20b80146b40918014a20b801
45b40918014a20b80144b40918014a20b80143b30918014ab80284b21e3e
1fb80283b21e151fb80282b21e3e1fb80281b21e3a1fb80280b21e3e1fb8
027fb21e3e1fb8027eb21e0c1fb8027db21e3e1fb8027cb21e3e1fb8027b
b21e3e1fb8027ab21e3e1fb80279b21d411fb80278b21d431fb80277b21d
431fb80276b21d431fb80275b21d411fb80274b21d431fb80273b21d431f
b80272b21d411fb80271b21d421fb80270b21d421fb8026fb21d421fb802
6eb21d431fb8026db21d431fb8026cb21d431fb8026bb21c451fb8026ab2
1c451fb80269b21c451fb80268b21c451fb80267b21c451fb80266b21c44
1fb80265b21c451fb80264b21c451fb80263b21c451fb80262b21c451fb8
0261b21c451fb80260b21c451fb8025fb21c451fb8025eb21c441fb8025d
b21c451fb8025cb21c451fb8025bb21c451fb8025ab21c451fb80259b21c
451fb80258b21c451fb80257b21c451fb80256b21c451fb80255b21c451f
b80254b21c451fb80253b21c451fb80252b21c451fb80251b21c451fb802
50b21c451fb8024fb21c451fb8024eb21c451fb8024db21c451fb8024cb2
1c451fb8024bb21c451fb8024ab21b491fb80249b21b491fb80248b21b4a
1fb80247b21b4a1fb80246b21b4b1fb80245b21b4c1fb80244b21b4c1fb8
0243b21b4c1fb80242b21b4b1fb80241b21b491fb80240b21b491fb8023f
b21b4a1fb8023eb21b4a1fb8023db21b4a1fb8023cb21b4b1fb8023bb21b
4b1fb8023ab21b4c1fb80239b21b4c1fb80238b21b4c1fb80237b21b4c1f
b80236b21b4c1fb80235b21b491fb80234b21b491fb80233b21b4a1fb802
32b21b4a1fb80231b21b4a1fb80230b21b4b1fb8022fb21b4b1fb8022eb2
1b4c1fb8022db21b4c1fb8022cb21b4c1fb8022bb21b4c1fb8022ab21b4c
1fb80229b21b4c1fb80228b21b4c1fb80227b21b491fb80226b21b491fb8
0225b21b4a1fb80224b21b4a1fb80223b21b4a1fb80222b21b4b1fb80221
b21b4b1fb80220b21b4c1fb8021fb21b4c1fb8021eb21b4c1fb8021db21b
4c1fb8021cb21b4c1fb8021bb21b4c1fb8021ab21a4e1fb80219b21a4e1f
b80218b21a4f1fb80217b21a4f1fb80216b21a4e1fb80215b21a4e1fb802
14b21a4f1fb80213b21a4f1fb80212b21a4f1fb80211b21a4e1fb80210b2
1a4e1fb8020fb21a4f1fb8020eb21a4f1fb8020db21a4f1fb8020cb21a4e
1fb8020bb21a4e1fb8020ab21a4e1fb80209b21a4f1fb80208b21a4f1fb8
0207b21a4f1fb80206b219501fb80205b219511fb80204b219511fb80203
b219501fb80202b219511fb80201b219511fb80200b219511fb801ffb219
511fb801feb219501fb801fdb219511fb801fcb219511fb801fbb219511f
b801fab219501fb801f9b219511fb801f8b219511fb801f7b219511fb801
f6b219511fb801f5b218541fb801f4b218531fb801f3b218541fb801f2b2
18541fb801f1b218541fb801f0b218531fb801efb218541fb801eeb21854
1fb801edb218541fb801ecb218531fb801ebb218531fb801eab218541fb8
01e9b218541fb801e8b218541fb801e7b218541fb801e6b218531fb801e5
b218541fb801e4b218531fb801e3b218541fb801e2b218541fb801e1b218
541fb801e0b218531fb801dfb218531fb801deb218541fb801ddb218541f
b801dcb218541fb801dbb218541fb801dab218531fb801d9b218541fb801
d8b218541fb801d7b217571fb801d6b217561fb801d5b217561fb801d4b2
17571fb801d3b217571fb801d2b217571fb801d1b217571fb801d0b21756
1fb801cfb217561fb801ceb217571fb801cdb217571fb801ccb217571fb8
01cbb217571fb801cab217561fb801c9b217561fb801c8b217571fb801c7
b217571fb801c6b217571fb801c5b217571fb801c4b217571fb801c3b217
561fb801c2b217571fb801c1b217571fb801c0b217571fb801bfb217561f
b801beb217561fb801bdb217571fb801bcb217571fb801bbb217571fb801
bab217571fb801b9b217571fb801b8b217561fb801b7b217571fb801b6b2
17571fb801b5b217571fb801b4b217571fb801b3b2163f1fb801b2b2165b
1fb801b1b2165b1fb801b0b2165b1fb801afb2165b1fb801aeb2165b1fb8
01adb2165b1fb801acb2165b1fb801abb2165b1fb801aab2163e1fb801a9
b2163f1fb801a8b2163f1fb801a7b2165b1fb801a6b2165b1fb801a5b216
5b1fb801a4b2165b1fb801a3b2165b1fb801a2b2165b1fb801a1b2165b1f
b801a0b2165b1fb8019fb2163e1fb8019eb2163f1fb8019db2163f1fb801
9cb2165b1fb8019bb2165b1fb8019ab2165b1fb80199b2165b1fb80198b2
163e1fb80197b2165b1fb80196b2165b1fb80195b2165b1fb80194b2163e
1fb80193b2163f1fb80192b2163f1fb80191b2165b1fb80190b2165b1fb8
018fb2165b1fb8018eb2165b1fb8018db2165b1fb8018cb2163f1fb8018b
b2165b1fb8018ab2165b1fb80189b2165b1fb80188b2165b1fb80187b216
5b1fb80186b215611fb80185b215621fb80184b215621fb80183b215661f
b80182b215661fb80181b215551fb80180b215451fb8017fb215361fb801
7eb215361fb8017db215611fb8017cb215621fb8017bb215621fb8017ab2
15641fb80179b215661fb80178b215661fb80177b215661fb80176b21566
1fb80175b215661fb80174b215661fb80173b215451fb80172b215621fb8
0171b215621fb80170b215631fb8016fb215641fb8016eb215661fb8016d
b215661fb8016cb215661fb8016bb215661fb8016ab215661fb80169b215
621fb80168b215621fb80167b215611fb80166b215641fb80165b215641f
b80164b215661fb80163b215661fb80162b215661fb80161b215661fb801
60b215661fb8015fb215661fb8015eb215551fb8015db215451fb8015cb2
15451fb8015bb215361fb8015ab215611fb80159b215621fb80158b21562
1fb80157b215631fb80156b215641fb80155b215661fb80154b215661fb8
0153b215661fb80152b215661fb80151b214401fb80150b214551fb8014f
b214561fb8014eb214831fb8014db2142d1fb8014cb214401fb8014bb214
401fb8014ab214411fb80149b214401fb80148b214401fb80147b214411f
b80146b2147e1fb80145b214871fb80144b2147f1fb80143b214801fb801
42b212461fb80141b212461fb80140b212461fb8013fb212461fb8013eb2
12441fb8013db212461fb8013cb211591fb8013bb211591fb8013ab2115b
1fb80139b2115b1fb80138b211471fb80137b211581fb80136b2115a1fb8
0135b2115b1fb80134b2115b1fb80133b2112c1fb80132b211471fb80131
b211551fb80130b211571fb8012fb211571fb8012eb211581fb8012db211
591fb8012cb211591fb8012bb2115a1fb8012ab2115a1fb80129b2115b1f
b80128b2115b1fb80127b2115b1fb80126b2115b1fb80125b211561fb801
24b211561fb80123b211571fb80122b211581fb80121b211591fb80120b2
115a1fb8011fb2115a1fb8011eb2115b1fb8011db2115b1fb8011cb2115b
1fb8011bb2115b1fb8011ab2115b1fb80119b2105d1fb80118b2105e1fb8
0117b2105f1fb80116b2105f1fb80115b2105f1fb80114b2105f1fb80113
b2105f1fb80112b2105d1fb80111b2105e1fb80110b2105f1fb8010fb210
5f1fb8010eb2105f1fb8010db2105f1fb8010cb2105d1fb8010bb2105e1f
b8010ab2105f1fb80109b2105f1fb80108b2105f1fb80107b2105f1fb801
06b2105d1fb80105b2105e1fb80104b2105f1fb80103b2105f1fb80102b2
105f1fb80101b2105f1fb8010040ff0f621fff0f621ffe0f631ffd0f641f
fc0f621ffb0f621ffa0f621ff90f631ff80f641ff70f641ff60f641ff50f
641ff40f621ff30f621ff20f631ff10f641ff00f641fef0f641fee0f641f
ed0f621fec0f621feb0f631fea0f641fe90f641fe80f641fe70f641fe60e
671fe50e681fe40e681fe30e681fe20e681fe10e671fe00e681fdf0e681f
de0e681fdd0e671fdc0e681fdb0e681fda0e681fd90e681fd80d6b1fd70d
311fd60d6b1fd50d6c1fd40d261fd30d261fd20d6c1fd10d2b1fd00d2b1f
cf0d2b1fce0d6b1fcd0d6c1fcc0d6d1fcb0d6b1fca0d6c1fc90d6d1fc80d
6a1fc70d691fc60d681fc50d671fc40d261fc30d311fc20d311fc10d311f
40ffc00d311fbf0d311fbe0d311fbd0c711fbc0c721fbb0c731fba0c741f
b90c741fb80c741fb70c711fb60c711fb50c721fb40c731fb30c741fb20c
741fb10c741fb00c741faf0b791fae0b7a1fad0b7c1fac0b7d1fab0b7e1f
aa0b7e1fa90b7e1fa80b7e1fa70b7e1fa60b7e1fa50b2d1fa40b7e1fa30b
7e1fa20b791fa10b7e1fa00b6b1f9f0b791f9e0b7e1f9d0b7e1f9c0b791f
9b0b7a1f9a0b7c1f990b7d1f980b7e1f970b7e1f960b7e1f950b7e1f940b
7e1f930b7e1f920b6b1f910b2d1f900a4e1f8f0a4f1f8e0a671f8d0aa51f
8c0aa71f8503251f8403381f8301381f8255805581ab80557f557d557eab
7d550b7d010b7d1b7d4b7d7b7dab7ddb7d4012060a7c557a557bab7a5579
55775578ab7755ba028600660285403c5576ab755504751475747503f475
01ab750144750130750102007510752075030c7455725573ab7255007250
728072b072043bb072e072020072010ab8ffc0b3721b1e46b8ffc0407c72
0d104671556f5570ab6f556e666d556a03251f6938675568ab6755663864
5565ab645563386255613860555f385d555eab5d555c385a555bab5a5559
3858555703251f5638545555ab54555338515552ab51554f384e554e0325
1f4d384b554cab4b554a38485549ab4855473846554503381f001c101c20
1c0310b8ffc0404e1c1b1e46001b0142301b401be01bf01b04001bb01bc0
1b03120f1a1f1a02290f1901434f19016f197f198f19030f18cf18024018
292c460f17cf17df17ef1704134017292e460016101620160315b8ffc0b3
164d5446b8ffc0b3163f4446b8ffc0b316313546b8ffc0404d162326460f
15010f151f1502451f15010011e011f0110315bf10cf10020f0f010f0fff
0f02400f3135460f0e1f0e020f0e1f0eff0e03400e3137460f0d1f0d020f
0d1f0dff0d0316400d313746b8ffc040270c5054460f0b1f0b02553f0b4f
0b02400b3f4346400b2d30460003012001010001100120010308b8ffc0b3
01151f46b80100b316010501b80190b154532b2b4bb80800524bb008505b
b00188b02553b00188b040515ab00688b000555a5b58b101018e59b10102
4354b0144b515a58b101018e59858d8d00421d4bb01d5358b0a01d594bb0
805358b0401d594bb0ff5358b0001db1160042592b5e7375732b2b745e73
2b2b5e73742b73742b7374745e7301755e73742b2b2b2b5e732b5e732b73
74755e735e735e73755e732b5e73002b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b5e73755e732b2b5e735f7373737374
2b2b2b2b2b2b5e73742b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b012b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2bb1000243545841ff02840064028300640282
00640281006402800064027f0064027e0064027d0064027c0064027b0064
027a00640279006402780064027700640276006402750064027400640273
00640271006402700064026f0064026e0064026d0064026c0064026b0064
026a00640269006402680064026700640266006402650064026400640263
0064026200640261006402600064025f0064025e0064025d0064025c0064
025b0064025a006402590064025800640257006402560064025500640254
006402530064025200640251006402500064024f0064024e0064024d0064
024c0064024b0064024a0064024900640248006402470064024600640245
00640244006402430064024200640241006402400064023f0064023e0064
023d0064023c0064023b0064023a00640239006402380064023700640236
0064023500640234006402330064023200640231006402300064022f0064
022e0064022d0064022c0064022b0064022a006402290064022800640227
006402260064022500640224006402230064022200640221006402200064
021f0064021e0064021d0064021c0064021b0064021a0064021900640218
006402170064021600640215006402140064021300640212006402110064
02100064020f0064020e0064020d0064020c0064020b0064020a00640209
006402080064020700640206006402050064020441ff0064020300640202
0064020100640200006401ff006401fe006401fd006401fc006401fb0064
01fa006401f9006401f8006401f7006401f6006401f5006401f4006401f3
006401f2006401f1006401f0006401ef006401ee006401ed006401ec0064
01eb006401ea006401e9006401e8006401e7006401e6006401e5006401e4
006401e3006401e2006401e1006401e0006401df006401de006401dd0064
01dc006401db006401da006401d9006401d8006401d7006401d6006401d5
006401d4006401d3006401d2006401d1006401d0006401cf006401ce0064
01cd006401cc006401cb006401ca006401c9006401c8006401c7006401c6
006401c5006401c4006401c3006401c2006401c1006401c0006401bf0064
01be006401bd006401bc006401bb006401ba006401b9006401b8006401b7
006401b6006401b5006401b4006401b3006401b2006401b1006401b00064
01af006401ae006401ad006401ac006401ab006401aa006401a9006401a8
006401a7006401a6006401a5006401a4006401a3006401a2006401a10064
01a00064019f0064019e0064019d0064019c0064019b0064019a00640199
006401980064019700640196006401950064019400640193006401920064
0191006401900064018f0064018e0064018d0064018c0064018b0064018a
006401890064018800640187006401860064018500644180018400640183
0064018200640181006401800064017f0064017e0064017d0064017c0064
017b0064017a006401790064017800640177006401760064017500640174
006401730064017200640171006401700064016f0064016e0064016d0064
016c0064016b0064016a0064016900640168006401670064016600640165
00640164006401630064016200640161006401600064015f0064015e0064
015d0064015c0064015b0064015a00640159006401580064015700640156
00640155006401540064015300640152006401500064014f0064014e0064
014c0064014b0064014a0064014900640148006401470064014600640145
006401440064014300642b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b59
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b185f5e00>
[12649 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
2 0 0 <00050000fe7303d2050e000300070039004d004e005bbc000d0152001600
3a01b5b5154444082d07be0143000200200154000800010143400f04020d
b71a1a3f23b735068d031149b8012db43f078d0202003ffddefdce2ffdde
ed12392fed012fdde1dee110f1ce11392f33e1d4e1313001112111011121
1101140e020707140623222e02352726363333323e0235342623220e0223
222e02353436373e0333321e0203140e0223222e0235343e0233321e0201
03d2fc5a034ffd06027e233f5633051e1a0f140d0605021c18122d3c2510
535b253c2e1d0703070603050807283742224b6c4522da07111d15161d12
0808121d16151d1107fddb050efaf2050efb43046cfb9403063b5c3f2403
980a0802040606b81e18192a3b2149560f1310040b13101116080712110c
28445cfd86151c120808121c15151d120808121dfd4d>PBAAAA+Calibri AddT42Char 
PBAAAA+Calibri /CharStrings get begin
end
end
%ADOEndSubsetFont
reset_gvm
/FCFNLW+Calibri /PBAAAA+Calibri findfont ct_VMDictPut
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndPageSetup

30000 VM?
Pscript_WinNT_Incr begin
%%BeginResource: file Pscript_WinNT_Compat 5.0 0
userdict/Pscript_WinNT_Compat 19 dict dup begin/bd{bind def}bind def/ld{load
def}bd/$x matrix def/ANSIVec[16#0/grave 16#1/acute 16#2/circumflex 16#3/tilde
16#4/macron 16#5/breve 16#6/dotaccent 16#7/dieresis 16#8/ring 16#9/cedilla 16#A
/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi 16#27/quotesingle 16#60
/grave 16#7C/bar 16#82/quotesinglbase 16#83/florin 16#84/quotedblbase 16#85
/ellipsis 16#86/dagger 16#87/daggerdbl 16#88/circumflex 16#89/perthousand 16#8A
/Scaron 16#8B/guilsinglleft 16#8C/OE 16#91/quoteleft 16#92/quoteright 16#93
/quotedblleft 16#94/quotedblright 16#95/bullet 16#96/endash 16#97/emdash 16#98
/tilde 16#99/trademark 16#9A/scaron 16#9B/guilsinglright 16#9C/oe 16#9F
/Ydieresis 16#A0/space 16#A1/exclamdown 16#A4/currency 16#A5/yen 16#A6
/brokenbar 16#A7/section 16#A8/dieresis 16#A9/copyright 16#AA/ordfeminine 16#AB
/guillemotleft 16#AC/logicalnot 16#AD/hyphen 16#AE/registered 16#AF/macron
16#B0/degree 16#B1/plusminus 16#B2/twosuperior 16#B3/threesuperior 16#B4/acute
16#B5/mu 16#B6/paragraph 16#B7/periodcentered 16#B8/cedilla 16#B9/onesuperior
16#BA/ordmasculine 16#BB/guillemotright 16#BC/onequarter 16#BD/onehalf 16#BE
/threequarters 16#BF/questiondown 16#C0/Agrave 16#C1/Aacute 16#C2/Acircumflex
16#C3/Atilde 16#C4/Adieresis 16#C5/Aring 16#C6/AE 16#C7/Ccedilla 16#C8/Egrave
16#C9/Eacute 16#CA/Ecircumflex 16#CB/Edieresis 16#CC/Igrave 16#CD/Iacute 16#CE
/Icircumflex 16#CF/Idieresis 16#D0/Eth 16#D1/Ntilde 16#D2/Ograve 16#D3/Oacute
16#D4/Ocircumflex 16#D5/Otilde 16#D6/Odieresis 16#D7/multiply 16#D8/Oslash
16#D9/Ugrave 16#DA/Uacute 16#DB/Ucircumflex 16#DC/Udieresis 16#DD/Yacute 16#DE
/Thorn 16#DF/germandbls 16#E0/agrave 16#E1/aacute 16#E2/acircumflex 16#E3
/atilde 16#E4/adieresis 16#E5/aring 16#E6/ae 16#E7/ccedilla 16#E8/egrave 16#E9
/eacute 16#EA/ecircumflex 16#EB/edieresis 16#EC/igrave 16#ED/iacute 16#EE
/icircumflex 16#EF/idieresis 16#F0/eth 16#F1/ntilde 16#F2/ograve 16#F3/oacute
16#F4/ocircumflex 16#F5/otilde 16#F6/odieresis 16#F7/divide 16#F8/oslash 16#F9
/ugrave 16#FA/uacute 16#FB/ucircumflex 16#FC/udieresis 16#FD/yacute 16#FE/thorn
16#FF/ydieresis]def currentdict{dup type/operatortype eq{[exch]cvx def}{pop
pop}ifelse}forall/initialize{currentdict exch begin begin}bind def/terminate{
/@FL where not{pop end end}{pop}ifelse}bind def/suspend/terminate load def
/resume/initialize load def/RS{/pagesave where{pop pagesave restore}{$x matrix
invertmatrix concat}ifelse}def/SS{/pagesave save def}def/CB{pop pop pop pop}def
/B{pop pop pop pop}def/:/gsave load def/;/grestore load def/N/newpath load def
end put
%%EndResource
end reinitialize
Pscript_WinNT_Compat begin /$x mysetup def end
Pscript_WinNT_Incr dup /suspend get exec
Pscript_WinNT_Compat dup /initialize get exec
%%BeginDocument: Pscript_Win_PassThrough
gsave
8.33333 8.33333 scale
0 0 translate
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 .371948 mo
0 841.548 li
594.96 841.548 li
594.96 .371948 li
cp
clp
gsave
77.5579 527.15 mo
473.213 527.15 li
473.213 189.866 li
77.5579 189.866 li
77.5579 527.15 li
clp
280.661 392.381 mo
78.2606 392.381 li
78.2606 190.564 li
280.661 190.564 li
280.661 392.381 li
169.613 385.051 mo
168.251 386.65 li
174.688 392.064 li
176.05 390.465 li
169.613 385.051 li
158.348 375.577 mo
156.986 377.176 li
163.423 382.59 li
164.785 380.991 li
158.348 375.577 li
147.083 366.102 mo
145.721 367.702 li
152.158 373.115 li
153.52 371.516 li
147.083 366.102 li
134.483 247.129 mo
134.483 365.845 li
253.253 365.845 li
253.253 253.74 li
254.441 252.107 li
253.253 251.252 li
253.253 247.129 li
134.483 247.129 li
271.525 264.384 mo
270.289 266.082 li
277.122 270.993 li
278.358 269.295 li
271.525 264.384 li
259.566 255.79 mo
258.33 257.487 li
265.164 262.398 li
266.4 260.701 li
259.566 255.79 li
false sop
/0 
[/DeviceCMYK] /CSA add_res
/0 /CSA get_res setcolorspace
gsave
clp
[1.00217 0 0 -1.00217 0 843.493 ]ct
[201.962 0 0 201.381 78.0913 450.135 ]ct
snap_to_device
<<
/T 1
/W 621 
/H 623 
/M[621 0 0 -623 0 623 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS cf /ASCII85Decode fl /FlateDecode filter
/O 3
>>
%%BeginBinary: 1
img
Gb"-6?g&iYGM[PHp3(A^f@oQK\J3^Y)1FLSbXDqK6,=\03+24e";*0j$t_d.>q?9`_&<L$#*F-u83ip]
KN\X*`\C@<6k1GOdh7d4OYg+GZ:=Cu1n-L)+1f%pWk86me_djnIQl-Fc:iGsh5@;K4m1<Z&OHaHKH/3G
n+c[/T7mhC#jI&OEK:dR\)-XDig`f*J)m*:D"4naD5PAF&'(`0,J;=2q,M5Ng<mCcG9;k6'8LMHpPEtJ
HKVr*fuE`T+!'j"%ujrJA*$GPZ<'e.-Ea1WmRucAA)AF,L<gOrHl_#.WmIVf*m&5N-PEo=;d&s]Vht#:
GkZN+j@_TH1&l'$:YRO<bMGm`N_'!;e@k4[c_kFNV!mVm-)Mo7%:S`'9\/=n91`pY4b"&mYBSHf7p4R?
9U\`BT%2pc48QD_XRUL!p$VL,bkAC#ZtFV.ZQITPs$>]6*f8GC<;DC$c^_Mh5JBZn)erukj,<0Z^Cb4l
/[TogI_4,($btYeM0#6lpTh+)h=Tl=3q"RZ\*p1gZ"RD.CGB1CL&TQ)qr(tt^lE=GkIpBQog[O"7/22U
KKcT*KgB>J`Vd'U>H]qKVA%#7);\*6oidmR\O@UCoggs%eScrc0ceZA+_mY<Z1j2h?h6RmUc#6&X4A;%
/sg<OX32#ba"8i;eFKU#<6M?<hA:2ojYkW&>/./a+'%4mShK6`hbVQZHI$hi(to8]KjVP8qV.FXq.b51
6.TW5<r@jdD2Li#jL9hl)\^5"8+om6[uP0BCL=.ri"kl$+%od9$o2Vn>=Qf4QHq-)IT-aHq9F&OW@bB\
*7Gi&B=3$Rnn[s+gmMm41R-'GeG$!BnB6a@^Hl+-l)EW*Spl$J[.ZX]gqFRDosX%GW5"80<`UkkWL_n_
ipkC1=:DA$Eg4>7:%?Q'rl&o32O7m<\Li2Bm?<I^bPD90EUVk%j!/rpj6=$Z:VT'83AnbkTat5lUjh+s
2bLu'];tU7'NZnW\XgB)0D(f8YGi&Znr)!8l5S9&<mShNcaT3%l\3nSorD8.[;K_"e[kT;i823IeU,&m
qp<&]=KWpVkF(10bJ(ZB[D00`oCp%0n3NR_;'2RI7Pt/qNhB+O2V%LXk$MpuhS"p9osJcMh\,43=4<ef
&j)c5p+WSGV)Gb?<Qh.dVsac?VOj';cH*EZj+_@<*Rh6fbSp25L23ugIq-E+!qcl/A/!K%g:jSJd9'=q
$p)s%';7R(@W0tB$,WQ@O0:n^p<[uI\fsj^j)9.ef<VL3@Ls?JghRt5(#Q/Sg<7L0e"6GM*R<&KWhV.i
c[$\REWamBEsq)*lU$ZFdQQR0hJY0pVbQn7[Aii21;6NDk8j<(KqW)L(AuMs;#bs)3H7@k+bUCn#U+j4
63n`f&4-XGKFgHU+bUCn#U+j463n`f&4-XGKFgHU+bUCnLdTd,j-jJ'jP!5XaSRIYgoKG<<VhmskPrDS
j0+/P?D^PGl8lLk:L3G[[kk2_d1=99#hOO^6d(qPkVk^G5Ep/:mJ<OQ%DU"Emq4g(s%KT-Q@'#(@t$>r
]Y>c%\(AU$P&&Nr+S=2EW-rd&$/<@5O+/TrrF\7tU&XiVFbT4Dp+%$4WG`kh[OZKT_tI3@4c.2ia$1/K
f0-K7s0fl?QI0Vm`P#iiIf&igouXVuWtrmdl(?%;O0pLmdg5WMQ8Q(tT?@04&piqlWO&4GcW;"IBq>&U
ESns29tqua`:Y11J,&!tX,QB:>Q:;AVD2h&qHMs,'7KP:R"%tmn->,cIuS3#:T#GF8*6(QCq:h!f:]R/
,rQK0mpW,;]m"=`g1/gn_tK#QhtKr/^.mC4%.:=nI+7Z@[ts<t/Mm6PUWe&dL\=\^D&V-Wp)Lf`^,%5:
l^&jhM`Go<G<`NtD^B?%)LWse432GmlLWn.Im;"s@de7Xj)>MuotA[-mc2n:g(\JSQu@iWY'WV9J_Dg>
?W:O750,0[CATY/IimE$?F@dSE^)`mhbi^5g<qgH[JSoE,&D#/Bk:B3_qXGUc`B"R2JOls0=Jokg+m<%
jXj\jkl%sd/kg3<IX#KW\,%.\'.]DQ::0AIineT,N^DFKr/B/84njZSp#D!V@pf+fj^bD$aj#Ac>/-\0
4PO3<p@700+)>dHp(%&ERI`mV^!Q4[H7H<=EGf(/CK%cXg2mY<VI>GUHFg<!LhFsGkr\cZU"3pBr^HUK
gmD@8WP3&-oD.l-:%:R@b"3,5.U(_.D9+O%fl!K'5FS02FfshQe:60CC;&61>S9,pg7B-rO08rZXi/BL
S*BtGn+8b:cQ+m/-+'HCbEW#VNU;)Ge7'E@6`Z5p0=0Li45N<jXO!QcU<f(P^*PL3D@T?;4+13"XNFT@
(*g<E%/l)k?i=*hQ=<;[G$=mq5?ka$e#r$2c>AnS94$;J:%:-$Bua$hfD*3hQo<FVMYTVT$Zk'e')tkp
.steigi!j#ce6s^??m%<5O7bIZ>9VI1kfq69b#Pi<ed^rS(?(R5F8d+_]r.d+!o2CFbKe,iHJ;:eIlB3
qE)/7dDB,?]8,Ler0W`cs*,l3)9=h07dcDEU\RQ9eiDH]k.A(eSSu7r-!p#JhYd\9CUWO*CRK<jXnME:
mI/9d7l<oR6Z2p'%#\Qm=N4f=s-m.o[eA.0RQ;O>_jkYCF\)I.D(J\eSP+?X#]1KX`MT=e[^aNQ>g.uc
[!aCIQhcD"^\tn2F44_S"d?8Boe.UOq&I76_D>?(>G;&;4^LYHiVVeEnbto1eE=1&=k%AFp.ae)n9C-V
5?8#8jnDC%*J>3R-*4`DMb>lG_M?W[CGlXhVpCZ5YJ^2W*ePGrhlE/HO?<0d.*Wp%C@b\(Hc4Vg4076f
3Po\o8H3U0g.,GsQVmm%MW[o0k8<pH^=;[:EfX%,pZMjcnLlbJ:+/ecj;niZmrC=USd!Z":C=9Se]q6K
2T;Grr`FD>WHKoYcSg*hL%dj3DJkm6HPL3m4>hO-]sR:B5b%J@[/W[2agGIVg([=Wr)JmbX3I%e/kf2!
B?Z/$9,cNk%lO$I>'M"?'Mlt5D1u.Q%;jgSg3cq=m]:SJ)JXZ_4]5L]CZkV%!SXmk[Jkk`3"9_^Vm[XF
$`B[mn[+8LbFRBjZ8RWeOlJOL7W%S'2X\*WZmhT43m@Sc34*BAC;sNs*6/_J2T8TNQHdM$cn2]0)$b?h
9#k65k]h3h05G6"4=tt$bd5?`:&E;c:(?4F7Zf"(.@uiS*M"kV3odl=p8k)2]k9sg&.;qE&r/Bae)Fa4
rD:QDD2P7!095';f$L:BW9q&nEcUfSrC4B<6-d48=/*+KGS%kJ+gbr*#&1D:c()+eB+Wc29kui01%T0o
dlt/$#PS!H[4hDG_u6"H?dmGqXY>3,6_!eCe\C251N=^S;`lXI\18PG]nSGaK:&.5f6>oZ?3bQICKgB3
j-MX1BcgO!q/O*?27+eRKM=H"H3nGG#;P+QD][=T/r.gUF88I4qQgpV05G6"4:(t]I=O]^UYH<cBcdn%
TQ'8j'&"$qC[P*RlaoRK/`uVj+ND#LIT]",ib9DLTl;$;-+%A.&FC1`;-?5Ti^)WX\+Vf.3I(!2n#nF3
5D*-TOR^L&D;#4_^"%&l4lBK2"kjY$C2[mJ]q1olqg_i`4/JiPp1>q,"r/@=I[Qm(q_1Y>\-PODZT\HG
k8kIo2FW6:MottZ$uO]'<*rD#?O<R:>3GP6'8X@7jF-Fsg9_A=>qcUTVq_B].3?DE+baE0B5#aXT^q-B
4sAG0C7I@HU\9'B\52O=aB*mMm/q*ALdAQESO&b)60?4u+,Y\/`ImGo<X+E4s44`*#.=.5C2>!_qk"n_
'G%LpZHq2iS+^8%S:5%AZXXR#'FcfFONLLp`lff9n&'\rkK\(g%b_U-EZ>FdTB5FdVL99bf2%@<f9mM1
2FW6<H]u#WEpWtskNG16Hc!0>*4..9jErV`=6uSSqg`Ke:jkuLLGm,(ghS9;s,m9,UJP_V/c1ojE8<S\
D2JQYf:1f'*OKN&OF9+TF*>p-G`Z^4`Q%G@en-]BiL!d?\k8D1I0.(=)50e%J=:t`E'5o\D2JR8#PL1,
VS,7(/`AWTYH(!lN?@3+[>J\I?D.0O31cBnm/]9*aE=IqdpA^EE5MT#o_QPVgA!BNaSt_96C[ZL3WDY/
GZNP*#O)$15%iTV([/-PTa!o#/<6.;gQZKhd\a]Cq\QVG3?tm[*d#$2omUT'?M(E#kl%BWfr0OM5b%HJ
m9`?A*$j5P&%_a=?dP[`5`\,=2&gl>);@L5HMn%b8t5MUXY2ZkT/Q';>$l7IGM9D?B[%<q98_;:m*iu/
P^>"0VS,7`2a`!ZS+`Mq39dKia/)N-J@7aGs,lp$($8$VqLUW%9m_Hb08"5G+5.E)O7`d]XtOHe4?_D`
:pZj*34=Nc+%r*OVS,7l=K_<aS+`MA^:<a*k-QS/*pq)mbI.q`g"<2s*S^bN'Mje$H?FX%S+`P2%BdEp
*Gp\38%TC_V]K=oY+?`3:%?T-G`M8H=+`Eu_]\aRiN):&6"j1R4iU'KotSQ$5?Db2_g*:/BN*V!9b2Yl
oej-kdm!D[frhJ2BN%#Veg$i"lORiiLGm+=I=[/3m0!"b*nh;=2;:-b:%?T-Gc3:bd&)6TYs7a.o`]2i
#JGW!&o'>s*q[V*gVQhWl^$"sZmhFbq?"A(n_'R0qnVamG\C#<B:OUIo6dau(37&M*nh=S-Qe@mi-SdY
]KC&b#HfA-LGm,hp"@Usg87$eJ[7Y3p47"9iLs!9BHQ(en3*tX05+9H4kBJg4p_*)K^6CI)2'p8!S?\Y
6_!)o5"g-6dm!E\]8HKFio*'oG\GPiE,SE4Zmd''^0po;9m_HBCuP:RFBdC-Y3Xb+gU,"+Pd<ZFp&R<g
R/2Cmm=EQHHNCc$o`]3d$ZsT.C,U1+2DlFrE"?X25+qR;O0t%p#&T5&?!jQaB[^:\l[Pkdd.pPIKsYP)
B[]0;p+KL#2T:=*'<&qm6YD$0m=UE.HdqS7)S`rghOj*uiba5F7V@B4m/pN&BRfVd_#'Z7g(Y&YLP,"2
4<q4I+40[Flt]%*A'R`fkAYOgfDrSA)50e%J0$5;l_f+3]\aU#:&BG\gYHA1M_d\hi^)/qf\.M4FfGZ)
]QEf$=nI"kB7r21"4@Za:YS1)p&Wk0ggf6=1I@Sj60>:IF6/KI@2/V\6Y?MgB/smh2XLZ'hoIOn%be9#
g)oqhd(Oblfm#u";`r.tY?G\"r&mqnF6nTJo9g\Qm_pp%%b_U-Ea0^LFZ='`4s2]`;QH<*g([=TB@W*l
J&q<kfrgnaUisHJ^:OSdM?g[e*TnM)B[]-fqj^gh*OI7:j>``15:`b+Lgr)M7`"a0e#&.&BN$b/nZ871
jIf6EJ/mUpqX:(OnK@QG9kcDJf&j\H1P9)t@W4!lR6bN8*h_*O*ea-G%,)C+Wm@)C"D;Ds5+q`k;gk=;
0ln=]0nY@E\PD)lD;#4oT>i:LIq6p'GYn(!om_]Sm/q*/h:-jL>+9;6c(N(ME:)6pg9_Bc?uuG4+3fa2
S"`3.]jWu[6_!cM0t1ZYgS"D#\3A(E.dkYIl_f:1g]Oot*t\+2@p,/FVL:_j0*Yj7ZO^o1#LUQX[<IH+
=3gK062=`fGr%gWp&VG]%!&N34[>M161a,D1u<lPe.UIL&#(^i06`7Tmt9qR/4%3-kl#,>%W.(.TaeLY
`=gn3%uC,egSlL+.3:n7j^,+(24)X7,AUKS3U@\f6_!(4S%P)rH&`j\Z%P%&6Yl[QCE'@K:&E;;A+t#1
XYCj:Fg#M=?e@<CL,SEdlWAB!/$Xge`RC9j?otcN2XSC1D=`k_1gb$&`jHo?[$G:K`E>Qtp7ZV7D>&sj
ThYF2@Me+:s7ZY5MPharSs-d&c/g1i1#<kOnI,4`f$L:BBNYk:j!*L0VL9;X5(CCl.aBHL.@QQJ8@c9f
Q<ZWJ)N3&W^Mkf#*82*&bBhh-)i6qOp7Wf#dWk3oi3V2HZmhT4^<><eAaT81jSi?W`[LNM$i<EQN'a#.
BrSui(D2E\m6baiK"9&]Zmd'`ZW'(le)'/GAZ_MY^mHfMD>_8]3,*'T51J`J3EA<QD2P5l$Zk^"1pgs=
CANo_`i7L'Ar[HqU\URfi]<*b:ICWFTr&kUf!Mr"B[]/pB]7N&+nlI`MPk&[C[%4DRW3&s'/*(^s5gc9
1pgs=C@^I<A%&N?D;'a`/c6/iY''*tj2dqaU\0+dPrRsjEOWDj;pG?14hcmq>.7i**%quWg3n=.Q)PYM
<]Vk-<&\kLgHILn*#s11c)o`"qdEu`=PN>4s7eKlIW(k<;cB$D)L&$lcg:1u`9jJ_G(!_gZL\mh]m@0H
[q8Qcmr,)\cnS4&)lM^$^<\cF8$3kCWC)!rN`'/@*Z&6gbd>tU4ce<-cUPX>r+j1pFYCB#bNTm@q3$N;
WG/Y7K;fX9GCD4"p"?OlW?^MGmCr%ehg.*Wq8N!ph[%7%QKm2PH#fa$@B]ZHI7L]3NfB"n@m+l1MLW:"
g`uaj4a_LR&+6jnX6-7qQmI\iXKId-TjJ_6^YaK2Rp+K%?f78FZcO/Cqr(MupMJo;hl",Hg]O\E9!p>s
a)9uo<nGTfhg'_G>iPH5+1i8SLLkq8D(qU/b)nTi2Ge8\I/7]nT@qWK;/NE'pdE\M>jf=DYoM2XL+tp_
9P30Y951QBG23n@L"16mFraL&dndY7WlS?kL>Q(UngJS4/`!&&[nZO@XH&c%Xkk)G%d,r]bR_CZSop8Y
gQpp:C1=j(CKgS@ot0G?,i=Z;m8Ks/rM-`<bg3VmZqKW#XaS]?CZdL?`\/oZrEK/sokBM1gmi,G>4N/s
n':IXqL2U,C>5U1C`;$UhBUNFIbF'J"tA&Z@B=-R<o6jAA;tG!ZuD"Sn_:iVk5(CDlUMQQK/'!+)Vgpf
e/.b_C!;lO)*m=m=tr8#q^/XdNLqfM_E$X#IK4c(LELD/c0tNjH*8clCoZT!rVI_)3qUe_ZYnGsm?!3p
9Cc8_3A[EUcHFK0Bmn?@2shNA$]aQYg;A;_(h;+)M^A=B\b.;NUON+'a0N1]+1h8bD3q[0>)]D+kdeq)
FcQ/]g/RNN[N$T2bFUFFJhY4XZgHU2P\B#=s.Xs;rUr%([t/;_Z`NE$Pp9+4TXICV=d2Y2fB>.5jkR9Q
M<2%m[ealK8_SZZB]5>^GVn7Vjn/"F:CoP%>Jo(7l4`eqebA?UL1R7$VHO1r7XjBhC`-]jouk]\=h\t!
gs4XLS@R6g4c@:[QCFgePAcR_]D,",gVhn;mp#U%o._nqF$e,u<hHM41qg=hK;<"E<gu:EIdct%n"ZDf
rJTXhf'9$a:@!/W*gZGZKRQ7kq0`$cXV]^b^6m2+F.H+cqZ=1'q)QVC(pu9P1?d>6[AeVmQ9>Z&K%a8k
p)qWkW39-LX1I!T1KpqgBAC\Ue*ARJnP8fVbIuou^u!5^[f<>fg[sCF156XD5Mo(>pE<AFW"#g;)o^??
[;et0jA"c^+h;Td^NRJ,e$G#hCDc_M\"9'SiOAil2DM]0hm^;\.C;;'2`DhRIs2&<'?7jsRoO4P0MesO
ZgSXZ%ba[WmBfQ$qdj7W<%!WfV[Kk*rb&Nqc1G3</m%`#>*^^HjP/^U--rIb/UgX\[WIVseFtQ%>\a(6
rMhbR?_HNT0/B^/q<8g4S=ccfXuE%k[G:282_F'>.G'D"C@G_8Xiir6F2$A@A@t_5><-2CId+c?De*"+
5*u/)Vb;lSM8(9\F)6;&>l3^I.BG,73hb]aFtb<,r+e'K@lGKNoePgmk9&3F)F*EWB4uX+H)7S+hAgp8
rU7_Um6,noidFj<M<,"`qqZ.(I)rEW>MUs49Di$PM.:D^PDjR4oY^4*EnriH$/-I"6H4:cru^P(/GI*5
F#nsc63n`f&4-XGKFgHU+bUCn#U+j463n`f&4-XGKFgHU+bUCn#U+j46L*M*JbeBZ9%QkeFU,J6o/?UI
I9[GMO?@??+gR1*R,%D[ef:L3hT"-7cWQn1?cfs9$J/sMj6mNN],Bf3I@9gH9^UMVA\pThFT(AEhml5L
LTUAiHdm"/rV1^8C869HEU@88Dl:=>N]mC<_sqYV]dG:tnb:<,[>a^,;W<&hOW!i$[P.+,aSqXu5PF(2
/)d(E0k,K_rlKrU^Wa2gpIi$U?C6)Xp<"@>*.ODsmB9=;KmU77GqTlH^>#6^>1V1fk3R`k`H:M(So%QF
ho@X`LXB>JZ\Mk"IPeKWV<oj`mt?%gLN,WJ*q<9+CWP=Y>JJ?WbBct6/%:A?4_"*1s%lr<ha>0W02$\2
4oH^/N+'U%nC6?a4`^JDa4#1.:J=-jTC.!4]n0/Z(gEQ]^X)GXU!LID?ER>3e8K-5;BMq#b5CtBe$2F,
\$u&N^/lDWAO^P"n)YV^J%"7g*e+(^$288bhbelrhs%E$8%bql@%'F*<Oe*,pl;o]6IB`BFlM:ps)%?^
l7:.t>CC+ck@R@=00+B[\!GK+/E`GMhk<6ehj61M-JH1QpSKmNcV<e7qj:Rr(q+]IHc-j=_t\5KQ4^Ot
4_bEXqc_8MRI_,t]VF1,7gCP!*V/`BcTu/M2N"iC[L`+?>I10p5>u,m.Ie@'O)G[2Aj4sY:]9`)kP#-\
kI$8IDmMX:;78>sXq'%[^Yeg1eUWr1Z/8U:CAg,]D1+PZ^<[r!Hb&>%(6fg9X)4J&c_K[X^@Ki%hmuS6
BCkH#Q6ZG*F*q/o^(;a:$gG!O[XIU-S!Ide5.;*`kqhP0kVIq$*+cQiDZ;c/S;+s=6]/Q8e(V`Q1:J'4
D&;mBkk"(\O5f$6b1tJ1hmRWEmW\PA]'ksBrB]omVY/Kb?cd/Lq](".X+%p(ht><ESg$Y,%T[W@**O-V
39j2G%;cukkLNG6f:J?(i=]L+\W`72pcS0DNl(G,<]cN"L?I'#+$Y7CKB_sR[e?6RC\<+9p:$*[hu.SA
%XUZu*`AKiNhstEF,$K4V3M/?``@h@jH)QrmVQg&PtBF<QHSjbHHeEJIE.jtQQl*J+ockpm3(h&X:6ku
CVElrq,6?0?iI=lPCJ\(k,XL!I6IP"r`b:4NS`d(oU:s+;7>1IbFP)mNqD9PH,"&OGU]s0Ho(`3-GNRG
ZUZG`(M(jp)J5)Ar+R1#BYXM6`9W6:ri,&1qH0bQ9&c0MIGpBqD-48o`eo5ur'lu`e*9_BbM%?Z<e!X+
\Ot"eM!k^@RHp<l\!0[eoaTJApd\H<hbCk(H32KdU[L/XS6r<MI&r;<h_-N6UN]IXR(iof-].FH-P?69
c_kh8(YGa'8oj8Bp%:P'?^C'W7p2-$400uu*:JN,Qj/')rLWsOEXko[HX;mPb/N45bDa1(F,AYopW;Ca
3cWCea5luT.&Wp!TVUC;@;V2'JuuWQqpFm=rVAI0o3Q\9H6[32+8W'>9#!_brb)\g97)+LI.&ZErFOuY
B>M:*VPY:;=k40Q/6_%?>4k;m5DPhfflI"GJ%S?XC]FB5qWdOt*)A5[D>BTe:C,-GmLbcZ=C(BX,:V$V
,'\MJ__d-_k1F,A,!9oDDspf?e4952s1)77Y2jh`\_*bT6:&O+pIt$r>#VT3]c%7'YJkm6DOfn!DrL6)
]@RX9^.ZXl:#2clbWFn\mcTFJ^(0S]S!nL0&RVo,b1$7.6`r_JD9KQ.CZr,!.Fl6FW@uO`9s!j2p&EUB
aV>d-?_!P@jn&p0T5.UccfD+UI(.NDp!p"g$E3ma]i$WbfJk@p3%K>s$<$N_F#lCjR[3VrRo.>[l=#(&
k(n%]R_q()f5nJH[Gs):`e%NZRPp0%@N/OPWYEGhBs\AbW44IMP>>e*F$$K'Bj.k[o9XHW.&Wn%I&#9E
?\+[$V,ENK\-aheL&)ufD<s]`SRrElI\[\CM_m$anZ;b1>07f)8&XXt:2=qGb#)[&c:Dg?P'tVi9'>1/
:g_/?)9ZWrcRDS**3A\OpY]\p(L$)Xqjc]Rj9TMl'),/iEiS/p?WZ*V0k$Ld+2O<u:5_SL9Gj\Hn$Zon
HUi3[m9#ua]m&r/h!3V(3jg^7^!gF,jqm%L/uL;31<+u]>'(Qj_Dj,qnVde7[#CVlajJp#Xg'Ft['"--
%oV%-'W8@@@=DY,&`n+r\oANUMl+-g>2p.5KQ12d%u^hT[-@bDChMNjYU?jM%h/.lYA*53;V3?2Vc@dm
^TcdTEr&tnecKGW\>D-]_jGBP@W"29_DSGMf-obH"Pc)@0c0_Wf<jgFp'IiejN3fs=E6eiD&IPkE,PN@
<gtci>_B6eA&9OJG&1s/po?/BRuV'Po9qu!qL]KB'3p,+0>dY(P!Sr1;iS!<1u=iZiL8=XMMqkn+P&ed
9XplUO0>qa"5Y8YraPR]01"eRp'E<:jBJ!Y=OOgO,5a$&_DR-(IZ+T"+S6FZ_BfJ7+QC+^!p'q_@@sl%
CO_G_EIph[H\O>k0[mY(UA?_a'@*u1)_i0C/fCM!%:`)AA<?LI^4PiQpB%APJUPg"W-ZWNTd?Z5K:I_\
322q'Jr/SK:1sjZhkVqQ>_8>-^mK'IWnoKY4G0ZCg^ds#V6u[(?@n'Bf`!sm.&SJ#b<;q=:qi7]M9R0N
(AGn@6.pj:9['1#A$pY!hBSsR%?/tP;#NZegOI6UjV5,r!S<^26.pkgGVdG9\92YXHNM`HEGif*C.n_N
68Q^VL$S[sOR3G1In/sJMMsPT[X2TtbSVMKm?g3%*&p^?JLk/5mq2jT:W/dM$o3m]IXDB@C`hD]8+1JU
N8ln+F(Q-AHnUNIFs+j!0IPpHNOr0"hT$&1n!uH^#BIHkqsb[tS]1<[dCYnmEu3'\cQM7-NkKHUF3^<1
iBZZZNkLlIk/Nc%EZjNk%YEpM3BKd(b4a`?]::'d(Wc-*B*T:nF$>TdR<)t8aFVjDgrn6![_jLuUJ4&J
2m=C]Jb5pXruJer.=0bloD&*dbP=,X;/g@gZ;9u6T_jO*p'P08#%:74m8LQMM?BC[\9e%%6oc7jlOUM.
*^3*<FYt2\ZGi>q"$IHQlY>I$\=AV8T0LYNHj@6r^3][+6oc7kRs.B[mu3p[@WFYm"!,96-\PjuKPROE
a%A*7K\'=bfc94\dT7O2F$r#WgR.qaGTY+OFWG.T`OR#]ff_U``MhJZEA08>"2-%tea*5IjV0j*M4+nB
A!tC+1VT-C%;u?OTn(a2XT*O;9$QK`a2+NU]:\JHEf0SDe84d14m:j7WS(DRH[q^>_>942$b9<C")W[k
fDd)<.GAEU]I_nDgqTkMB&hMoqWo8rD*Z@sB2%dE2-Z-UMlYJ0,K_H]>W4MZh?M3apK=]il=2I]FM#Nj
-1L:;f.-1:Y$>8=ok7F0Y1\g`Vs&.oc%[m\e80PR%Ff3qs#iWNT>LH^Vd*MU/[6AYlK\'BLiSCHfj'jF
YM$E]HlpUVomPhHPcLk^C]tge:p]gD='$Kig1/@Oea%_REnY"C-Kh6"aU_`AO5E=2>s48+6ORj/+M;=H
GkjOGp$/!JLJPUpB'W_tHh_Dl[Qa;RYO8`DPUgK,f)Hf`k]=LbrMO8F6d:@@RdHWlBB,[t_o)?.#M+Ae
e80AUm(#g77a6*Gkd0eUZf,?kmfU0#pK3X<D"QA$q<FE.EtIg\;,0-C%8W%mi30<:31^QiI<H\l#6@V]
Ei&AG4osR49_9`7K=H2_=656YMUhjmrK5D3k9/^A]MUdSni,'7>jJ9m>b;H9f4W"=p"@UsI5W.Lcdi?P
Ilpt7(D$7+kQCQF_/_q(jka!^ctgHrZZ.(??I3?FiSIRZ\DLsAco1)B0'H!!EPGB=?,O@VHGKJKqg_u\
Ssg*Q%[iaph\OY<3ma>_l>c;*jV4iMkd0fJXiHsuZdH\2?@C[t_YT;u?2o&L`t<R21SVFLQb`JqZT6D*
s6?'?LiSBu2:-!rf7IY*h5;oYRLO1f;=NmCT+//>j'6uE&#<fYT^0A\L%Q>QIV7\sEf/Ge=.bDKTRA@K
RtI.=O,ag""MEXBj(nl^GFk64^GdKfWWSfu\bc.O8!HrZ`o7gYB?qAQI)!">*dbj\aS<Cb=p(?.FT2X0
FZCK3%X:5'?jF"9kIcgbashY^!-8tO(liCg3KSN1p5M&Y@i<Y)qM_(WD2pPpW#k^>F>*:]Q*Z'Ys63H&
]uqj.%pWCQ/*O:^\[[YsE&f)elYmtf38A#cJW@-.i>=iaR1C.qg?\DNaS)8)c&UZB'\VqESNVVTXrJ\M
(^0#7g#)-]p(;<3f,8,#c2M;[Eie?Pf+Bg#rV5_tG4[DbaF")2(Gj.;QlI@75j!aPhs<V2,Jc5dArs8U
;ZE:*A0:?lk;O=#2OjZiNo&k3RE&t.@Krg<Y!*ZB5fRg1Dg!7E@m0O&3@h%1S,LSfaI%rNeU_Q:#@W+g
E^VoVp#@cN0n[]`F,Zao3F7;c,7^Lri;CS4<32(NcZ!Jm0`gGr/j\0B51OX@3CW'"RCehPfn*]:B95+s
p,C<jk'D&sis]]&.eYgITPQod\cgR_ZbP156od]tnMsX!#1^3/\MuCdpm?IS1T3%r>YfPJ'l1.jGm9OT
U^g]d$>*U"fD0D+;,1!Y0m30uC2>!4#VJF<"nmp,61nr2D8mGmXMqo3-&D@6*5f)c;8tS.HqEdIMC?C=
I.)d\RgbP47eO%A$_t)LKH)5D">LCGA*'&Mm(qK=&k$&VrBX'fGldQo+(qKq3CW"dfab/NBPidq>_7b<
g#'.>iGZ9PcPf4.Oo8!I&:Hn3%pFQu]9ul*d^u"n@RBeIX[2^dNk8JH-thmb>(Yti@"6Xoep**_jk$l*
1\M'mC!A:b\$4qLEn[N&fFG&%Ui!d`p,B*>`.XX:\u%?W1C2TE$>JmKAq/9ueo?<.%uSi)?XRb[aV!XA
<@<jE4n1jB[5R3,`bCD=g#'06<QDD[BhbYjik"\r>2r`QY8!n209<Yt2+Nn[f)B?kK54XJ(]0]][-.V;
Di3#4-g1J$CKen"qjZTPN"]`O:n3i[L:N!t]ut+_9ShL(igsi6g0CC0c62fYE9qM#dkWS/rCq!0@Ti+.
+/_QNEZT+g(>Zsb6CcooZm@&04.)m6CU:c):5b1kr^q06F;O*^V5`j'Aq*aJQ9HJc#K:C+Dp0fO3MN%p
p2@/U9N/""3PR";92*G+VDp0hNVuRcC2LlfVDP]h@6Sq*g)L.FdZ/B:3N[/EQu>_uX(U[(d^83G`n>'@
lS8"IBkmMf(^Ht<XoIb*gSQ;N`::ZXN[Ue_AX`FfD/.Z@V9e"q7UJssDc9TsfS?q1XafDX1u$O0J*,Cm
WQ>NF#B/)'SCY&]bi/"hPM9O6Egmtq63"5b9jN53Z)g"dl#F`5O>1<\?+pI_S7C$'ljp.rs1NI>C'V/%
ecgE'=-5k"s8/AIIH"GBmhaGkoiMU(-GJ]?KCp+`S8%Cehd+:HL3Crahk!R8GTF><R-sk%oK,54$B?O4
V/,*SA3NQEclCqPa$]OWPa:X1EgLB&/[O>(%b3Kms7%RY^@,!Hqt$9OiWpPEoAAL]9&-:2idC>H^%3j6
j_bXr>.X""XM0G_;Vr2bicgP<U](ksj):fEHSPKE2r8HtlX$QOm%K'L\ut)5p"d"c`GC`Je$kJ*I*L'f
-^<3^f%blN!Eu$(2;$[JcS&jYk?.VFdgl9:h`pJA04e9&XSe,7gU^t!EN,"8dD>OZ>45.Gq&7KDXF7PR
DGOe[QeZeEBa(OFK<4BjrUr%8rGN-8Pge&@+R$']HEYB<1\gZCSXcIG[uQi*o"WGYe*j%(?"n`mOh7t[
`U%:7bI=8"DihJ0pfc,B2l0$gVjK\Eq/D"89Derc#O?Hsg<lUcf^dqYU"@>$RaTK6m!h+g.nB&H><DiZ
;jlCU;7=Z+faF?TGVn7Nan.Yj^#(_0X3WIo=8NE&oso8&K%5-`"4`HNQ'WP@:5N]QcmP4+Y]dPM)+s1D
M/Kc5365>?<(g>a0%"(?YroAg,^i/24Z/\'`(hW=IR;;[A\dTBeiV>j\$EH%I:KC7K?WGM`ZOh&Vaech
d4IBV+&'F\IaZr_n"r>81E;Nen@q[Krj6^ria5<uBpOb_eb1XrB?cI6^O#'X6;g#&m/)*T7XMjUH25m3
e(VQ=SK2:D-][oX@G\qP`jae\lLU9SWfm-$G<\cJ:5^(X)6F?!IE!MZqJM`SChn'>_FN't\Rd%!>rKG,
*+d\gecr-m4h@fZ@QMF']6ms>8A6`*WW/sqdDs^!oQP_uWIJg-Y<4XGr_)S9(D=2q8R?('?YJ-i7adb"
XSZ8Ar.,nmNjZO<r"u/uDGd\mED@!.(&M-<D>b'U&@9;/bn9P#^=Lr3,Tj:V]2X-Wh+d3iD00Q2r+Jd9
L[FmcY&%p^4!j`407N_5qRr6$D#[[[it$^EiC@%cO-Yo-I4Oj@WVB6Wnb)P/IN)CabAWN1:O"N0^Rar1
g;[i2nU11W^C@hec!,eNohaDDTD_gMINZ-!LH0PVG#,#_lefIIIeQNbZPKU2qT^Pek2qAFIA++HC:`m2
l+TsT>^j!pX.+aO](pOGJ,MI:@r44X+]i$HEqoM09o#;dp+%Gd2+C1'N8-V[=ROW(BmTNMbZac-m9^:N
*.*.B,eaQIiI*cCn&9DKn##">6LLWI$h<9F4hmHOZ`QoN3rN,sWA1<int4*RQHpC_08/4@*NXG]I(Df7
BsG>(q^TO3TA!3A5]6Q#nINZIate_(M[-FPbeAQZqshWqe+s#1jqqQhm<J+MKPen>9`NqL[p%\0b2:D`
:LVuFOi4[)'f<AFQHmS=F4N,H#I;QPCrMiE+RHkiEbB^WY@YI$Qk&i]'OdJW7Df%^EVf:q87$\;f4\B%
ha;7+eijU$U#4FAqr\jKrMDOrDr3q\!8"r+=<E1(:MN\UZ%&'Zh*:mXr,]DL$rMZ1pQn)a5Fc`ms!63S
+_oC#qa[rqLVChh-cN!Hk9k^G>eSP]ZdhQp77*Q=g>Xb@Y5:(rD;`t8'I?jf7s2\`PC9"ka`QASo+\`;
?:SK8/[%C)EQrtZfB?!sT`-dG*W.(k?E@@henaPR6LrO4O)]:`ZkXa;&4-XGKFgHU+bUCn#U+j463n`f
&4-XGKFgHU+bUCn#U+j463n`fO;bWP9c5s,2h.';*c_+Bm&q#"lf..iU4[EUrY5A29E3n)j(C-Mq%Ic6
5$qmYY8V5<4'`XeGL+[.kaH!do/.'O'7WOGmIdqQ*5<\&=*"o,/*ObHE;YJQkGlf,(Z@FR3U#<*s7;$+
G;IOp2<\nl&)0m9bh,)mUUY^]F=m-uopgM8k.OQ4IH/X852R7Jf@*b@VWBJO=6b)2[ESNVfj8f&[;Teu
1t>qt.sZL8r2R8Lo`poZV6Ko4Y3KY0HS):1dsA]/p[t"<WVg%=%s.HagY-;+XS3pi]b'ngmJ`74>^ns]
mU,"YFo)&"\c32^/$%r6IUB7i+(gD_^2s/N^Qif@?Di66ge[.6IQOr5[["1hrL[r![8?=Oe"<i+#Ia?.
e,3A:T%`H[r:WtS(u!U8>J/!=SCU-Pq<YL@\U.hAqdY(!90I.h,H9Mf24da9g)bB@D9FHOO"G+hT@T-k
)<]]I$29i.jdJ4ToE5)!`3I#5;qO::=5PAdVqodARZhglFui%NZ-ZMEN"5FnZ$kfPp+=7Yl$Athh]B_h
qm"q;7b7F;n"\u6mBsE!G00a0l:8at(re(0m_>=lrgnLg^:0CM/X*GfRsf>3.?XT-T%/juBCn.?adaU'
\o=OT9V5=W=j'J)IJ1$8Y&;mM6S';.qOr&LI-i'>o*<"leM7rTcW2,_DS.<Zhk#P_mLcY:ibe1/0qE<F
r^G^3D6*+_b'q(<`4r,-*#is,qj^lYGrD4C<mBU4J,4&[rH%gjErCpQs4,-(=[#f7=23dRl$:PoG?at-
qeeVoOn(4QZ(AoN.4k5c9]l+VY;qeBd!*i_B5P6Qam&giSc3Kp*HHS.a>1Jc@C[cW4h`Srk;e/JYWAuV
TQNupSCMm:T5(F?G:9_1XKC3nDkm9oHStb)s5*[kdGn=mnp^<Pmhl`:la,jP>]TF+L?57ZJ+,p>4fO5(
Q%!hHrj1j5^RUn5Sh\a-qKsT7_l^?pjD2m'2[[rNQ5`olq/!Hcb.jH8CW+@uf^A+VMqi]dU2@](N:X.=
IP"3p'@ti@M.a2ckd,s(_/K?Gb!Sa+d.c.<QfGjSi`,Lu\"GTFruGk2k>LHS97:tT\Mh<La7fo&(VZI.
qcN^X3.;uk*S91s5!=\/e(U[$4'gU,Pk`akEc"o=#g7b+LG>@IdjKfkh<L1!:TO(=H)qXJ.XQ#4%f/qt
hnsXnhlD6U0!bcP&)[BFnP/#3(XkP)Ge[b'qc%/H,21FBc*/!kjIl@ioWdM_/2m?2B&>[BgciGJ%Z`7V
k?D0)p$F:HfG_)_fVm=".dE)O'qAXkZVt$Pp2*![^7*g9.Ed]T/8]5].\Br)01u(<@t^;g0:,m,gcoi9
d;7tf^)]^Hg@=S&B2jnfe6g_fSWtlfY4#e&_qL_bXQUb:mi)'E?cu>CV#5FP$rlMup\LCP8A2'<-i[Ji
_fT40%#OR_HhVn>Euj_C'hdk68RKU]efNu;N:8MC&N`nJ+][.A>-Z(;f!JGRKXmQ@nEh;=:D;>BRI5@=
R'9I1=VG/,&o48[_gHKLUpRJ9j[\B&HcHnu5.IE7Di`P[).feXI;KcAUFa1'QoHaB0E55QQDd!Pd_*4j
qOM]\o&9T<IDulr%\p,uG-AX!d_'sEhK]XtkD@08ra?^`n(?&6VC-]cmnq6idaaTL>5Xn"9%/O8=,HO0
bjFTUc$`4-Fpk0'_S^ahlpuP[UW*nq`!XSol5lpa'l(e6?\'G2Mph3$F$_b&niJQHrd!M9U\i/Kr(G.6
N@Roe?Y]/W=/+8YpPLWlKpqp7YP@*`W3PSSZrLb52J:UhIrXr,`!N8dTr-/.5'rdSH$DM!o?=@.XaN#b
GdTCWEiJ`bN%_W=nYqI#[](::`jR?kmFX88(MRW3@nGQHD*J8Rp,4e=A)s#CH_e*o*AOGQXOR)_p,Ss`
krWLL;k+VmZE6_tgE4c:,#)ojU#VDZ`kU$gjWhbgSs>W4I,pZ\ZV_Yp,KJ$c)l(ob$dV#71c8dr%/)^#
Bo*F(s3oK;#g=s?.@nfL1Pd!.]15R;SjK'?VSu%Z-B-F5,8_)kC!#\FcT+`n*S1$PhZ0;1?;R+RXh9tm
5>I-N:tXsDVIb.=lEqeq]GA-Bk45ZEMpH!/(oP@A1+%t/lEa!kmbWq-N)FS\Q5n^Dduo41HN-.t=mh!p
nI;o%SpR=\[a9<eYBS9+/^)Aua(aeqA5!i<<Qd-E>gkasKfPhd/c!H>hI*-B5J[-1VF=i?S;4>G7E=QS
YuZ;"qT\JoQMr5NKQ12mN#<;3Bs#.o$*@pd>q0%XR1l/XN5K*&?dkHbiAq3Z>%<K(lZ;r!;fM0W)MHFK
9Xn]![XL3UKPOcG1$4/?+PO*QIdpJdVpB#ef)IV0qLW52QQYiNHTnttGCe*gpBEt)1+$8T\cr4G_DR/>
W6>Q"61d;KOuImW.Nn@!li.T^hVpYn)8s%^4o^(8=+]`E/OB/J`e6trYlS@O-)a"Pk(K$CiiUf2O*bAu
Fq)Xk^BB\2<&gb'##T=5E]scB`V%08+NcBJ_Bl-EGfGCm.%`X.F$`'Hga27?g^C'c,-:f#W4W,n+jD.\
l.X9UT_<ZnH=BMY5+=:c'%C/&`e6.H2.`-g?@p7(ZMlLCBeAJ#B2Dci3T1iTq+Bbs:q6s_ZR)P1TBpWj
61$hSpgU+Dc`.Q%6^g<[_$]MC"$)F6j+M&A[U>`S9^gU8'd%K-Wu7_Zk1n?%<<#%$68L#1bk2*OOM6hL
hgtF!N7hf>5*bej"r1@<qL_VT;9np.6&n;MKknmOW;SWaT%M78R.A5,j"ndI2%&ZaK%.Vqfk,!n0b7\W
^>k%%!gO_d)R)"gT03J#FrRCQ,WN5Z#.a1BfDBM0f,,T_oj:#Qji;iJ).]5]IXGsJOn'a<q4@Lr%V-Q7
)K0_@ODu6q(-4NJSV;sScd!XmS]1Ho5jDasC^tQ)SGS=Vo/3Lo+oNt4?9"&,-+I$h"$KtB3FR;b#1r`l
+Qk&Wr]:>#l!X5F44)]('_^Q/&R-C40!:o+5h^d13umJ`%-E643Z'`HiTq[s=4Vj+\ntm"LA.[Ks4D]n
X?Qt2D[aLf(CG3]+3s7mT\#@c)GU#&q-7"MJR#OHp"t>g_dUcDT8UO7r;Nr)3]Dr?$_A63cfX!m#?hXW
N@):Jjr06SqTA['5\hqEj5W!4qsj3eJ?[h(F//YF%^_;Yg^\_gSSL(0BD8(>r"a$*r-hSoD"ouWocG8[
KGkD=@ue6ATRAB_pit''4?hU+>XP3GAn0&>pSlYYGb7UQej$T.pLdF2p$p_bCj7$pc%`\.lTa]b0@6/I
@jCK3NVcfMO"KS%nau>(>XJ[ufsheYhIj1opT_Qb2-Z+rI@T>Rf<).SrF65BB&d'kI;H\]52HLfj5\lG
mQ&pth7@pVf#+C`Zf-<^2-^+5!^-aMR]TArV.RX.)Q;?Ym2#"Pl[KFkPUk$F_O%=(a)"8a(A-:)HMHi(
\@se'ZZ2U^I(<_bmo-Bfg$n*\j&tp6lK\'BLtDd2fsm>E+3hef5$kQMO,s%gg_6V^rcXNAa)!p(.Q&1%
Vc'koO"G\%S[l=DlOdc.ZXNS`=/agKjDV2-s*JFfX4Mi9[Q[No@6('PdV%U6cgCnH>Z%i4rqCs9*tL55
+/mks:pZ]+qWpCBZf,?ka2@b7VoPC0e84o.QDiK8g!3-L[G\7VZPE+9nC27oKA;)#RZ2A"nDt"jB#5EO
Q`D1]qFhk@>P-8D=4_8YK?skK6,98#`>?>e;7#qPfr3T65$JQ-4r]e4@LI:geNCp"i;Lq,f4X@Nf4W"=
[=7VLro;s$#^tVp#["T#gH"N'Y2IiY[XqfnSskXc=7q)j=7q.ANT/oGUKDj'XLJd-J%0]&+1QM0*qWY*
e80PB2JT]"HZ*7'Zt?(/m@OnYc^hWC(dt3UAlG0_!oNTcTREo].SkWi4!Wtc:X.Igr_p/^k9*X.iF=c\
[f3N8I5[Z<CVeJ4j4AnG>^sBq\0"fpc%]P#qM_(q+>k+Pr_p/rO"J*BE"'PZ;mSL2>+:riT?!jA_rhs&
Zhq[W=.bDSTZ=CeVn*l&1Z85q;u=TNBHMTo0o-#p/nUX@@Z.F-pjQiYSJPdcZNF?;\VI4q'PsA33Z)6(
3>WJrN[`J.kd?'\B022YS*Qt3cnQMdD6bsLcASI<a.*lTrU2J=iJ\1sMm945*P)KmCZ,.\_<U;A1($4R
nDca?5@ABYJK-1+TC"na"6dIb1P-Zp731_[f)He,oUZY*gOe!+B*DT@3EH][CQ-4Jk]h`j;$YMZlu.'?
F$a'u569X0X<@Crd/+WN'kI85O#]BSaI%rJGQq=NdGs]A#VrhZj_Krf01KAf<'d[68"]06Xs;D*?1kOU
e?7<;%V5P$^6fC@b_@0cIqDOUp`.333$PdrjtiDEFWbfBIC96WZac%R$n=2**B\tUs'2bbJaCFP:RsfE
j3sneOKh6sO!)JL0K88^k2+eK4G,+j>a&b(2$T%eTZePE5M$Kg+CbK<i#.b23/5J)e?5e'!i63j)kB:?
)kbNK6-UA,r8nmH>YjYC).`^/3asnD^3BG')-"nD51P4C/Q1:22.hlZd2D$#%f5O[;)%#V3PThD[AFjj
p'e8+ZbLbi'sho8jU>m?+8_O?;#N\ZfE*r(K"98TW4<pR:NpC^bSj3SqqM:PIQZoR,m_91roPMZ[+AOU
#;&6DHbsoSAl,a$.URhV>+FK["S(<8]3KrF$+VD%$q_>_B.lRC^Muu*-&DEDgqj\gL1Tdn"u/Sdlarh\
pk(8EiA4$:4m95=TOL75Q!&^C#Nq%!6&ZK<?=6D;@j\b3a-tTL2p>P[6'SXf[LT!nRCcRQphh&rYQWo(
R(HVP>'K5;f-'o1R(HUT-tf'*^S\E/EW4>u6nW[Z5E+#S[[Z<[Q6:37o\""`o/Y$#Y%c,eEA*tBLq0;)
?*7nd$$";&26C@cRCc^ULb/ham\ajFk:h+b#4^M/B66kKNoaC=26Ak^qWp)AF8hT>N71])op`T1jq^9e
j&kFrf<k6Wm_or&?LC8"rEHJ?='@EsI<M,]c,JK"Rb""U+<8QCUEuhUgh!"AqN"l?n"+3`LW&!0RShf8
0),2o>K\eB?,^O*#94s"V_of3mW)$;:5D(q:<WPijt>]$e:4VER&5$J&p'CZ=u9)o^LbT52!-FM[)@Xi
fl:2)6KToL[-0-&AW>/:LBh8U1.KGH*7UQ%pIO[6,j$`>[.HND?JFJG\Md*NQC*bD"Obf>KZm`!W@`&\
fkFX4)fq?[C3/LDBq!cR!cn`h>%3EF*8M`[E?0*:Bj,ODoIjonf.3\I8Q4A^7%:'Qm5Lb8h52O5TM;np
NA&r)QDQRLOP@M"qJ<=*YYEAiII:7E:$l,Zg`&:KD4.0FhPR0odALk\doOkngXO4Z>b=,QNGgBD%^eKI
&<=BTU1Of;a3&9udiZW8ZMW/D3RMJX;q'q%OQ3LNIQYn8*c`f*9j>TAD#9I:(CrY]6H`b3=a_]jIme*M
di\<\oC2B2F2$6nJ%M0Em\.Y+jn`cmGc3WiV-;i6Z#!Gfop^H#36(2C_IH-,s4)5;,PDs'/U+n[UJP<n
n#juIp<^6,Aj8GmpQ"\Tk</M,osN$*\/.$a%_7n.?`,bGXmc3tH7&T]mit?F^AdXTEo"@lhaX#NCqkt\
oqcM*mrlk1;p1E=]9]jlmI](Qm/>/?f9atbH]FFA*TqrZld@WBkHafJ>NK_jLm@Khe%`SXI_O`rfV8"c
F<=iUS!i*?NV75g<q<uVf!c%%gGa`9G;\D/d/G?`-X/dHe>@/:led'hB&E(c_<\_]]JIF>W5";e'.]PQ
-=9AMIsjCa+4Ir2--dU0HbPg!`iisQo1[cDQJ'^]U=H,Aha8t2lE6As$4icT''H(_?cohR]irTr8UOD$
;ghkbrV#Qc^#RT+hk*U*UA%d2n_a1\UWe1\f!ZlA'r%6s>?NLh>0PT)><48s6J[nVcS>A7qb8$9hPuQ.
o4GC?9mg0*1@)34ju7dHcKdZ_me]D\rJtZF>2,@Oje]4QWR%a7_p`h6HEFqproM3\9aSSh;i1D@60>VM
VHka@7pS46`8YKZc9[cb&GhSs5$Rhbk&4khn>.]/h-6:i9l6A%\orSF2b;V"ldI7tIr]Ygi"'@toDE7n
gVd"EQGs^e5$RuIeME,QXhGmBo?&5`m3m%d[6!rFPiY&$ieneK)VS*(R;Yas[p.\[.eN\I[Ol3o9%tfl
rmm*6HuD47Ln*'<@K+d1Y1Bn?)dhZd2;,=4QA&OKEro4b9):/TniN]"j?1b$dlDlF$=g2Boe24!O0Hi^
mG_H?/'1<BjJP5)\E<J_hF"c#>H$HQj/gUGCO+V)LF'4s?FeYE;SSQ56Z1SC+b#n?b5-P9mTVk82pU1K
fcNr7TYG.8_(]K7<Bm#ueFENbl(?LUVsIU8k7mNeqG"@;Wr:c^-N:b+;RRUD^PeAtP.#,+S^MQRA3.d*
UP#qmkmp?8kA!#fXnDL2j,6m/^\Q;TijLs21#'F3ra3iN(aD8-r,p_.F'p<!F%hepr^G`+]BM<e\_C=3
C_ub-p"Q=s`0)i,Yr_L(oQPW]n#"t]jW'^J(Z0.HH-uB9ntkG=b>[aJF7[[c9HIsOT1W<pbq7u1<pcRK
XR5"G=kE?%5,YVYCM[MNW8HHtjJ1"V[Sa<8V#K<tn!r/s-S<e3,0ndNe">O?^+R&WI,/^)05MGGgF@^O
d$QJoqqcrIh842QUWdj[s6S@b>hrfdYpj&6Z>\4Fn9)Ls<Rh/'\8q;\Jr)(faNY$Z+&X2Dnh4X6V-D=C
Sn\p3jt)r2[PlKAcBj]S3U[]tChZ&ZZLqJbZB\Y6J,R:T^WTl[Y1Nr5B_bPulYA'Mo08DNpd/ioE]S"F
J`V<_9J"M_J,X6:NsGZ`b[Wsk<k66fU4ud^W&E@f$+,0]MU7^0:gKo7PhJRLSD*)f,d71H,B7:`^3#?L
!Niu2"glMPFN/I2j4JEo6N?DinM`f7Os4]U[=%G^EG@]WO(iIh^#ph:;#@1\ZQ--6nR'VP:<Vn:Oa-;_
bW-.*hg[8(roKJ1*5<sUQ98C/d?1@l<P/7-m+Y,'C]C@1'AWnS,X3q?#^tqYWjf>f&!GO'Wd:#G1_7jq
rr&C/e2PnFFf!^PXLIm64rcdfq&<C&D42EmI3rb4F.o]A+bUCn#U+j463n`f&4-XGKFgHU+bUCn#U+j4
63n`f&4-XGKFgHU+bZ)s2+bua]cI[;5+dn3s-cotHc5nSkNB?&En>fRp\e$PkaINYF[?%5f/C@s^)T#_
hAcJl`jr\KY3eSB]>jBm.K/Xmo5,S&;:^($OnE$:^R0;;Y5N26$?A;M34</hs8CpOmkW2gIG*L^nB-E2
q>KW<CUB&Om`k8Oj4\u2o7#qVE:8[GE;p:$kA.8<qd_b6hd;([@E*3fD/\;21ZLN%g]++oqql/EnFqRJ
.Xi=MHZ/-Js(]Q]J,8.!-fT5P\DQ_>m:uM>q"k*j]XWAdp98sb@s\PgZ!C=YB_u/Vp2ka9qePn@=k%jr
_K(+uI1\eQCAS(tTDq@"p%f]9rbq0UGU6h5eFrI^^OMPhO5,.N6V@*me6H4f8*guF`0c#lAG.Z:H\q!4
Ap`:QfX+5[5OqgYp<3/gpY2l;o(MG>cdPuald.''r?/<%^Fbc.dTO,-\;#@Pa*a3?[sP<`SD#OLG<8is
EqeCuqB,]BfXAM]IcI#9CUV_J1s#%X[W8phq_P8@n8f0"?I%U']D&s>Y1dg;QQ!F-hr5$9E,S&@SRMAS
Ha9d-;Vt!fOM0s\bW:Wfr>o,p?WTA9kL4A1&Gs2H2Y$$RhS$:S^9:QVm.hGLbAT3**VpS7q#8@\jo51d
^:2flb=f?hGqAERla(+#`UNICqKluWHY=)#Y5,M*+)Q#e<e'8DNIUQQgR$RMDtj3P?i>KIF8A&FQ8?s0
VS5p"?d"V`6/TFoq;g=S:l3a&n2[)]o"4b,eUP2RgP3/dEbVu3FtY5@W;liDoCo]a(Uhr`1RW[:S*@I7
:NEn6Od7(@#M(j.DE:6YqbeZjVoI_SfQ68c*$fE+[JR)\2RI%s^2:PN8IeFkF%b8X0Rhk&-[t]qbo,8)
oaTWpkk>s+l!I,BmeN4)3*XM0s!([Ua(K-#om<UZKs*qS.+,jkrl)*&\n0X:EZ=gLM]H98HnFHk?Jk^n
K&83N7=K%kC7[_'s/5$B<8"Zl1d0g<%U.FQWN0C:m@[A:IuQ/M2r!W,eE;<FrL;n1HH4='9u$;]oXguU
;RW[+9=b!q,5^n!M!sq0o=UFCkF:=Q83Q]\qL-g+K<3hZ;U&A(;apE?M\olLWjXcL@%.$b?XWm)lfiVc
:X<HZPX8T?C6d5QVnR/S^H\OT4-Y2(,M"Ke^73^L`s'df6hno49[@*q08p9Rr(G.U./h.TW_Ijsh9X67
[GcH(lFRQ)8a*L/s&Y\>/^_C,NINZLgZl,7G.2ZM:$:h's2ZcNiH6l)@c,b?1Pf:Z8NS?Ln$_q8kk1r%
@Wa>9gFX@_*M5ji1!88uIkS,d+(\SV>3\\9%Ml%Is/FoL[F6hcgY-i"p9,Zql+HM1Q8no0GL')9>/);f
J#pSdQGs^qr&?K5G2>uD[^O%;9$4.%2smhmd^O5[f<l*rC@TaK?T\6:`a1anqmu8N]au72'Bai]\S!S?
;/2lSDbuUX0M5fq4n^^Nag]Ih?:X8WP'eXo^\EKY.9?Is*tTLU'>eN`r]91;HMHiir[((+r>X\`)s5=<
e+pT#5>:,)*F%XZr(4*EZS]ZhqWo%RgMY\hlPLl@3$MF%l@[LWIh-DZA%KKu??gjg3</448u6r,M"kG;
:T+(o%`pq-b%^'\O,C9/de]#`0D=o4'N-Z&G^Po=^Ln$)UpSpBo_C#kY.lB2UAT#h892H#/UT46ni0k<
m9a=i[bH]8^.FjDgR#i,p";k3QSYAn:NH^d2V%N8B$BV,W9NVmM#)TJC<E+DY,<;3jdmmnWCOuFB;6dY
VNg/X8okf+qP2R8DGhNg/%tNjB;\3(e%]]tX(c@hb[-,Eqlp'<;e)F<T5c/lmDJ]C9s$<'d:"p2S@)Pk
.b'\sjtF0BdD61g9:B%T:m4D\$FMp^om`IbHHc..9l9iAr\@3mHm0k\XENuY!i9IUpH?uggS'*g1J6MM
2^-CPUoA29C\@96BPGe7Ca4#<CKc*8j,5aheG3(`(MRW,;=9g[R^$\K+NKOW3s.(rRJnL,Xe%+IHgke"
C'=D"2!Rl/<*lU`D4LoVO0k-1k(M1DY0.ZV53%"ZZePp?EE>mSf.sPTf$,F4>&k1fjuK"RodfJ\Y@TqI
SC4r?54mNBe>BWpHj=("*2B@4@E]Lb`MY1;jnrG!nYo,Ubgqs/@B:J^OF"[b\K,Znm8=m!hD;8lV9`Js
Wb!%Qa/L((UpOm#H_j`c[cEY@Q'QklAWV?-d*e47IhASiS6r<l^K4V92q[<+VDY8ES$$Ib@i5NlC$d_=
38l`s5*^QACKc/O?He/N>`?)B[#QBn392s!qLF">CKbRIT=q*Z:W>T]33AWbPe+-npIo@oN.&ue7VOAc
HSHJVk)?^7+S'%_LV0KA2IN0KRb%IIg2p%^+.g;.GR;6b,/276dCS`Jqjc9FqUE3G%5D4^Z1a@3rbQ-W
N^NM+jFc.K]EDYAqWp(qG`-S2&k$PdnB:P/.\FmJk8BLKgksbr@gErf01#6HE?+N^e/0;$3R=Ap2<_B5
+RHp(GR;6bE^,4'.!poi5%auZ;n$id@SL+Ig.OnL0>ecb]EG'>g#kJM=qc)oqJ68!b@M[+"I41AbVk+E
WU+\t6,d#3CVZ^b]!<s4+P)e8392B<@/>aXpULNDp)&fE#]4=Lib\>K0<*W/0a>Z)cCj<1Yto$;V-d/J
=<[9GX:#N6f&D!b1T3:&HW\OOK#s(Y+)`KM^VE"BL=-]6:1+duKFLo)`glN,WgucL=,cKqiu[!9QG$Ki
fT.tDg=I+jVVVER3/]\c6,j$I-g3hX(/R'R*^I-d*%*^uC9piaG,.<6?#ZV3E=JF"2M9.4,/;IW6"pDS
F9^t7fluC?C'*PNB2JQO*7$g$C8Xu.Ff7%9$L<9GR<.<=:'\)>RH&r?aM'TDDY`XXK'RbNhWrB.Esp1u
cQL9$F$.&:3<hXDs,cQ`ZS"5!@s^11aFViDSD3!fCKK6>J]s)__RUZoEf<)$_@C[*N&b<oll$fRK\YIM
HWW63_>.6:!U2lH=cO04f2p7aE?NF?q^rl0g]I*6%eLSpNb?DA;mET)83=.13(CaWB.tZSTQ@WAq$^m?
D,\`H_9_dbhh;.m7Z_n=#C<O#a0XfI/;(%q5H$;m$Kn9JOEuH;KH03'_^HKPKXN>mbM_D]`bZ-,%Yo=Q
r0hBE$00&]`U8MA2cpmc2IK47+4l.Zh\e`#`LJT6f3%COE$030$M3V/NQ$$_nMZBgg!P*G?+8)bg85i;
K\%$!$#.j0TZ7<ncgF'-.i`ni*@%Me+!2T6L,SG(VTRFH>E?$%=1>.a$FVUOqLUWm!P7*]AojWsOe?=(
a)'7ArGC9++'a6.D\&=8Zf-<`o`a3L>aGZPDK3>%")WZf31^ke0=Ym&hPT76M]V`SlL@LXRrU\6^0EB>
UeQ3__ZnV,GT1U^@t/oH7F:Y16CT1n)E"\#fm8Sp^:I#RoU'(P$[b^>2XQ^C]t.hA0ntIP%H"<bZh:eA
%i\k]?dPZu5kbdf?dPZ5kb6\44r:t(hZYkV^0T\]nT^OX3M7Giip(Z[LJ>>I'jb6$-DX@_cpP-FI6;9U
c,T:TG^[F(1AGi_ThWr#+=krXeA4:5YBN<]J^<6#VL@apeMUQlr!bM&^0FOAos\Xr^5T,Y$ehrukV56M
(URleW7g\4-s+o7e8.:@Aih*ABcj9,nBe%WW7gZ:Zh8m<%8Uo3UA$HDY-'FVg%p5*;j7'02XLNkD0b7.
R]XX,#1RJfa'N&6hI?[Kp'OTVFTnsd;ha8nn^+.XH>%l1mp3so#^to"a75&ZSr;@@a,Y3-oqd#f<-+a/
_"Tr1BRS9<rls+]gU'K-rbQP%2EX,ZgE:B0o..`Og$nXB.G*(g_tD^Z^pV,ME(sV#\j,gCn3*tXfsmns
+*t-DImpkkebS,e#^tVp96b,K4P[QK&)=c(&,36DK=5LH+2g>%nPBJb!H!H1q2hr!4lZ")2&jSY41IdC
*jiXhbgt[K4oE.Hk;^kdI6d*+N^9O:H[m.b8^6B_CGs2K/nY&#GX#q$r4MQe:!n+BlM<j!Q%'=YkLFFL
T]6jR$ehrmkl)`?2@%q@;R>?J.lA:&VE.Lb#lY=9fri&]YsKIi#H]Y*XJ9nrco+>5m:QPbYDZnD*,$Fm
lR.&a]\aSmO(D_C(=uY?`7cYN?0ID\3[8=oat^t^NQ(Qhn3.UN&+,=Kk;[M\'F-ZP`nUX0C^n8S;p]#!
@W=8G/S)#`k<R>1kV:E^N1f2Ip5S!IMI'B_X<;"(cKfEl@k?I5K5iS/LH>k+FbFPg[M!AROEI8;*WTh`
'O9>YZ%h*Q6,tYFDoUD\X0:,n+NkPtRiTR44*(c>oN4]Y2res10jfP)#onT]5`QN;HMn=qr5(F_2XLZ'
LWf[/#BFZ&NY.dIelh]*4-9>!a6nY_$QOf_5h^eTLcLRe$i?D6aRQ0uh`-7Ig">3K5fTtN/^0l._X)34
6&gjr[8Y/X^pU!Z8>!]3OVq-r_Z&[8<,Be6`=0$oO8[<5A58N&Kc*i`_#EI6<1Z6Qk)o&_-ldl<+NFe.
IcChd-KJFE),s:#S'E/>Fte.!5j$&kiVZ.Ie\3_LRmH/=;Y`.[?+BaF<<b5@@,K$6.XkfUo?8VM3/dAI
B2F!mlu-3^b-R/Ggk(+Ba'jJh$n@=M(&O\63K?CI+NFe.IcChdIUR`t$uLk,eW7c+`=eCgjS["8<;ao<
jr'D4h=@P$1<aao9+^rbj#WO"quZ'@c(KIX.*Ps6W-ZX7n.J^67F(3\4/d-]oVjXFQu/m2$.5Zq2(=h6
qXMpJ0q97`).W)T#3E1Z@pahDK*UAF.j)^b%f4[$W'2AbMjcrNCg0(<0c#K'=dC3,ME"(5$"A8mpK(RN
aH&-t^'5/SZO^s\@\*tjb,f<JRnTHcVR>j[q,Bb`c2!>l&:07EK\!NmF#ZX&9rlV&r[2ImrL3)j>Cr6s
L#0<6*barmjP!1@>4p6KT+W>CAo;\s+pU=>`s@C+p,R2Qd$dhcar,9eCKbj3qs`UPlI\tt;aX`2/:HfP
<h&1Fe<X4+A*);bCr.nnCKbe?>k`M<X3YC<I8+JsbW`[!X_T"uNT)gtASi!=]*rD5flD,*UX[=+b`0VV
l-nc3TfB0&c5\(9VU]<8`u_-I+0Z8/c62fVJ3GhcCS*E7&7*aG`\5B1[eL-h]&36M9E'M6E9">!)0(V^
RMMO?*.+,OlJpfgC[[[W[YEfpe$Sm=qU@L40jCg;CPfG(@;[nk9:n,_#fUN*#TP(RVUk2ka.B.S%V?eh
S<i_8T:2W8=2oYXdu70@GNI,6CU$&"S)UfnF^1[q9l519g*p`NI5]+fVl@q+F3gjCRY+F">8(AjVl$F6
-VU/$VUd\lX;tZSegT-^8^h,fY5=Zbf"Z2'6(6Lj-J/g*WNH2:#Ig\'43filBklZ9qU@@0rAl7d]>jgi
GI:/)IpjGU2RR+V3]Kk$\ohfo\#HA,eA9nh`#&'FgM#I7]p.\5=oYr[[86%2W/9uQmcubgre:;FgXPkV
YeOnA)P;Fg4/cZ$*X@I\4npqqGS7R\W-PO'p&E*V0XQ`Zl@8MDqK:fOURo"Q^,XQ=C=rs]U1H$VXF;5$
p8DtjV=DNeoj@#PXM!ZIoZP<u7ucU[SVL<N[VP"l+#VAOD=$"^^I-<@g8YZRe:eh@dPK0,4.?,tO1e.*
h^=FCM=Y(Jp\[Km)u#ds<9dh:qJ=Uo^4mINDBm\k0q5mQSH$aDk82V9oZ@o/;Dr,&25Y`DId3!.TDfe`
AX'iRruuLN)jtR#e'=f_+5%-Y)XR:l/:.?ch>QB%m+XAY2se999n+4]o=p`c"gKD-q@kLl-+\76bWK.Z
A#@)Lr.j_^o8i#QpPptKD-.$LHKX$A7VM_Jp]BPUI6D2gT^V+AbERM#Z0Cl$Fg4!s<0f6[6J%Ia_.n!u
-0)U7\I8#^>P6o9=k`eaP\[^)[d1foSSS))<HH[N0+e":l$)$jUY.:805nON/<7sIA*1DQ^+F22WIJX4
_>;INI\B!Z.R2mSHKS6IRHqmESnr*S97:br^VAILlJS!,HH0#-ahF<?a4/bN[/S[aKB>BmT3?RUC,!gi
*0Fa8f^Ps+[tj3N?H_\joN<c[/+n*4osqNgc^s%dC!;VY&YC!8S\L8sXP,VapTo0VEC["j.#flpI-MrE
T77PVa$N"67""90hsVLe`cr9N=mTR:7gZ"1WFgTbM9`0d9Dr\<cJ!EUXMsJ@&T#G^<_k<UWR2WZjMuKk
p#]2@T37f404Xi!O7XfHK^n:Tb;N5@6V3bLl<eRSYdNFn#6n=s!@sd4qNEMJpf-RRh^7W\9A7=I*)B<k
W:p\eBPk0=#]>&R$bnfWp,1+"=(XtEYQ&r1=RDC%]Tsd%_]4-Sm]grNlI].*/^_!e^*9D!#FXW+L\@Eg
pt@lI%gI$B@nXk-j=bT>s!*A9hNkVB+Y`:I8GkXEF@ts\lIn6k?V(1km_(UgqTWK`Y-]d+BO\5tY;Oi(
CpcDPradU0A8Ru'_u&[Y7]DHLD?4Md[60-(6uDXO`;N"om(B/`X:<\:%Q/0!>]hQm@O#`RoY"-d,Zia?
g;-R_hg@0WQ@6Y,gG+Dc3NUH)hphK?f#-;>+"Ph:s.<*=X$,hhSji7:&8D]_KtanI37PSenO:["qS(JE
r0]B[$,5Ou+/`\kg?u3CjQ=`sp##M?Dl;L@h`QhZ/]$$AVW1-cm9!J>Ep%V3BJ6!@n_Kmf%"5R5Ze@Ts
>K>>6@2fsHN"Z0Ma4[FM;#Su`Zu-96;md$LIF*.7l\Ai-ErCpbZVt_6gA-\r[fl<%K=JMiG5?^e4"F+;
@qO8_^F7D,HB1#6rLV2]%!.JC\PcXF\I.*1s&ejW^U8\t`kRXI>G-,thR#Z\qT`i6;:b,Dm^g;N7kKoR
?[>LO+pYNDoo](;[$KUAQ+ZlYli2GfBjZ1@r#$E\KuOpD$]R(r55rTcVo;ij9ejDfL";YV(&Da=/Y/#f
^T]TpIpM1poud"#;&cMe/Z1=\Zh+3cEU=it3<"2Bm8_n++8)]";q/9Y:?2'oDa0J1dkrdi^X)#!K^E6o
R$RbAB"t%Rs5%d[#lJjCD=pghkC5Ub7ph_)qSTDjqRqi'rjC+>DP?1;O,s<'j-l;/+fA$"2knXT`n)*n
\+a?m:Sr3BqQ@o0/,N>gbHq/!XE/JoNPul%QZ4Y44n?s5]9q'eZ)eR)#U+j463n`f&4-XGKFgHU+bUCn
#U+j463n`f&4-XGKFgHU+bUCn#U+k_(39-$ptHmNs.oCAg^1R[h;?I::Y-N^$/p2>3N.r2p*;NpSoDs+
>]efF+3?K<f+7i+ja)8EeF95r[m"uYhF9O"s03*T:CGd'bsD<Iccc=aY?LpJI;dpH_;A%E/FiK.q3?p1
ope7.pg0'#@Jcl!?fKWqhrC&6hKO1.pca%+`V.=FpWWP&frtE?,gMucqqt`ponEC:4)1PJq/H84N,/I[
_t!1ADnk,/&_eZbB:nskT$Hs%C?:oGNc<<9o`;h4F3R5(\M`I9NVUcHH2_-S\T,s/@m8Z)'BoIYo\T%#
HJT3<)quV58q_&SmHp[[2J5gYT9ud<m0.dcS4;-8g>5$)B>bm)>]5).p8!N3ZZh[X0srsKmgm=LR8^$n
5EibYG4-Hr*GE"3GE;.%'ANCIL>#MjIa3DSpJ/ktqKlK1psbA&lXdZYhcEYCIAQ]uj\'H_[*lNmMO!Wn
Cd2DU(0=g6B;Bp`mgK',hmWmYT@tOcZ.uOTd<E%4)Rj/W4(f)]^F3<5,i>Ypd<@KcQ"gD4qY+n`mht^c
iBDU'hbfn>^BaZ$ql1\0IFN]]")R@arFe5FLQi8TpY/\tU1IB?hq@`M<SakITY>?+3Tm1;eZtRjWNS8[
bpT>T_YnZ89`P.[oK6cIkL>Q-?.AUG>FM`7,b8<<CARZE@Vsghe%I=sIP5a`mYRGu(U%De1ociVMc3Q$
GTuGP*kBuk8aUjGl3se!cfI?tL@;H=RG4PiT<75M^#\j+m,^70h0h0:o?;'Gq._Jt>!B#NqG-08fN*B/
kN&i^_t\R(^QJ,sM5GQ.j^bD$<(^W5*;c4+oJMZ^GECLl\*+Lt\O&AmI35;e^?*ANp7&7/c\cKX[I$VT
29.<F!e$qFGpoY1@2u^G:9HsV/^ubW3@q@`MnVGn&M"AqQV037IZp9bS43!*L-;$0EI:LMFhtC)NV^c$
4M6k5%GITFqikb%-27<%];O?oo6n)K(JIW*%oJg#4n*m.qOX4IVnV'3K&=kuV:p!.q*=n*[Cs;t6c:rr
7sd^4le6DDSY!*nh^9-p`$gUR;Ji0(5`7l!G_klZp=iqMcP+d?V(kk^4.)N#N+$jEOP)!`rR*q)[WBZA
qRb=U=P6*\RO.?/W=S]J2#WHB1$/l1?*(0uI4hi*qU'C\CZiq!>Q(ff1eN+R=mApYi]A72**NQR9`"5K
S]n?o^5qMQAH0(9^?H^1oD6)]6VUW+@a#IW>,*e\dfe71g=SC66l(-:hF,D,5EOP'l#.!Zn!XbE?.kZj
m9THZ^Hm^2$jj=2X=cW-rnXrk*A.&/+BB#iZ86a??e]0TS*lD3Xafl_BodXIk9$Skp5\XRQp3;eNnue,
>'Gn[EL0.QIkgj\4OkMKHG_spmBLe]'tJLL[6Fu4?]F1W.;]<2a1de2pY9QY_rIkCNdlGcED=Z+^#GKD
G#5!9Y9O:qB5b3T>;chLeG3PKmhs`AqUCi+,))>J]llV&XDJ?+e9?0+S^UMUg\[61e<]kRKuNg&HW^4)
a*$A2:?"1fq@9^*^YTaj?h[37&Z+BpjM'1uU!I4PI*ZI#oc^4C`9KXL*,Xrm_B/\&,g8(>LM=E7,Gs.?
q3-ogGbKnB#mp23ro%XRX^d/lgWQ4B%+B-[T^DA=pVE9C$]eL/4/:^"Fl>3XFe3c$Q4eS9(EU%>O0u@M
WF)j"Q\WN5[d^e\q)UCpDNonu[r+5[4F6nJ4cZK<\RR[K9)A((j4B&jH)B$h-Da63inc**3?.2[`P#,I
QV6oj=/0A4EN`L>?E!OX[I`sl6B-J2l"dnTHIr*6D4r*Kna;h!SCoLT05d'/SCoLT05d'/G-J><okN!r
$)N&"=/+9D1;6:XlVe[.V!21ZCOPX`rHMtP<n#L3Uo>B(7fSXK[N=&?H<6c95JAJ*HkgCE.cZFD/`V6s
?`Z8^mal1Vp>^!gRkLOd8^ihUUOS+V8GQ@GK/qmM2<.gJk(M45QFC'9drpYVPdaL2ISALuECAWd)9ZWr
*K8I1K.'l\mqT5j+Blq`4k!jVSL=18pal/+anheVg'3SA-b1<UDiqB8=pier\%!4+6dnqg9@i(9$:iVE
(>UhTF`r]ZXfYD-a(`Z]Yg5=)93Gb"-r*E<@nnFIlhH33fN,t)R@g0Vmfi2`mXa5;^U8QTm9lI83Ao"e
X_Ae?eIqo;/$1g;p>a2-XhThJf!O"8[T.*HF-djo]V]o/DtUZ2LCe*[qCt<mlgKtegh#gEpIK)uB20jM
X6(=S3MDO8c,H4")MI6Nc$'Q]p>$(hl[I)>,!ON0EE]b.F$aYGD:0>$hBRjH.*MuL6&\<F:2!A&:M!b<
#1:_8mCSc2l@/'3nfu_Q59m;8#BN4I#&2CHEh;;(`4?SV0IPq6kV$OCBFQ.D?qtAA+uU9kI6tpcFW[lT
!Hn)KK[sa1BFSF0+6PX:6-Q08:1sqXGKHB%'%C04[T,s35*c!gbk/(8W&6<?+2SXiN6Ig=&k%]&H&a\Z
qTk\Y'%EA[bR)Oek.1u<S<+7*GKE%BRGN)$Ac6*\lKfgq2/AQmRR+pG>l/7?<WD<iQ_=%\B$<0^3pt^0
bVk)W';+lXApW'We=9=[pKrO#>$S7M#,S`;?L\FR5=V9Y"I1&JL#W;q5qr*hk(IB/YnhDtNo"n#'t\GO
`KJsR@7*"uF9WIeE1Ghp1?Uol3fs3'@npW*_<=s"DYY>=l;pr6l-(,EpJF,*EV:#Eq.9PG"r1Jn>arT]
S3'!.m6J[pa>/6g:iclO8+m@39G8mOEFt60qkN(in'$d:TQ1Od?d9d8%\,WC5`M+1kd);N3/d*fcQM7!
k(FbrR#O,bA*Q6uN%;rl3fl?ljtC@:_8R53H^u&8rb1rW%chj=p>\0[iu+3tFs,tX0dh?Bh+,I;N3aPg
3HWJP3fl)4+Iqo(+P(-\3+'[VZifL737)j,?Hs%V*B<c(J)*Vsc"&NRG+e"E0d^ub[4>`R#;UKhTC"o?
6-bg:T_".J6cjmq>I]Dcs148O?.]WJcth/dIu04>3)0`D(7Xo,*9d7Aq(haAb'c>kaEW5FYPZq"Zn>s\
m6LONjtH9(JE)=P2PAB>T_%0508%RUE".&>b_D.YcUdN9O,dM5)g.f2(<6a?o``ABiGH^p'HCf$bre'o
ZSBe_VnQKN+2<$U8!dHB/fa)[''s\Z`rjg-pi2Y-W<5:rLmec;B8E"Yc[Kq:f5/.d5$A=jZT6ArQC89O
A#V-N2W_M,%Wo<?$J2+?pK_b<W]ohCe^leE?2)`MJE'cPB[+P:Jp;^[q07=.%9L$<K!k^#Zf5i;r'DJE
>^_TahK9pBfpKBjT\'0O*l!bR]t1pCmPS`ah53>UNRVe>>U)+1T3UEA2;8^c+70H7fc93r9?l%cJ,&=*
Ji:Ts_Zs)GiVP7+g%r'+=4V1Xe:"\Wi-6"B]%h>^X$6C>lK_dLYj%F$[aN'3F$(sZZSB5A8$cKH^<@13
^IS3Fof-/A[p+dtW@rSE@pRK_gU,"g?>;Cr)KjPGIFb@/Z=Z1mmZ2slO$q6I[fJ?jTD7F2qLUWEe"a'D
Zf0(B2-Z\nF_/g@7,@<??YVK6[N87Pi1Wm8:p]hGRLKcb)]!1so0U]VL\_(u+P:g/Q)iZHa#^'HCi7R^
8&5"!Zh9_FIV$cI7,?I7m9bBnK::'0_tX@Z5AIVjqfc=O?Z:rH*mR(8"6Ufbi>_tOS:bced-VVCEUD4m
TsaRHkdB!^Q.J=jiO9'.k<mQ"=psuDM4BPHRLPeu4VL?8IBLoI#HlC-LMMb*iL7?&\>F-c7cBfIBXjol
Q6YZYHEKIiRtLS\i8Hj*Gdqrt+1QM0*q!<fLO3+]iSISt"J*T2Au!*(!V_E="8@Vl_`d#LE0#6+BA4Z&
Z&8^dff00RY:g`"d&+KAqs>nplSd+YNH&o%c$!ZEf7!:9(2>`4H9Nr=)h.f>l3hufV+huorZQ#7]FUfM
lVh/oY1\-QI<<#rAojVT6>AFDM]SO.g10T;1P5>Tk^ArG#hfOWfXL*]TREL$h>A==^GF<Mm\B[O3C^f8
T%h(9aETk`p]BojdCIW1K$K9g48:Q"IV/eS?g+cHmMS=Q`>GrSYP[O,X2iopB*<(,;)eat4hdKWKc;P$
o[uCip7;jJ=&2*U6@Yc:JmP2bq2NZ.EfE\o,MKp#UZ611/e560\FM\750,`UN%Z/ATA="\MDKjkK@]oY
TR34IZlRNZ0qB&T*>l+';tlD/>`ZS&c3QI\ahA>lEi]9$$O:^R'`7A?aK\Y0_fqco8mQic0a$*@F56FC
FWVK61Nma\o9UHK3J/;%_"bctZifJM3frCu359G;)8!2hfn#)f)7(>^pQ7N&lMEO:TR6g]Fj;+X!pAQ'
O?T/E$O<u_13YI*WjA3O5(h&e0kNMEmN]cr0m8sNkuWo2S3`/M@!pouNpF=R)X%BG^<@_T+5Rh<1DbuH
_p9IG??=op0m+QQB/=^6K$%G@>iuO<(7^:AKC[^N[qZ4A^Q-/kj2N2YrQ7.\1J%JeR*F$jm\=ft*%SW(
2,8sU,;Z:'!fSdE;"^-&pe+H^`9bC662<jMV`TP%KcG;"e%>%C@LgC192PFWXs5cUdKSuUSjE0Uf)I%p
R#SY7)-"g<#lC*>&9Bqch`TB"m\A@HiS$su;"M@;B?t8eI4su)(uss/Lp;A54(S`8+#8&N"P$Q#V_18o
j.T8>3MPpd@_#>qm_T4fDc%G7Sj<'Tc:M@u8pfA_guFtkj;jZ#>_?^jR(HTY8:02*EK>J*Lq8X\#<<<5
#srPbc<c.M>E#nT+Q>`=s!<Jk&Gn*2[-!%OYJ_?tgb,bS3cd^F+/DUUF8TI:<c,W3HOV/(cT$8CCH:FF
d5\8iC_Z"a6O%7?X6<L6+NC/'V_74>pKQB<Np2SQ3e)ZiK\!Mr2<HOC[)Rg$s)D4`&'S=^C!?r=GIaSn
m3CaGfCZ6CXZDs3&*(%NAJE/;+g!b1`n>?8i^2_;]_B>eof42X0&s=I<MRp=`b8KcQTfQ:+FWR)CHKW1
.,qVr+1O7WS<j'TF-glMi^25r3%[-6jt>]$k(K,6N71[[RCc^F7,;e/fc8H]VaUtLc;)iorlljMZXXDA
*uAtDRQ)lZ+m(E+e<W&ie2/c=D%uirO<a%>D*,geJ@;G:lVQn;hBOUl*HRQeC?%Y+5>%]ZdJ@5!kDWT2
o,amU$.5ZJC!#\hVli%Smap`?mTHqlXmbAC<G?2r0DDP?;em>\KA3>CHsCY3gVG_Sl]lNr7%2i;WApe+
:%,Z#CO9fSD/0"WqjZ'aqA7GBfqrAR4LTmseG)PBKA4nq(\F]]e7]9ee20\FrL2BA<_HbQ)ZR\RVL<4%
*W)>7WEHG"QJ+VFKCF+HDWR:$qB:l8#BehHj5A:5no&`4D^*ftERYn4V=DNe5#n4*[#=dO4e$m^SJPUj
fP`m-)NE.nVcqdGbMs_J5/iQN^#O7pSADhh=4@+pXTa)?h(Q29/a]YSX!bC9]1`+GXn4R:GE(;J8Dfr3
`kNMDhk];-I9YsgRiHpkjh$TCgSJubH]@8JmH(fu^>IK0pjM4JkFM3MigfIiHTdkds/#AX(EZAt<Dr6S
_2RX0GL:W_GLLccGL^ogp2$dH)e?^25)ih1\!q<55JN;f`^?EF=>FLn[2t$e:&R7fMc#f%nu]"\nl#&D
rQE9iDl<KHp\lf;'8X3'V;p]Rb-mAadP%)=)7$P.aBE5q%\HiSP1"ibqI%(;hmq>4*`;Z)qsf!W7lUBX
D4U,;;LUT+:NCl-DnfSH^Za)&jQj"r5F>7!CYr#ENIPd?C8B-*NF>Z^9cm#3:P:X1j+ZRilRh"bj0r7c
BPB)n[bkGsnu1Yt&GJBRhgFhQ[r]:@D1,4[?=-M&IkGMdiBMtk]%V>4,SmP>K7-thHWV5_n+(5i]5OTs
n!R8HZ+)+A_mPO"[Ol>49B4`p*4#DLI=?Ndr@V,/8"%Pt5!PcHmU<gWk/6)ull5SBoj)@IF%KV@ie'Ib
Sge8E^MH)UT3[i=)o_X0>2/bRqka79XkLX.1IsW'3MP?Un_;C'B;herV(l<$\0=:gV<J;7G4gigrX.D+
A.E7u=.?rG]k=:3[pL&keE#``\a2IG^DPE58)t`#r3eeYQCUn<D-PH?RG/3dq6IZO.'ro[GfaFX>?a&0
fB/jX[u2R2*II238&7!8[]F>HO2gomUVtp+/\b7'?gRSf/bA8f6d>Kpg3ip_Qu<8fj0d*JfO!5Zd24=)
C1[%*/8a(oN]n^;gZj+pincWf:<:#=U-pZqqKMVOk-MHhR#\BjV"s@]r/T@;i5Z)!m:(p%.FHCKSg',#
+(m^j6_Mbi.M$tI^.4$0H*q_>:LtD.Qn9n-\4'+(_q.C5g[;J'-#m&0=+!(-NnWol/F,r%?c+IWo%i?u
G;4SLP2hP0K0Pb&c@2f?5BY/&[afDnj`cf2S!_t0`-eT8G:fTYVgGi4Vf!B#+)Ad$%-dY():J6igP6E$
iVQT4+oO1m[G7B+6aZcj*VFj2Y58-4kKghkDlNUojMoJL3^j!Bo+Qbd\tXY#Pd\6I/J2b7oc:I>VqT'o
s0C24'`.5qNH<:]qTA.F;t4;!Iu39W<I\^#[C5%r/E;M4_s]\YgHr<!h\P@7GOX?Q^V7INrr2`cGA#:5
#h3bWX0nP>g;Mch)R[6XUpt?>pTQc:f)'f4s'hr*@Vt+7a^:rCIHkamZ;%Y$*gZgVT^SrKn0%&nqKF3'
n'E-l=#PP(Aj:^o1?tY'Y@Va=3L8-7q]d!1mc>0]jS%X0k@n-;qCMS(X_[YF#At,gJ1s12c!U77q(n`5
2W#L4%s)4t]uM4P/#1FfC\BUY]jknfQtQ26aib!+\[6>ZIXOG-4GG!0-N;PNj/7('q]VC!]?d@$4S2mN
>Jo/_Ms:5uN,'urI'kj]QS:(qom&4)(rY*-I4EER)R[n`IlRG:Sb$Y,hAZ%?S3BsGmlr1@h&.Np2fM4&
q!]qJs19`+VJGi$I4+[C5%.[jDYignD>jp2bG].bQI.QJSnIt?r/L't<56Du#]5u^[Y[4#:6Y'bQ+SB"
*.-)1A`VK:rPR1VPI7?[En]t,b,NW3-i9jEEq3]uIZo4m+14u6GW%ko+bUCn#U+j463n`f&4-XGKFgHU
+bUCn#U+j463n`f&4-XGKFgHU+iM`M\[gkg5.4L%c5L-&*n?P,+`B[6oQN+:Zi.G<[+@kurr+T3qfNH:
**RQr7XlIoU]43bgHo0f<nH3AinbZcK^3CQe"-)QD+7eeh=alYS%-E1g9Ee<roh8iZPhBnmYBi[$J3gg
Tk2aIg/4@=WOR8fa8bYfphcGn:9aEKYJ)YVC-SZRFZ;>*qdnI;Dt`J[GI%07[9W`\`\eYrg-/NFY9$j+
f*f":hqL.uonDfSFOe&Y\$19rXGj0=ZqgY'Sa1+LYh8s:=)AV[p92sD/p$`+IQ<r@mO*+q2UUEO_r#7M
ie-%"Z-B/Sa5WBYY7')1J"JR@?,"OmO1%^\IS$uoi[Duu(*C`um[%=.AG^_QNO%CO9$;"qI\>#`^:hkG
ceS5MhV)oAC2K^4@A%bYp/Wr`nfLEZ5)r[9_L;)H\SbW=o%g/^EbqK3nl&]#Kid$`0i_T2-<adT^#/R/
02$f]Q[cbEe8P"^ma&UN8(DL+I8=R-[unF`nb%"=OBA!Nhp#tap3+i"WNhid4PKu4o>EMg2@VOP*ht]s
U#l(93=*$Pg.pNqFdTn8h^6=rk?K&*d<)Qk\[,C5^ZBf&^MSC'NoJncbG`/4?>elZl.@4\:A<+ROJ=Cl
=Ii%&LRO"1\"&TW;6BGUYP7Vs@@8r([R\R@WVFj"R![9$qC_V>k%FVjb<t/m;H?`1aR:(PG2chE)qr_\
BNocP'#1^7hlTWFgYjsbDCoK::[:)HIb/[?XM4Rrk[9<9p'<NNXBiKXpeG[7[a]U=g+laepTSA1EGTQ=
[BJJBh-0/Rq&YG9;KXQ]hra33`U]?Um+Ks]nSuD6UTq-#`Ul8A>CJ29chL-'ZqkR"%EZkS.QNsQikn'J
n^Eo[7B7*u*r=0Zcg3gmI!pn-pdJ^XG@YQa`A-hYj43dG:NinU'n"8Am>h2fHXi$-g74\>P,k#<R=*c'
Q_eP;c#9)K#i"jqQ9"f?`"2%be7ZsKO#"bOHHqYeiN^U16@]#hXM;O(<o:HpDO&pIJ$\:N6ee%N1Agq8
UHXmU02aT1N*st>3=.3sf(PL`>PuuJ2YDLu+EJL!a.)>>es;`\7->o`SmTZ'pA^E%FiV5"`=KBUWC-uL
eE;O5r:eVpqb#ujQIS(g@K'^30),-'EfX)[3pr?ZQd`^Yf[BP.HB6j.KRFXskVr8to@t7VXi/p^CL9Ok
hJZW3[%'Ocr0Y7JGHMg%>nXo:Hiq:4WVH"!b#][YkrtScl`99ZLZqrNR^]/DVaLcVjQ'e%qR4ZAgPG^o
h^d1iTl3<jQ'M-';BMOJhD<a6Rm/e1@)j[2+1ue[&+1%Y1f%\^bn7[f6jJX7Q0V[qgAUMcPrRVHcJS3O
ke>eUYc6nnI5brb/7.oG6[68+\4s`m\E4(1/Q1GsfB.d-0u*%`b@1:<H]4)6*2,#LT7/j<p$GN^J"oD9
ke"PZ]`6Qr9)WpimsYkZ2N1R^4cdh9QF:WV\^!?9^,jhOq1nd$XlERD>.a6Ie";E[I-Y"8dC_2+b,S#3
fXDL%r-#73c>>L-4b<#gW:@^#hk1bV%pO&FhXP/rO/$aCV6P)Y/;tp@Zab^<OgEckr'bkc6GH'N?Du+U
?A6i*95-DgM48k!K.0.%?/iJg7'8[f/<+D0U#>jsHtk/d+(?.,lhEM\m1Ij4eXHDI07;Z*.q?0W]9Y.,
/)MUIN=JG>0CKY0Zk#%mE]ru[pI(uE.P7PUZ,eN)K==He*ad#0[s1nfaso/rH&pI>3SJSEg+bf^jY+pc
D2P7"TCZ+SQa]NQGasq;>,.MMZhLGU?YXU&=/&.h+.^//'=G8_)(0Y4C1Ap:_J*[^4LI5;q9(T@F6%^@
FBD8poZ,F'C^9"M`\6V@?@ea1SuC&Q$M0U(>0>T^j!2i=D)n`kpK)l'`D\RYc/=tt348_)\TtEF3?U?n
&2gWghU$Oq:FiSX:+2*^s*@UhXaUZGrO/S7hYnW;dh\^TSG&P<G?/D+5,_1ka4635?MF6;eAef)\]^9U
KK83P/b'5?(NEX$.V%j*/`d\O:=DAS3c7@K%5VU#6CZt3H[O^i4kouoXZ;`<>]PbY9BS`MM&+o)#kJie
>&n1+EV_iI;GPo++/^uobF!,UD2P5Ks2[0E9rh!0`pepbTAO2)3DOAf_Ycim;;-'\N4#"Z`e9k;&>s-3
N6`W*fg9@N4KUU[[f:,HkL8SSct^UD.]qFc?>2"73_&TrkZR>1ehO@e[?i"`0%Ws&dooKaZ`ToqnK@Zd
)$_g/[HX:F6gSI$G&U/kr5/BN)MCfh@BAjK=C\<fs)Ds"asm4XQdDUX5g1B^qnH[+[_AEJ34a3-X;EO!
R-tbXr6d?mk8lpR<Q<`c&ET/B#qeMW"3,.MB[]/PoW]9d0Fmej[HV#TAaOdXk^2)(M"l]"M^8YB`BNH2
Lc+M.[e:>5>eiPd);5c8C/,Q)i#1$.ls%"n7#h\<s0t!!nI+q)9+Y["Z1\eu3TYYD-%fUr%ZK(Q#,+c=
T\=7ks"gVKFfVW3oY7*,jh62udt@IS-)besN3sZsrQ9CV1T:71\G"G]D2JS+:)@EK)-!6gepUB/((mb-
$`L>5X:%ZtAW1t<3KWk)WInh[j%qbuA;3"]KBgM9g(?,n@.M.5\REQB?9)>@"u-oi@6`TWdP',<"a=l-
q_Y7(B2E@cE4s[;g(Y(G%l.eX5kVggnik.bfV<EC0`sEGNHN'gbW0_$;$V+P'@%VB+QG#U:#Va>qgaX3
\DDuCAVX5K%2j4@G;1lZDXK=PQO]gpjaLtTUirREFs-[OOo6D8L,SE$E]h5fbh4DHlTQ8eIO4%p?-[G[
)$O)jOnUmmW;^C_F#tA_3/dD,*U'fJEC.$H09H&I%)OmUd,Xt3q@>TA#2,lF*Fs&Hq+CrJ-K#qj%V4H&
Fg(t=_aVQ3B8/=`K3mkp3?*>U2n$^VEXW;q$-XO4TWp+/OP5t8dl<G;,@%;%JaOaPXNc0:BN%%W\<T&n
]EX8<B0_bgY"R_=ch1gSE/]D9,Nc_[=;t'A44&7mXoV1bp&LX"B?g_=<lb&&O`<;2BQ9]Q/(^/3T]]ch
I6FhV)N481^ZGjC7aS"q5jJem2Z29YZ2:5C/D$`6QX/`,*GCFTp%?7Lbb(YB_j;mVgJ==4!3Or,:>s5J
`P)r<a'LoQTqM!dS=Aq3`rjh-pi=@MO"XQScUs]#!'RN<m1b$;CoH%NZho95?W\*akkO0&R]XWc=k8)8
%B(pndiP0!^ig(Bk8pdugV_$9$Q6/$\:9bGXkBj@VPV?.'5BG<%CeVLD;#*!B&e,ZI%(cFkT62[lF@;!
a#q\Kf7b9WQ'r/cfi\:EqL\=YC""-qa>I;;SO1Xm%XiG[op"[H=VlD2,JL\!B'V/nRIqZ:L(*_YD;'U`
rpT.>'\`S@R]T)M4UUpdlCln64s.7hB"Rp=Qp'.TC,UIOL"m@<XO*hhH>'af[o6u?(UeZR1u$Q%(J54_
G4fiA4m%l6I2m8<c%b"TjfG-J"kUG^9mb6^XhK*CKc\P^C:51g"uTVW]lL;_(OGjYC,W_:A,W=>kQ,OX
LRJY_qY`e+7\AKAece1cCj9(^q`oR\LGm-#UTWmr.\D7[Gp]KCc3Z?I*bmSq4mG9+EQ%/NNgHY<Hb_WI
GgQ=<L7/Rb8$#&%en8greMUQl3=+,NS:f/joJg[P$ehrm4kcm9CGsI(3%(5KJ>\07]DA+O>bA,/>Y>J9
D2O*alJb,,^Ml=oqWpCbI5X2mT++SWqTjRd\7U4$BN%%K]*_@&p"?jPDBC]Zo*g#mX(sVIHWOY7hGnth
O(l.N+21(2io(sKGdqtJ3T8gpI6cQFl>)7LW;k@`GTTJ)6(@QJh+ghRiAFh!kFdTidIGR$@9r(!>-hKt
^?AFsY!1HE6'nW<nEW6/%GDL,\t.jW.<s)QIO"Nfmst.6(h_mlj&33Dd!C52%:?9*&&ss:X7tR'Zmd&<
4%7DKcel`a2;6)KZf0([24F\R[WF(`%tOC9)sDQRS2]RqlN+/68"93;k6cVB]H?=ri\aqVCcpFllMWmJ
ht(ZWkB?Kb.rn,+)N4+h2L!9q_L_F8S;U%0p&Npp`jrVSGoa.IoT8I+Y'Kd`FK[KQXp[DdKfp[EfU+ZB
CtlqC&I1AS^bLGJBePQ.Q9dK"nFI12#eXM\SfDd@!'8_XArq>3a4_\L"M"^hF$^A4%VFUS"6m;Jhs@"1
qgcoDYeM'ZJR\Ha\_[?jA"FQK?+B`Wr<>%OcMhFr+Lp'kI3T5m2ui"Emr`5Udlnmq2XGA%pGKs4"EMgC
FC4I(6.UajY9RX%qhWq_lp0j;6.e,j+T44qRiSkM+-:P*d!NX$'r2jZq-^#Di];cL8=anrq2GU,f.n`7
5k\iNic=DhkI9.%4@>Ut602q8h`QNpUGat^*k=`Jf=[M;jtA`$eq"fn`r9QT;?sOHA-V/))$eL7VKbot
)tl5:N.Qml;r`(`A*0r.7]?o=h>lT&)3c^4?Ij\W_<`,/)$T'0#@W+g0a_cT#*lN'J+F'uGEr"_aE8rA
Dq,8r/oZ:"&ld/=rQPgOT*G0^Q4/Am"f&<:fbfB#7>&aDEG^=G<$$8,VPl@U\=W*sC0i+EQR+&^`LP9`
,1ba9ga/m_-]X+PThYE7n:cKKGA3`4[r%,^6&\0>5%k6Pn%cKD9+^.1HL.tbAe=QF=AG2*1b?i7'&']'
LcCe#(,MoZAm7/^oY7-pS%T%<q27NU^\AqY!R'a@`#Mt+ku`Onfsoo#'&']'K=&*Blsj7OYfBfD'@@W@
\N"@9q$Y1q9+WfdfD/O#d',(!CKb4+QI@^u.A#*MQubaK[.[enfb?/QMY$>g+T)?%QR.GiRqi]k61bt5
I,LIEElN.2L,R$"g?6]Qak$sLQFkq1UCh98,PPra(L$G"N*kSO`nHs?]V\,=Z(/gJNS1huh&=u]:MUr/
>`85\B^NFUZ"_Bd)Y>(TpHiZpK(2L(Q<9Pj;T'HLIf0A/%uetH(REN0ZtUUcin.,<G"P;@hdoQtAP:o-
kP;#idDGoJHfsk'8X@os'6Q@8`pOr,j:_k6#p!h)*=^)?_?M"t#b;i,Ah[mX$O\^6672t\>%5u281t2@
b%g;dN!M3aj(pBWY<BU,WXa1;f"JQ\O)prfWMdHP-t^'&Wh-4hkFQ&T(\<tI/\*c^2,)15!pXKeQCQ3?
Xn,bK1@7G%*mD#j[^=VjEr%@lln6o=M_dtR%`0rP@9WMt\L'b4QC9H!1eqn[1\ER7ASP#C&*Fj<EGEOP
ji2X!2<R98*^u$Rq??JW0J0j/+OnpQ/[h#;&)u*YZeW/Q%V9BND%.-KHtiL0[mI3gk4YjafPHT6N)LZ'
1OhtpS&94E6(Aj]ZG.h_D/G&L]&HP`IAk9$(^J*\X^.6oRoZ<5S:?Wt<^+`7daZc")$d(=Z+h7pOetV2
(^HtL"dqPtNb_e@WMV:i9lVk-EL#cG4B(WpqNA6=#:]+#@Vi;F9c]Dm9:D=G-$;(>NI6&5AV33G4,i^<
T6gg_i-i.WN.L;64IPZmHi-1/?b8]G%"!YOa#EbSK&>FKl'M!erjC)7qtBH%\JCV0]'8K)r:TfH_j+`u
S2\_RYNG_3-N.Dede[OY21@CU;Vh!<0h5Pg,Nl`2m\P7,Z1NnG9(fQu``(n&0-+7>rd5\F6FI->VigQm
?gsJ!p5%oqQ;-IsG3[4cO?@l\ZJCkOgGSZIhR\TQM>'J$o(B4dVQ[YuHeN52FIXJFj.3P?O2b^DVg)!b
,J683*8eLoQ`XMb9"]T<nK`&oNcDf%h>B?YZAnB*@_,INZ\X7]p)k<e"6AVA]5Qjs^Q^LCkoQH$Y"a=/
[1c?4h)8M9VQMKEFOSd\ehJ"Zh'hqJ2-.Q.4d13FQI[]niaB,B]U'T#qX:2jl0Dgems4Y*]mVKu=ANEg
4G2AE)EV$#Vkl+MN?>O/NV^3C+HtSW/(F%`Q%XQjaS+u^N%t4klA,V?CUI9on^62NG&V$NbAiWO]KVH?
H_%Iu3Hc@feuC[*ougBAeb6.+odFUJs*"D5CY@u]WD&q1f;EGm`cq3$XntVRaL"pM+a]3@+=":TY$PA5
:(otmL`>C=pJi/=itkASQR1[LgmE;I`E(t[?D9?AK5W,Da^Q4Y]JY/CLJ1uV^6GiQ+%eIjBP[nkijiR)
c-`L')jqWMCWrh;%,XDC,<*o]Q9JcN[N9alc`K*SPf8FF`T<qB=u5<=`+IV]&+X4HXWdSHPK"-8IV96V
<qKlAs#ZMBrR-![C&Xk"Z9adhL.jIJY`;"bnEkD?BC#<;V5/QC)@*l/Docj(Z>V>fN,F#%8DMPP5%BGo
8BDsbr^<'\AC6DY&iX,-q*iqrR#F[YiOq2fHAq;K9"=il[[#G%H"2:8ZB"`)$^nReWo$`dq+Qer9-7NL
O;Ifrh@K!,jGupu6ErN&ePXp6Q,J^7MP#)ZSra'2mh=C.[*fejAr^-<3c-nUhg":s)#N%Mna4j3+G[XS
^q%#G81K,*Z_1%'Z*)[$8n4H.^onEMh*sK`o7\K5Sl?[LMD*bPpEAS&>5\Ai]D39im0cR%o=dtL38[qO
Lu6X.iL4e#9@PU]=!?Ig:X%(;rA`GHms"AOE;q;+XI-I"[C>WCGi+laXHDb&ZEsp>8$B%<edM7%]J&!K
jrBJh[c?/Sd"ep.9oa.DD\LRH>Aa*eLd>Hb#FT$'*&$KiKAXc#e(P^BM'!/F(@TLt2ooOEn-lc=A%VN@
#2U*k)N-ClfC",FhacdmdYDV!F^'BVqn@$28[hYW-1so<=4MJ0?##TM^:719PJ/]'>hkhOZA#scA;^!X
n,E+Bq&[&4Du\-Sa<s=#IO]X9bQ#4>INiS)l.Z.n'!d)`s*qXFI[kC@F<,CE^W2abeA]b?ra#*[Q]U/b
ZMknXekm5Jc[q_c7E0JXF6#skT[lT_%t#[35B%C2YHaVp[jA4rmdY\]?B0:hTM(At+!8:9jOdgEo4-JM
d\HPdZk1B`TY$<MDsgm->I)mr2i]5#1cP4+rqN7IoDe(Sp_PrgrQI^r3raMUr(Y3,IslhE8Bt*(BgMV8
IP9a:hiK9o40q`*j\P<*s2m=)AWGOoqmAPWkGpHI`9M"/Ij*U;)_j]Th%R6\4%]0ROX35F0AMI=@#L,1
VoE_<FahCpT*Z[ZL)aRWipUr:g93C3`Yi2:Je16S+bUCn#U+j463n`f&4-XGKFgHU+bUCn#U+j463n`f
&4-XGKFgJ+Ji.99edB9?5X1HH4ZBOE)$b3!RXeKZn..>#s"!&3cT+6TIr^&:8&i)HaL&t_+OaNm>]XV=
^U?%2]%?q2.+?nO=F1`tOE1<_/aaYn3IAqS!n_7jqjN<.3PO\6YWaVlbh;_RfL,C%^q0'NT5jkVmuP3t
qSEq]]<Mm`:G^;r+.;+HJ,btDqaBeoU&2^*?i(5Q>>lL(IH+U+T=E\^"ae2cUJ,H<mfB!Y6C'bhom2"\
Zg<P5j6ESXG7jI(a7nN'5EI<9nb6o`U[O*-eH8r!G2(J%>lV2%\+(E0n")C"ds&\-PsSk#/'&enN&C[,
rh[R-ITQ#E@B9E/\<i\C].]PoF1=I6>k7SFs6'2?h\VkIk6UH:pT+2OUPrtsX*"qIGG"**q*a9EOM`K1
DBZ4WpP$`F9+^ruHec.h]!M3#]Us+,#?gMZk3i2>!pBH-BL:#>7\_NlluU:lX,dJA#ON)k2bI=Fp"\>N
b5FJn@lF1I_!`6`GJE[tT%J@,c@2F(gFpOR`@9;c`:i[`;pMLl[6\tt42)m9QeL'FrQJPSGW4OW`V`rL
/6fL]*.O6c7iUlmZ(:1grGQiEoaK+@7LANF(\2LDH[Qe-2r?!sScA`2IM&k_q*FI+rl9Mr9ubnrn)%$]
l5[N6<8WVk5-eP6F5sqFj5YQ0T0LqVL;:@1HbH2FVt)XG;nSF#Clbm"]IupmmHs:4=0bU^@Y>PSJ(M9\
+A5qTGBbu0$Y4R:3eSIDL@bR'9>*j<:AWc5ga`SVA<-+F9_Kt*pS",3rD#kD2;B$qO@:6]M:ZW;^0@Th
Hlu'W&)#g]Os</Mr:[ONB?%:<*Rn]]]lNt'EpNM"=N%=ul5mN]Na_p8I(Q0(MXXC+LX>bMpX8n>#WK3J
UEgB'Z[41bC[d>17m%#mZ.:7pO*F`k+9&Af7`)RDFtYcbM:j'(hEI(fn;XH/WWRK94K$33q"&-]miP/D
%m6KQT8P@,NIS[-7;)-3cfXgOAU!$u[;N^GT-ku/;S,r7:V#mR?@m+]mptrsWjDQgQa45lMlCT/Rh*KN
2>Lj%%1LbQ'44WVc-=@?51toQY-l!KkA,,0gY=hR.&i@*^003n`Z3T>[sp(r_oK(8lr`\@le>$R<Fe>G
G/87XgT!udF2C,SQA;`q+k3]/mDl>-e@)Onq]\p=lgSomU<6VMmJ9?:$Jn/9*MF^tqiUL#*i[@]^Phg7
dWS7[4A'?/Z/=%))eJQ!hoh`1UF\;P-I^U/^R)H"n+h;/*OV75mllrD[Sr>nLm7#F.5[WOcDhn+@j\Us
m\0/VmdWDY&&%]V=mMsI3`^F&,e!ca3HGQ#@Au0\7b7-,Io17!p?nWcWO^[FS?"j&,%`Cr4#LlioU:s+
EJ`3H>b-?sMpK5Meo@7Qqe8a'Ia>;qVpr2@[N-HL3HFMqX/@E$rTfSeSp:##J+N(*B/esemE6s/e^A]\
8*?$$fkT,.CM`/UI[c2i^e^MJV1)A/#d&79de6q/Mj35Q]*?sb1>fP;LMuL,Rt$9bI]j:(V_f2=+_C9C
6eebn]LuM)p\]:8SR-a&V/<cM0%WFi%He_'"n$AekH5[u<Ds^6_9]eO^+23-p?lpWnJNW_9gDG-0Du*W
IaH-=*GA+OHf2ndmLccIHhJhPF'A:p^*i#`I=&DVOPP*?XH`)>,3OpA]e31:K3gYl38Z4;:>J,MBDI<%
GGTC@'`[j+mFBhs`8+dCGa;R.VA>R]538lqe-]Ao_IoMu[fENfiEN4e*XkYVQ_il_2if6qA;hJfV2g>t
(TdFMC^^-)eflc8CEJ[BSSP>6h_MT#B:TFf&uDuDV.WNt(+>RuU\(VohZ>[CQ]eda;]DPTgo&0kZ7VlO
SJTOU4&0X0\&R!kL"b6u9qHPEC3,<![1mML(-c+e53`R+N;"i:q_bcY5X1X5<i7OhGMXgW]#n8>:9D7\
IZ$!YX)GDRUbg@qK>]_Peebd%`3Y(iA#IG;g:BpKgTSkgkm-7A:\Ls^g.RFo4<gQeY;I#gpR&CadLmdD
9O"$Q)C3A1Kn6DWc<k$T.#b=(<WdEO0J2=SEqQe_>foEpBtIt\AAbheVfqGneh=nIkUC']VcHRoqjbR2
N1V)C25(R5[7fXu@9R31;m0o7#LR/(Bo0IS(;dHD)s\;E>4Vjij)8Y^;taR7WEI9lKm@X)QJ*Y`J!a*u
qLUtmT!m4m>4Td>VK=s.(Uf#OXh)[O`Ko)(Gfk,$CHjrE+`(kX$1m(/X`M7F#B+==Bo\8'Fjt1EV*:ch
AQm,MYUs[*c';LUr>'+t;q?W1[-B+'Nc-B&K?Aspn<VYZ-",$,VPW/_jQL;N4UAF'V-=)oPJ1tJ#M[+]
<aB;8@ZA?Q4d>1HM`F11qehCI4_-eV)N2&IS8F7>9_\B9>O+<=TqVGEc]#hh5cb9/Brq]Lk!6D1Kq>Rs
[)HL7,1f[q@hEW6%pi`XD_Ym/A)XmqH>6:fZDat`)D1QY't/fR(:jiT^K@_oF+Z5RYZbh4q]RLmokUi[
[)O;EA^7a(6Dg`r9<3'#>d&++KtV&%=C\b)3U7Ih<cLFKgp:5&8l%&0^0AFr:GEAd@l7ke3ST.>9N-7P
AJ]$df3#uqC^UVO2'LO((9I@i\-DSW<F!<sTGO]`5529bA'o2q\6e]Y<BW=lG<(K(3eOfmCTPOe1)=3#
lITGB@_p4<ZHm7$C)o"Zfb^a0p2W:]Ju("fiS"mZC7JC@*0=0l9q/i9.Y$EEf`eFhJGg]#<bj3heNn'R
bB`_\G3%iq@^h*na72i*Y#dOfpQtrHqa/8<ZW3SkS%W3t+1!&-_5b8<r?DtVF#j<qYZkdHO2cn>PttNE
Y$CF*_D6=Hc"=gJ%Z85;<]5LeHbhIeiHcRR<o[cE5;HY-hj\]-(G*T_E,<IGj`i6"6(5%5bDS6I$-UsY
Pc%XGfsKE?QL!(@mCNPF4q74HfT't7)Y4?&FW?F$R'<*=`Ne#.Q@1`_0/I%9>G:LqfnX2XruE-'g)/S]
KQV-jr?M$H1$:Ml=P?'$NNi./gp^q5Z4EQbRu(#/k$j#'#jZ_c2LE<hc>r@*K_60=p5dje6/hgQp?e,T
,OFFkc5WC[m!!*eB#;t#LAKQ(o5(SW11B"2_7!`9f9?.Xp2do:iI$-uZ)iIc,OB1RS2WW?h:KH2NNEUU
H>f@lNC'*DXN(ckm[/E?bl/4Op<#AI5/uU7#lE<WANF7*$TS$.'C.BdTpkp&[X#=SrJlcCmW.`_I6SeM
8*p,.)7)'3k^g-8\^o)[Fj,%&I^U<XR/Cl5D.C+GbCk"DN+9'XlXHBRDQd,Xs7UcXnZ7sh0<AZlZhp^C
o.^)\A3K@<2LC$m_&hq?Jh`aC?Hi+]]B0i9Hss3[P\D3WSD@!6W/:DV"S:tD=N>5_UWG]3j#CTH5('eg
`YUeBQ7:G8m\<jYS9mAFO-n2\Za5\F=M's)NnHBeaBf&j-Y+=*Z2OER>L,KOS2.LM8'H."5Lj6s.,RKu
pPmO3ZRtgd3ko(HAj>^HmD$tpjKllCK@nLe41e1gf;&F[pJX6AT-(BocaK`Abf7';m:/'"*OGKED#\q]
f%K)A?8=\8hK:u%ej7TpDF>$4kL\7c@lE`gh^<$r3$J0dNT5]Y@fa%<54QVFf4XFne$H5(eg"cg]:\@#
Zh]'rg(pp-WDCe7ltlc*mu,,Obs#`Lqe(<("3T+7`bbA@G^hqiUWp6&D4qKk2O6':gOB_N?e@`6g-\)9
%qE%X_R@er`bb?N[stQQdO2agq`^#[,A9j`5BZZ[#`RGs8WU9@)7/#bho1tBEtEZ5pqiUDF0NqBdiNS7
c5s=bfFQAjfrSs*N7g/qTbj5O?k;F[gV^G;m%I,?iL3a>oWWgoXhre(ZYtM6Tbgt+boZ3EDnU)<&[@?L
cmS\8n:!l\q]OP/I1Yc(qJ=3JLQ,lhB"rg3@lEa\eH>5FAIm??IVsBpb-Xt"HM7;,0<l#hpTEc`pTCfW
HWSn<rJ'^E[XjAj.+;L)ql-pBCe*9!P^ObiC^]r=a)&sQm.IC!^.h,8>-E7rBf[0`1@;?$jq4ll;q>_t
*fV3qS,\J8BD95gDE_Pgqmg3qg$JBhojE-[@Qg)6m=f],G4mf^HHaA$^X9+Zj/M#9)7*%>lRl[*Hei/T
B&ETimrq1$a0]eM0`)]FF6+aMrRBNP&a[p.m`0.pGqo1c-EM"$B<O;tlZ("spH'SMm?P59I:"=B$[Z7%
0g$,8m?R:4m:?jWHY]+q4F:NOgH!T9[3$:Cmta64?5_U<OD,0B1LogacJCJ]XR.qC/g`.HnQ9"_YcQMs
guX3cY7B*LX_fuflj:kD_#.c\\pqYEm>rQ%h+)S\F\3Cl4sH"!SFG^f[D:M5KOsMm55Y`15-[qT_V/TX
c^qAbNI-V"4<iAT,EV-pLA*bRQLj:L:?dA,h&b\5l]`lbHe2EhK6L9GpKHjeDpo<'XBUCumo[n]AtD.o
3<k35bCZR>=m#*A`A5`uq?[P)fYpu5b;s'7(M@Sn_Qmdk55Y`1\p.nj"A>6/4F=n"c=6dY?km<_]E.V^
#qJ#<O#K0VQ?Ja-=XPcPqI/-NYjB89+9$q)ll+&GXD@t0likT&QlIck@+D0knZiO'2$_FG>HkEf*6Yp$
2:%b=+=pXG=ZD^q_Qo4Sk3oBf2V5TEYdCg^?P]a>8%>GYJsEIG?M!s5=P7POAR2O?j0H+t`i<Xg55Y`1
5.4S.P*O:(T"W-YmMPP^"fo.`CL/Spc(X0&]EKgtc*=>X<j<G;nCLd]>3s/!YjB8ap#0-*ES-&U`i:V0
]^15Mrs6Zg/m-5[H1lhiT+fh)?Eb?#8jB`',1kgVP6J!N[ZjIfr"mts>%>qq3*(Kf<S`3`T`kgl;GXc(
ba5#pY-H%U7cE&M/f&^5CR8ffoJAGVb\A+9lTo;;g&f<$XKed4YU6_b+]FE5g+l9ICqqn2f3#tq>iTIV
7F&p,jVj'R<D',(F\U/"g1&GF\B`-\<h%:$d$E7fQdjJ9X^a#`Vd!?r@'3#-`BkoHY]f8?d<E,;pU/^k
eq:D5["UfU-`53<D>&Ol\n.*aR<$U:QIc$Zeh4G=k/!S:&Z.DrB'jVu7Gm35^Lc`B=.D&bVH&tna3'_!
3]q1E>?YMhlKOVcR#?:%V)8d\T*dAHIEohr[OnUs!9VA0eRf?/H;KDpg?KKE5J<o$IPD+NeYcEEQ@#@`
&hWL;[EC6U]#H`N@9Rc4[EC6UHCD0hBPUA`Z*IeAC-nFT*MughX9i`XW<lEtj0[H-l=lV_lLSE[WA#na
)f(dK>1Q]uO_JSOTCnj2/T$(99#PGk2qEZ!eB4#%)J>0.RP+7i9PmL[F#r<fpj^jI_mIoGF4SQPd:\K)
NRK'jcC^+qRkM)p'W3iBA05-JgANpC;rcBi#i)U99l5p+286r7oNgVU\(W^?\.;E)g:"d[X5_XK$.RKb
[I_l#h\;u3/2I*likUjh*^XR8R!YI$WMu5lNjZW5C1U=!Vk_fREY%au2='SE*k`6\2ohlA[Ag3HC?cA#
1U^(R*J/X\UoDIKR9QJda_.e+[t(Z0ll=X84)<Q!M/THfK<1'0WR5M4n^H"-$ImTc20f8DZL(SS-hJJ'
L,K#NKCAP[i:o(fGT"$Z;d"K[:J,D7QcLc6QiU]#I+b0Q[3sEXE#jrdo6ktgJQ>\clB,;(jQO_rrINir
%Tet$F5An>]UJ<hRInn]R^QR$40-cpCT*4:GC$oC4Cin@,GU#8b6H_*-e!jrAP.%299!M(ob$RKA:r8^
?2G6q#KOm1]e0n4N`%b_Y@lZhjess,A[Z6@h;`A1]%=7/\YhWXc9nnYf:XX34JqQUqsMVEQ%=;C[/H)(
]AH.js4.&1@6WifC%mU`1:"tQ1m[Xk#WILbGCM5LffYOJR6Cp^LLZkCHRJ@PB+`UXk-Q_N"kknW#dW0J
UFWt-4U9kgme(\9^HR:N\)5>;S"E;Y$rKs8/?K/Dc7eW@4t(!C6h^:Z$/9Lppbm/prqd(+l\>(=Pbi65
\rNsKQtm@)=k`uO\<FR14-dj"%aus&0$UdUlM.SZHb/J,A#L1%bN*[(*#u/QHbH!=s%^!_3PMQ5\e(\n
C9:_"R@d&SN[dD'AgKL7FX?bf`AB:iDXiLY\T"NS6\^DL</0\e6S[gmbX;>Jrp<MDB,R6&KUcgg>Zqdn
*V\U6]V@#p0,-o=`4j3a3iUhR[1>."7S+)U4&8=_k%F;a&S#MOIORpLle;&^ei6(XF,_@4r-3+e7k#H0
D>Q3`SPjg^;B+/0m+Rmk>A]AVpJXZH:+taBXn@SuD5!ed&&!1(NQ,HHK8n<ohQD-_jtJN>m+U_C?W*>.
Qg/<VQ>-p`Tpmdd#5[l!CC=ofNKX*p-2,<cgF<#D/TYfW*EIZgmASMVQK2GQqCuLj464S(O?=V*D*ZC\
N89jGV%4m>3L*f2RdUoJH(Q@b]gfB2Kjp$--@*XJ6:j<q(+ZocKHJb5M-(QXcm#rH8GkSKD(ber?1HZV
8_^GJJX-)JSD'pmGZ9GT*n#AFg6ueFlf!*.6/m?5:Bi-&,.HB]@bs&L[Pc[J#97j<[FNVKh]M:J?)>)T
8lm/`I%ruf-VGOg[XP:iZ7@Q<r>d>Xrk\O$Y@R$UT1aSs__pB,1A-DPgR(4JXn2<KNUHjm%5Pm7De8IN
8!W$SDTnekEKj%DmQ9U_KL<;hL\(JpT"gS$`k3U24]^<J.*a6?(V%!Zren5PbOaG&B>&h%idF>Mg4PP,
Dp;CJ&jI5Vao+32e/'3X:s>&Z[7g58)^N'+-[l_OMG]BIo9KrFmI03;LE;4kh,3a_?_Qksqng6/q)XE,
@PQHr)KB=Mb+_,I-U5ntSb)<AVt(g<OsbY<91e==[tMm^k-K+&p\EYBiu=Ea+7'=#$KMW/4Ar<%'%g+'
%rE%:;4I&fpW"pCY(uE>R7uK?haM<UW>PL@K]3EmK3u`L5+q5PIN`E0E`RR7E$op[V08q3W]'>*juK]Z
jVHj^>[hP8of0EMWo)(g#LSnM[_-2Od\?hm&&/YT&%Nf((hAL7&1?Q$g<e*ZP9h#u4O9t$0!X4,:F0rY
$a+h"CO&6RcRM^:PdC@A9YPJ,^V<#4>:01'C)sDkf-Ym9EW/H``PM<jpb'$Z7r(Q\_0>Xo%sQ<Q$jYIh
fosNR_7oooc?V!_jDt2AD"ZDs]Hr<u'B.F04[.T1#5\@#[f%?(_e&srNOSuYJ]=rZca`CmA[:(7"iL+T
7S\A<a/;e+BsccgHUSKd:(SB3q/G!6SGnKZ3hB`?+3ABos'(X:;h4fBXSj9<5gRd'pI5E3KFgHU+bUCn
#U+j463n`f&4-XGKFgHU+bUCn#U+j463n`f&4-XG`"$)%nP&7\f:_Fdk,eN?[A^=t+P+Wo\j18j]jYsB
Uh_t#ZE/%@(ArUDY%<#NI]%R6AOW$Lo18H'#DBdf?.haBhT/iP+7d?rd>0MpEPF.71q(2+-9:r46U1PJ
l*tX$Z7[kBLj^R+<lgPam[N-@97&AS#4=Zh\sGu@rYjs4[KjCag,8=\VgE*O%HtMKB5[l)DOgZ;5'#Wj
fG=4.T7&@8+5J;=pQ*V!8O,4K=16'@+O@GMp_JZ7gqCAH]^Ja7YI3)t9`2S'e>M07Ht3$S>L^enEQ5,a
&$PACPWnIlA.N(K@AC"PDQs93"!)N4d4!&>IqSqqs6eQg@P#eWNP#+5mqd>g]=@_!mZU\P?Y>BTr;F(+
F2<t;j4iCi/V%_RCuOehNnD5&7qir!beKus3;cojI)MBS15&q3hZk$*E^*sh*k[njqoH$sm^n*qJ3L!I
W,KCLhtrW5)+L$AR-H5o!H$mGojc&U2A5C^o`X`YH?+-)k-kBh([hNSF%\A8pitEAo^r0f)piT35M.g"
_*KD23kE&8+<GZBNF0`6p.9]r46-X-MD%WD;0<TAeiQ@O]Yh-u8+q^Q[g1U#cR%Y?HD[&_GrhShd!#02
r#E:<m3$0^69j#p4`jH!EHj%c:qLZU[K/FEkC@L?@p\i?:ZZon;:Pd4!,<($+X((B?9Bn5(si+R/uuIq
*47rc;Jq_WINuo7G!u;KOo1rf".jXs[@Xq;k)r!M@fAaniBuA64oCZ`G32QN[cSai+lilVfj7Uhe^t<$
Jkq6FntH"?#l-j\0>m_^RYP/%c_qhk2PAC[gT52:PMA>@fI&ej^4XR3og3`aa+5J4097=?X"Ot]Y0'Q#
Snj[dNuMl5>u9:KorF/aLQ32n7*bPe#krO#ep/^r'D'eJmg^FtpV?[EoZ,LWcO5aLJU>>rW,]qe`4FPc
a=jQS).er:l>=jeE\Ue#3K*1GMtrdE[@Z^]6hf9i*9L/0[sgER*GY$%a1U"d(=JPOgYUgY\@q(XknpFa
HDGX]gC7]hR9[KXIC(($D%#ekaBDA+3p[qC+8I1&IS,WqEt5@fL03%7Q*oc%RS3OlbkIJ'&N\hBUXrE$
]+j`@+WV%50q!J03Bq%Uc:03Xd/5$\Ycu;]9dk0_]g[CKFoRP0O0W\nrF=/S+#R^$nRJIr%dY8l+8I[4
I`fuO^&-B$(\jh/5.kO+A&k.Yp%t%s1DaDRrF:q0]5U5"&jjYc6/B:4T7.E`L:2CPe^kE)Oj>67hc`-3
#U+j`./uL3Z`oN.~>

%%EndBinary
grestore
np
139.754 249.228 mo
148.187 249.228 li
148.187 251.323 li
139.754 251.323 li
139.754 249.228 li
154.512 249.228 mo
162.945 249.228 li
162.945 251.323 li
154.512 251.323 li
154.512 249.228 li
169.27 249.228 mo
177.704 249.228 li
177.704 251.323 li
169.27 251.323 li
169.27 249.228 li
184.029 249.228 mo
192.462 249.228 li
192.462 251.323 li
184.029 251.323 li
184.029 249.228 li
198.787 249.228 mo
207.22 249.228 li
207.22 251.323 li
198.787 251.323 li
198.787 249.228 li
213.546 249.228 mo
221.979 249.228 li
221.979 251.323 li
213.546 251.323 li
213.546 249.228 li
228.304 249.228 mo
236.737 249.228 li
236.737 251.323 li
228.304 251.323 li
228.304 249.228 li
243.062 249.228 mo
249.486 249.228 li
249.486 251.323 li
243.062 251.323 li
243.062 249.228 li
.287663 1 1 .390814 cmyk
f
139.051 358.866 mo
147.484 358.866 li
147.484 360.961 li
139.051 360.961 li
139.051 358.866 li
153.809 358.866 mo
162.243 358.866 li
162.243 360.961 li
153.809 360.961 li
153.809 358.866 li
168.568 358.866 mo
177.001 358.866 li
177.001 360.961 li
168.568 360.961 li
168.568 358.866 li
183.326 358.866 mo
191.759 358.866 li
191.759 360.961 li
183.326 360.961 li
183.326 358.866 li
198.084 358.866 mo
206.518 358.866 li
206.518 360.961 li
198.084 360.961 li
198.084 358.866 li
212.843 358.866 mo
221.276 358.866 li
221.276 360.961 li
212.843 360.961 li
212.843 358.866 li
227.601 358.866 mo
236.035 358.866 li
236.035 360.961 li
227.601 360.961 li
227.601 358.866 li
242.359 358.866 mo
248.783 358.866 li
248.783 360.961 li
242.359 360.961 li
242.359 358.866 li
f
137.997 354.56 mo
137.997 346.18 li
140.105 346.18 li
140.105 354.56 li
137.997 354.56 li
137.997 339.895 mo
137.997 331.515 li
140.105 331.515 li
140.105 339.895 li
137.997 339.895 li
137.997 325.23 mo
137.997 316.85 li
140.105 316.85 li
140.105 325.23 li
137.997 325.23 li
137.997 310.565 mo
137.997 302.185 li
140.105 302.185 li
140.105 310.565 li
137.997 310.565 li
137.997 295.9 mo
137.997 287.52 li
140.105 287.52 li
140.105 295.9 li
137.997 295.9 li
137.997 281.235 mo
137.997 272.855 li
140.105 272.855 li
140.105 281.235 li
137.997 281.235 li
137.997 266.57 mo
137.997 258.19 li
140.105 258.19 li
140.105 266.57 li
137.997 266.57 li
f
248.338 354.56 mo
248.338 346.18 li
250.446 346.18 li
250.446 354.56 li
248.338 354.56 li
248.338 339.895 mo
248.338 331.515 li
250.446 331.515 li
250.446 339.895 li
248.338 339.895 li
248.338 325.23 mo
248.338 316.85 li
250.446 316.85 li
250.446 325.23 li
248.338 325.23 li
248.338 310.565 mo
248.338 302.185 li
250.446 302.185 li
250.446 310.565 li
248.338 310.565 li
248.338 295.9 mo
248.338 287.52 li
250.446 287.52 li
250.446 295.9 li
248.338 295.9 li
248.338 281.235 mo
248.338 272.855 li
250.446 272.855 li
250.446 281.235 li
248.338 281.235 li
248.338 266.57 mo
248.338 258.19 li
250.446 258.19 li
250.446 266.57 li
248.338 266.57 li
f
332.398 524.704 mo
325.961 519.29 li
327.323 517.691 li
333.76 523.105 li
332.398 524.704 li
321.133 515.23 mo
314.696 509.816 li
316.058 508.217 li
322.495 513.631 li
321.133 515.23 li
309.868 505.755 mo
303.431 500.341 li
304.793 498.742 li
311.23 504.156 li
309.868 505.755 li
298.603 496.281 mo
292.166 490.867 li
293.528 489.268 li
299.965 494.682 li
298.603 496.281 li
287.338 486.807 mo
280.901 481.393 li
282.263 479.794 li
288.7 485.208 li
287.338 486.807 li
276.073 477.332 mo
269.636 471.919 li
270.998 470.32 li
277.435 475.733 li
276.073 477.332 li
264.808 467.858 mo
258.371 462.444 li
259.733 460.845 li
266.17 466.259 li
264.808 467.858 li
253.543 458.384 mo
247.106 452.97 li
248.468 451.371 li
254.905 456.785 li
253.543 458.384 li
242.278 448.91 mo
235.841 443.496 li
237.203 441.897 li
243.64 447.311 li
242.278 448.91 li
231.013 439.435 mo
224.576 434.021 li
225.938 432.422 li
232.375 437.836 li
231.013 439.435 li
219.748 429.961 mo
213.311 424.547 li
214.673 422.948 li
221.11 428.362 li
219.748 429.961 li
208.483 420.487 mo
202.046 415.073 li
203.408 413.474 li
209.845 418.888 li
208.483 420.487 li
197.218 411.013 mo
190.781 405.599 li
192.143 404 li
198.58 409.413 li
197.218 411.013 li
185.953 401.538 mo
179.516 396.124 li
180.878 394.525 li
187.315 399.939 li
185.953 401.538 li
174.688 392.064 mo
168.251 386.65 li
169.613 385.051 li
176.05 390.465 li
174.688 392.064 li
163.423 382.59 mo
156.986 377.176 li
158.348 375.577 li
164.785 380.991 li
163.423 382.59 li
152.158 373.115 mo
145.721 367.702 li
147.083 366.102 li
153.52 371.516 li
152.158 373.115 li
140.893 363.641 mo
139.073 362.11 li
140.435 360.511 li
142.255 362.042 li
140.893 363.641 li
f
444.54 391.312 mo
437.707 386.401 li
438.943 384.704 li
445.776 389.615 li
444.54 391.312 li
432.582 382.718 mo
425.748 377.807 li
426.984 376.109 li
433.817 381.02 li
432.582 382.718 li
420.623 374.124 mo
413.79 369.213 li
415.026 367.515 li
421.859 372.426 li
420.623 374.124 li
408.665 365.529 mo
401.832 360.618 li
403.067 358.921 li
409.901 363.832 li
408.665 365.529 li
396.707 356.935 mo
389.873 352.024 li
391.109 350.327 li
397.942 355.238 li
396.707 356.935 li
384.748 348.341 mo
377.915 343.43 li
379.15 341.732 li
385.984 346.643 li
384.748 348.341 li
372.79 339.747 mo
365.956 334.836 li
367.192 333.138 li
374.025 338.049 li
372.79 339.747 li
360.831 331.152 mo
353.998 326.241 li
355.233 324.544 li
362.067 329.455 li
360.831 331.152 li
348.873 322.558 mo
342.039 317.647 li
343.275 315.95 li
350.108 320.861 li
348.873 322.558 li
336.914 313.964 mo
330.081 309.053 li
331.317 307.355 li
338.15 312.266 li
336.914 313.964 li
324.956 305.37 mo
318.123 300.459 li
319.358 298.761 li
326.192 303.672 li
324.956 305.37 li
312.998 296.775 mo
306.164 291.864 li
307.4 290.167 li
314.233 295.078 li
312.998 296.775 li
301.039 288.181 mo
294.206 283.27 li
295.441 281.573 li
302.275 286.484 li
301.039 288.181 li
289.081 279.587 mo
282.247 274.676 li
283.483 272.978 li
290.316 277.889 li
289.081 279.587 li
277.122 270.993 mo
270.289 266.082 li
271.525 264.384 li
278.358 269.295 li
277.122 270.993 li
265.164 262.398 mo
258.33 257.487 li
259.566 255.79 li
266.4 260.701 li
265.164 262.398 li
253.205 253.804 mo
249.477 251.125 li
250.713 249.427 li
254.441 252.107 li
253.205 253.804 li
f
253.253 365.845 mo
134.483 365.845 li
134.483 247.129 li
253.253 247.129 li
253.253 251.252 li
250.713 249.427 li
249.486 251.113 li
249.486 249.228 li
243.062 249.228 li
243.062 250.276 li
236.737 250.276 li
236.737 249.228 li
228.304 249.228 li
228.304 250.276 li
221.979 250.276 li
221.979 249.228 li
213.546 249.228 li
213.546 250.276 li
207.22 250.276 li
207.22 249.228 li
198.787 249.228 li
198.787 250.276 li
192.462 250.276 li
192.462 249.228 li
184.029 249.228 li
184.029 250.276 li
177.704 250.276 li
177.704 249.228 li
169.27 249.228 li
169.27 250.276 li
162.945 250.276 li
162.945 249.228 li
154.512 249.228 li
154.512 250.276 li
148.187 250.276 li
148.187 249.228 li
139.754 249.228 li
139.754 251.323 li
139.754 258.19 li
137.997 258.19 li
137.997 266.57 li
139.754 266.57 li
139.754 272.855 li
137.997 272.855 li
137.997 281.235 li
139.754 281.235 li
139.754 287.52 li
137.997 287.52 li
137.997 295.9 li
139.754 295.9 li
139.754 302.185 li
137.997 302.185 li
137.997 310.565 li
139.754 310.565 li
139.754 316.85 li
137.997 316.85 li
137.997 325.23 li
139.754 325.23 li
139.754 331.515 li
137.997 331.515 li
137.997 339.895 li
139.754 339.895 li
139.754 346.18 li
137.997 346.18 li
137.997 354.56 li
139.754 354.56 li
139.754 358.866 li
139.051 358.866 li
139.051 360.961 li
140.051 360.961 li
139.073 362.11 li
140.893 363.641 li
142.255 362.042 li
140.97 360.961 li
147.484 360.961 li
147.484 359.914 li
153.809 359.914 li
153.809 360.961 li
162.243 360.961 li
162.243 359.914 li
168.568 359.914 li
168.568 360.961 li
177.001 360.961 li
177.001 359.914 li
183.326 359.914 li
183.326 360.961 li
191.759 360.961 li
191.759 359.914 li
198.084 359.914 li
198.084 360.961 li
206.518 360.961 li
206.518 359.914 li
212.843 359.914 li
212.843 360.961 li
221.276 360.961 li
221.276 359.914 li
227.601 359.914 li
227.601 360.961 li
236.035 360.961 li
236.035 359.914 li
242.359 359.914 li
242.359 360.961 li
248.783 360.961 li
248.783 359.914 li
249.387 359.914 li
249.387 354.56 li
250.446 354.56 li
250.446 346.18 li
249.387 346.18 li
249.387 339.895 li
250.446 339.895 li
250.446 331.515 li
249.387 331.515 li
249.387 325.23 li
250.446 325.23 li
250.446 316.85 li
249.387 316.85 li
249.387 310.565 li
250.446 310.565 li
250.446 302.185 li
249.387 302.185 li
249.387 295.9 li
250.446 295.9 li
250.446 287.52 li
249.387 287.52 li
249.387 281.235 li
250.446 281.235 li
250.446 272.855 li
249.387 272.855 li
249.387 266.57 li
250.446 266.57 li
250.446 258.19 li
249.387 258.19 li
249.387 251.323 li
249.486 251.323 li
249.486 251.131 li
253.205 253.804 li
253.253 253.74 li
253.253 365.845 li
/0 /CSA get_res setcolorspace
gsave
clp
[1.00217 0 0 -1.00217 0 843.493 ]ct
[119.031 0 0 118.954 134.029 476.318 ]ct
snap_to_device
<<
/T 1
/W 366 
/H 368 
/M[366 0 0 -368 0 368 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS cf /ASCII85Decode fl /FlateDecode filter
/O 3
>>
%%BeginBinary: 1
img
Gb"-6&+!k-Q05bmhr$bG"u>a)O#Y-SL6*R%-DN$LlU[tsp``%NKV528K&dQ5i!jjuLlouEdYqli&78lY
):Orc-UgB*_(]O,_.[3>B\-$s$Zm<+.GD)N)%&DN4b[9@It%(9p[,Bbm(;^Hp[#6\3qo.kn(Pl2^YeMZ
c8kWhFnYh&^M@\\RC$+9f'LGBl#],goG5JS;/g0aUu6rY;[!sP>ZG_bF+F;"ao=TFIm<*:'64gp4(N!K
nacX6q)_@Amk=21mc/Ali;5^XpEe^>?K<mUhtQf+a.C?/eT?4b[`>>Rj*CPc@`)^Rq'I3T!mTHbh"\pG
8oNnYhSe=CYkQs_k9C/VnGhSkj<!dMF"_;'Sh'U2fXqPQh&15$U&?7_mOm.bq>',Q5.9_4gSV<Ubg5kZ
T&]:*GC5!Sm3hXaqn&'7]K@jT.K=EA<VLi'J+%0#+-KtY<9AndW%?EgI'MSbAO:ja]ne#o*p#D$n&S.r
%?d@R)4nC]^3+V!8sbWdB6F7/c1_dH2B!fO-T9N>2P0dGc"bCqhr,k<XnDZVk3+^ppT_eL7CSaaQ#>VE
.0j_YEKLQr,.`e]LZYtomF1mDfK=b+p\'>OWcVIf.dA,>ng0FU\*,)@K6p+ZLbb6igMP+5$[g2Q<U$sA
D`_a[=b\b/^ZOeS7=7d&R]#]IFM!OP1t<fenb4.Zpgq7EYEgJ#"/Yu[5dSdhG?1UbD;H5=@ADs'GOftT
jWLuo%R!CQdat$arZ-9\WXap:R(Bj?>),.JKE(DLs+XeI[7Me4@JpZf^Q5D\T\/fWp9jGY*p.7uoB5mq
S*J-r85_A9b]WW=mDo!E+`+WOYIhp.I@//8Rr@'6p)`aHhHOq;F+1smjN8CTk6QR`%K*ui<fAsQ>ZpR,
$JSl)*/jif*H=eea:>Z1%^tI*.dQ`-q0W!fp-et.I>hG0FGuXWB4nR,+,dYS%^t[Bfm]!e4\r;1`SQ#-
n"N(8Ks&LacZ<pGGH`*J79nj`$[tIlm>*FDZlZ;!<VCipS.::oqWW)crWcE2,:6CG-CjT*E?+O-g3^l>
\ZLGK5`7fqAU>^S=+/i,YBPa!.rCaXr:eOYksNqq39N6Wqg^9U4FlT5!b&\@q=^)0o6sg2WqS]M;&9c$
H%l=a1?chiCerPls#]5QgBtYbld_$:Z0sWmBkmGC0Ki$'K4Fe)k>Bo&s#!Ns=,#Q)L4Zmt.gnQkpgh4q
$N:QGMVg$''g+fXMm&$ukHb?\*5K6@"96*nJr&HK=$JZpqcsDTL[EgiIB4o:#l$!K8^C=5Q#;BLD%FN<
N1mQ`h3MitGFlX@jmf3uEt#r?N.3,&88pKYgWVlj9XbJK0`#EZ\fL)/5A,G#H&'GPR#;Bj0T<Pu?G;U`
TD99sW8DGKgiV:)$q$XUkk5s`J&Q5853QuDo-%^-o*:"Y(i,(DiJ0Ou@cW$*0]t0'1;Do_RnU:#__CX8
h-M3&GQ@KB9\^2!bVbO')31n_o?!ADbU:L-54(#uF0fd2.*E,94AX7Pj"I?6[sqCsYi(On$Rni[Ys&<\
)X\p7:F=fqDj^8Rf+s;Qr^XeS/\&d3Nt3r52u\s>\)>";]GtqX;0%,60,8l(S1dk!pHKp2bO;Ye@AdHK
gtZkoj*WEU`1AUV_>p0;8AK]D%Jp;h/I%i*3"Ip$(;7ZL**mX_?H(7i/DC4aq-W4Rhd7/s?,;;a5@gSg
/+\IE<UeTD:JpAk.^:XS?V#P\ibA1-HiX("kNOmT5Q!%g48UJ;3)Wfg^kR7=XbGm]5Drk+pKpC[Mt>j?
^PCVA5K<CcR6oT<E<+=oBNmYiV)J,&HPM$R<Pp\sj5WJNJ!p?9dfDSo,(Vn=^X2C8rdm%!rq]`m9`[*8
!UoJAXg%9gajgFD%H+e)\WNKncRA<"n]]m&>=]\KD/X)GI+Xp1)sq(tK_XZEf2ptti&sBL;'$4/dost<
8jXM^NthLJk'%]"OXo>&O7*t4E!p%An%JUJU>Shg[G=n%oY]'XK\i:G<u,25]*dE4a8CPVgiTY;pjE+J
%ous8Doh$m:OD!(m(ACOk6\TK$1D$cirAnrIth3WMn/O31n,;$ra'VV@?[2k4is='1B;c8J`fN%fgfU8
$d\YaEr!sEp+H>Ob]P4-f)>V)CsSID4&>G9p^C`mV?,<rQCIZ@pXVIQV^p&TETME9n^'jAqhg-NR*%LY
2tO:f08k#NlUh]jYV(quc?g3^lSdHZ8,.ODS7W`3BmrP4'8_j3ZM4S&0._b!Js6<9rBXe>`h.abk.JqS
c]%0q1["cdCFF9$W,15HS7U+h4Mu%dbOnH8dE?@\h%@t`kC5>Zqjq?`rf;8E(E`8CCenbpm,`FQoJVNT
H[#aZ22Qa@1AEZ6<RWb2Z0=,^VqCnD@*SY`b^\Yod>'1lm#q*fhtr(NO#d%_])?Vhj4j%"B&1I15kHYU
:9W+5\cc;&6uG+LeEtEs)9X(`.r1N5r&mO'qu88KYm=2Z0Q-J4.dJV_r_7E:K/WW(/'_EW^W6'M^.rSD
8,>MAq!YEXs5+i:4ZrVB/\YT3S(cZhqq6_.jbr3>YYMHO_>!_S]D91En(<AE`8C1Lr4P>VqiJ=8YEPHZ
q'I2-=i,Bqg>Y,1iU9Ra#@SZuSZa@606uLl5,Tp#9#"E`Z]q:n;7WlmPc),+hf0U)K&`)&AoHZ*Xa2<3
BD`LZK5XfKgHXcb2<R*Jf6lEO*r4Zj4<+8s`cJhaq'rr-XI*YuIi-RK)(4rsqiQI`;`if)gt;KQ::C6\
!a<sHgJqLu[Y9\NZHYdU,S*L2oX3L&2U>@9dt_U?;sN3_ShK:*iHr;jiqV>W:E!fXmTDtCrFZQOXUf]S
k4g1X2376>cVQRnL%IN<O8h@,?:.etVKf3L&Zr72mQGCW231\HhOof'U9.-U8fONWfCLfdY-FI7s,a-n
cFJk:H$+o:/\6r3C;fq,eSWMNU@$`*[h1P;>$.WUd`2%5!Feb"7sn+jh_K,n7/@_X#mU4uE.I/"'B+4E
K<KV\J'W:lqlU"hi0,aQ^RUpsMgGc@d'If7K:_IYp=((3j+?\:@#T#RbB"0bI4jOYY-"tVSM`<R@a9>Q
\tFC>3VZ1hEtAl\hu_g51',XQ(8EL8O!HQ0)tSU\?ap%=T7bcC0tJr`%j?*qXDXfY_UsjVDQaB`Z:uug
Gok[Tf+-a<LC3\8m[!%/*nhIH]apABS"`[2*5K5u&SNNB\YIt6D=;<UVqY;mK!cmZ\rF*^#H7:DM:$1a
7:Mc*D8Zgq@kTP8Ir6Ubc>.bJk/&/Z_#4cYoLCNPH-V4NIG";-&![iu?GJH>%H.5@#.,?JW,GO[h8VDa
epYU&2T@l+O)(fN(pj)PR;Q*r37IR`m/)'I!;A]GA/m&[>dOqn*l'Q?N?"Ek)l">82VMtL_p_YqE=Cuc
@WWR0@3'Prh0slZ]A@XV(6!,!82q.6Z8mI4+!S><NGYS`Mn3lj!1mV4jKoRS[drbbSmc:t[o%l7hqM2@
c_PS%pH78tZ#0DTX4nKO`qi0Rm9+J`G:2(XI6YWraD'O+aK88+q\b..UMQEaF%9d$:K:e`E0T=j;g[=i
48T:*4&<==io?-Sl8ChY5&DUpD''Ym:H^qMXhO)]fHmGt^<5O/6ai(\Zdne+$k6?TPH*A>Vhaq5o5n41
E^slFgApX.0puqV5[+_0S3J04)ci*M&&DGqUB>aqTlH<6PBssf:!S?r$bskah3PUnH+GSKP"7%5rUYWe
PNd8chBj-'>MF+_gcc-3gMk=9Sn0<`bbZGSmM`mI$jj;KdH43SD8[$:DuDfS5!X!++B")7M_D!mG"HRX
[^P-G\U><Fn\FYpSn0=/fd8`2^jO&V!BePeJH%LLE2mfnmfrIL4Pe$Wcf3h\FSdt:nPDog960p$^tOOl
jS!!^@OLO\^p=FQ%F*G%:KIke_dH21WbqpWm6ZcI:q+b^:3`D-kk6<MT;L?QXgo?c)c!0U+,=Is)o/cg
"c[iPeu_\'-<GA3FW9YI&N_eumH^2']['Jt)f#F.mW^1KDYrlSpH$k`S497aU\/M*"g'dR>IReqa&L.-
m7.Mt8@,n@RsEZ`/60.kpZcoWh$.&s#W?Q[NCG#0g4n'il)jUf9.&`>oQ#*O%_buBgDeA=hIih!NHrXL
OQeYookt?qJ+o*G?gJ?qGB[`']s]dEe$d'g]Nj:4RZ[b0X4o9]=*U@6l8I4XClmm>5[4,'L$O]=I*mVs
(gU.oH=M_B?"e4M9)P'm3P(2[d>nTVq_dO'hIih!NV2&PPNb!Pno`GaYIl>uY%K\#</5'kBOc?7&mI(l
\,E^bIZf*_:A6qFeSXAu,@n@p2!3*e>79ZA=9Bu(I'5mn-BsMSQ(Z>n*:=g&#12bDBf_g(TDL';\"Qa@
a`LbDS!MX&`^O2k1ppA"raFL-X:*'ZlZ@[LOgT9Mj!!(Pd8,3R.7pMM%8N&M[e>"NoODe\^iT1.Adh^u
4mLCq$Z/S`0rB!Y[YAZA+L_lYT>J"j83+8@[c%r'Y[*l[89Z[`CQ<Jhd@<kZ*7nJ.[,[9Q>ekBm85$EN
aN_^!$/[HD50M>je2&0eJF32$gZKCAa5R0cqK5p,(Ph^q)B7-Uk@_2Eq``"qn@.'kI$UP^=ANu#!,U77
g4%Q6Q`V@ifj[E4Zuss>oZF]X/_rlXE.b#$rk:8b/4[0h]rqj[G!gLm>1^*c=P\,>K'B_XDn>3,['/Pr
kk5Z`hmVhaD;DYn<SclIq+U)*?)HB<HrQHD*VrAPR;V2]XkPaher=S%=KK5SS$0H<DIY9?!Lcd;\rAG-
N<.[L#k(LRHD]HQfO3NX]8JCm>PhCN?!=gf,rqOiPI>@YU#7:#Y[*l7kM6_QN05f8Hei1rFO>juh(Ha*
]%$+W"m6&]R;NNcmrhRBQAmM=Hel_O]?"%h>=r830aABg7V_6Iec7lu!8I1'G0D/Zm;DVg2Vls1<u+"c
?an?/Vpg+Cf'Q7pNQ#YuJb]h#ZPIT;@fgi$LG@VVNWn(#DMPIsO\E7Ukb9*,mV@fod-YrtM`'>YL.1?M
QqY!\0\t=#FB]j9m;=W6?;=2'oeG:RVi)BDVVC2rRpG;;I)aG=4u;$?6X.$:?EtO+[WtICHo3(*JYkR`
M:gR=_<iV>QdeMe2Q#_^2no9ggU;RC$Z,e8Ean@Dos+2EqO#$.2_;gQ&n<X4"eV3#%kI+;T=ap0GD4!`
d:X?WPF-7Rqi$q\GN8"-\o$s;]3lN:!Ih0/aT:%s:FmQ[4r+[5)mj,.RVnJZ[Ou_"5f$I:B,8NF%rL.j
_T.#Vk\B"./H^7+5-b'(oNB34DG7Oq3iInpok_C4DLDE7I8)i.r?_,>`;Yo5EbhcSPbZu/(Yh(Pg\$DH
qcLHO=B795`tn9cTcKoIlGBk)GIa>mQ'UUs2V-O;4oj@1M=u2$`Q!"5[cKth1!KamS)0o^/ZT7"@rgo-
Zul0F\MY[^_ALBan6(chUF]Y/!8I1'p/nE)+4%6e3Hf.aFuhJC@`IL$WpaTc)_(ej\d`"<pe:MjCIuB#
h)W'+qY&><fWK-Lqhl*UT^QOY)pNNqBOgHL^bbYCk1kgDKdA/I>.T\N5A/Ge_R2_fpJfu*b4keF"0c"e
S7K5?m97]WK_/_\BO5JBd2^W!q7+/2BaFJg!HWA[*-/W=)GMTth@=#sVX!lRi,pg2#$Pm)/preJ(!SYB
q=Qa)a7L]hFeO>snDfb:gX&s-X$b_"UtM,cWOdL.hll:QhO([h-7R@/LYFk"LM"06lG@7>@*chth7eX!
]O[tq7qaeM8ZHZXM4BX=l*fFe&G)/<)3Nbo&6idPU,<EnF^`CF>i-c-[m*H%h+4L!#AD\$10(fu:!VqA
FB`\.[JAUBBWa.tZ)83dh]&&?.7'G?KCX0^Ob,77XDUgIf(ULk[sq)skJhUJY>9*6LJ4HT:W(2DVU8M`
I5/L+^7SsbN2^("SYOrc(#2'\\pYstR.ja`DW<oF8uC?.9,h^7p,!\9EEfV)NQ+!jq"#LE^p=FQWQ0%%
qaA8iBi_]3G7T%mV<[b$him<56_eLSrVs;:i)ted`k6lA%@BUp%`R!!c6@<XWOhK#!=X,J/8!B./4I$<
<3?6Yh0.k^"gl#,//i:)XUd4I7R"/,DJ##u+/ui2cd@NIdVVRZnTBslFSiBJ^Eh9FTA6m6R*9J.A466/
8urOZ9CDWpmC7bKJAaoOea9uic#(_SD2`sOcbHCAp9tpgm?685U%LQ]a^&h$I@+biqB0"pVX#;H4QL[o
CT;9%TA2KCH+NC`"\d<\['`+kVV=9Zb%hr2`bJ^(EnY\HZ9Cqs3U;u#A?clMOL5Co\p]6mSYt4UCHokS
Vs$&,D`aA)qrG0pXm]CeNaJCN@B.FP@q.\,eR0s8qB>=)p:>Z!T8T?5FSi_&A,L[Xh>SOHa+\'8*Km22
[Z=HH3SJ7sQtk"13gt;r`J:W$\rAW>+&dOBhT"`Qh*"QCOX*[n>M[#gi+4\"Xs/"[I72Z\X<VB6Re:+S
8Y)>-RoTXI`k:BAW4d)lS7IRrbMMZ(FW3M+59SGB.T6/*et9,nFWSch,j1B>`\<n5"5QF?^gBrch8YiT
R,W47GJV2H?FTrc>V&.hm9*?c->eb4HrBkhbti@D.;]L"Bg'g[nOIsC[F8u_"2C<Bh*t('N2a23mJ$-p
CaIQt3`>gH)SVN<9Zm3e50%*Z2n1l"53"DpZnZB5],oYo#4:eBTm5D5H]YN"(u7Z5?G)-SFo)Yhm;:OS
X:*k(F!+8RDL];'p_=gP?sh1KHha%>ja4,(D>t:DeE'lA&O60KSiueufFOMCGdZ\$B>&(D8>Qf=oaE9Z
gm\4#^(*BMcb5t>l"FH\U!CA9-S*J(ao=H`fiYsm]5DOK<o%m\>^=U"]k;i'`ceOTg3^#IXh4E*D4Wa'
dHu_1Xi6=ND8ZGP1:>SJN2q>ZicY.19TF#.Aij[,K/_K_a8,1V<3P%<W4Mr5Vrmc&I*Em8^?6^tXnAFU
\SF7[p*Fci!+*P:*U7XC]ldKt'#(EHA*W?03nrYBjd,X!I?N+M.c6Q=ARCY_)(5@^?$r`^0;dNW?Uj+g
rA#S.^,*[8D;*;SZ.$-[fcCeip@WX$eqT-8CY.\2W]Hg<47QW!V=aU]F;o"s`?0LI2='s/r)jupL(0cN
Ghr@A_1/1=h3Kr+lmB:m3o[Up7"Z:=:,&PZXnV;30,JI_VsW86S$C][3PCN[I$2YGfqR37.CMCX2O/<g
QiB!^EQpC_!&7umTe/2*>N1-"ooDUl'O<qj@G<\WN4.d*o)>Ila8I$TZ9?cMgGbG&+#Tba]\r5d/F0gT
d<sc!1R7:7gZZ)Ij,VOSlhNX?rS2hW*q?SgjeKPt,dglVBb'_2]Qtp5s#G#"`"p&lI%U$EE8CIlp77O%
DLGWRqp0u2GKmC.Rl*-)@o[cOHe<e:'t.B@q1Ula*obL8($Dr<A'>nl]7f&^NfcM_oXCVJZ#%,\FaYoW
S*pWCpN7GSjI`,Xh7f1[He[H(rA8sV=>t8N^JeT5q<8`GDj,)=3Oq6p\rHOkq^+F$AN@QtjRh2]N*e1I
nhVBHB+F7'f`#MCDEF`$rTBNXnGo/q91Cb=WNb[u.a.^Fin(]8T#G#ad#rhTpMjrN)cdE_mYC1)ZAkQm
;FY0nHiF"&\F.Y2lOL=`U4ou!;)Y80ipRhce8=PTo2BDTD60`9110d9Jfdjh.p2+]'n^KBkk%?\9a0\q
I#hMpP:#,bgOc&]dqL69:QsOg@9q#AaI(kQYHs;\H]+:^_g=GcaLJI]s8%2Q4rMaiff73*,HcDmS)>65
%e;ikA5C-(l[n"H7eo3i2B"NEL[tDqjRT1Tj,n!?g@=J3lGX(a"aLSpD<+^lhe](`\p]t'"#Tg&EpLKd
VV,sPo,+RDIYM)f^cC;GB&1HirI)KajQ]]K#<7^MD=A$45Md?!%b`Et,hI3B[XR9]\XDj]>_JZpcMlf'
mWf]&:@[^]R:@9Ki4asPg=fXNNU`-D-uPOXm0Tl7%`_/0`j^f>lO7OChi6m/@2Oa:+5]iLVlYkqVs[Jq
\nr:=i@s(G%)Z1"9XbJK0U<*qD8S&djhc,o0FVI%0\nVq_cSNb[gaRQFnGbkHhC$hDP'_h\rH/@KBDLn
LWRL9K^TfV)GIX+)3aYf\1-E>puY-&LLlB$Z7)@rn4SAja+9',`EuMj=2tDfL*6R^)a@B@PEG%E5>5PX
R#flNctrL)I$&:CD/.Yh(\o)eDu'raRTcQBB/,2S2'M/7#G9*[;fd<_F`M'P,bKk*b!*f%hm^l,`%MAT
X,c(e(iesojL"#O[O_99X_a7$OlAG2H[_Mj?>V`)@bc\:a7sH]Xa^2,&@;ZfQ=$$"0':KLi[d_"ZS8#T
]Dn\aVLUkIB,tt`i%Om^C=_bY\bIH>Dhjs3<?.0CWQ`9+nb8_/O8AP[C=[7?0gL]d9DDe@Q"K&HXM[+f
SQ]))6u-<,:'flU<Rh+p\#U(DXq$<?<>CS5cVLfc7&sePq;i"Q$fu.gji(FF,%4/14R5S-hkuCg$R(IK
M0J"#/!1Z^WuP=Kp651Mlk-Z2A=NeVNHY%SR]kJ<+;ado+"'(@^I."B^qT;l%o[4*5_#<BD]efF7[Len
+E-+2drBYqc^Vp4:<r[-:X_K[@k-M>Ke\.P6d+&(%-'f9`Q%OaZ]@p]**q@?0$9*]gc$rB\=9'u426E8
n!gf$LEC`E.b=;K`Z-$sFf]p-IiAR3qr?FU(XV>^e3(I)]JjbV]1TCej)8!^o7ZBd#Oc[=ESA:^l-K[7
Iua$UD<`3*HYg@B[X4;:0nD^JPINh_mDBQ0\6mF4WqW9%>OSrP,:d=I`4C3:iI4(Ng@K2MdsDIVq[.'(
H.++;H/$$lr4Qr8pGQ`3cQLmsV(YR#cJL;O*6*YM'C/tHqZHb6@b6gV_T0$OQUG(D`,UcB:\(!,>:=>p
1=R;#@43ih,u7.H0&#_,RlBNt=!W,-ea5YVEfs?JgQ[C"-uH0YWooY\A\rj+X)'lD`q.h[E=LT6:A.9g
pICH/05%qH7.GD.MT.K$\$)Fqp:Le'pP/9rg#"Te0=ofZW6HAMD;,n->YNUnFG>'RhB%Afnu8h3_PG&g
8,7)NkI,^kq(-Q9aUN9q[psP"p[]2s^RdjMVs(^qm67999iRA_fs=HI8*[*;g86E+i&tuppJPYYGrD87
To*V:U<V2r0%A782N4V=4%/C%@e]W`RPoM9!f]+X4Qc#;hBnlk=tE5ATrYkN7(6a2RonLdSi8'!bJ'VG
15#LT[R6Oi0W&a^F'f+)eqKc4NELGEe3;d3*fPO)q[a@qQG"SSFZ\AgZ:VM[hMq9\`p`&<r#LUHD7Vl'
CB(q`]4]qjYts!MQt7Ya4sOf$?F<NnZdEr^^"hB;9-0gJ:\Q3l`r9H"hlNrp,hgui(H:0A,ulHng6:hh
C0`eGlc73o[6J,;N,#$?:QX>'XK?Bt6Z/DU7^inigN0[&DSpB*^-JRMZ_Wn@[c=j_6r)VZEujT5^Jm_K
pqO3kWe#&_h>Cu%YM5D+duG:$`d<@,A6[kZ3ur[gRr6Q8WY8mJ[UC2D?eUcimL`V5?a-tt.6YH!(j@ja
D9Qkq5.0!ZN,:pDRWKL_P:-/"[^n&;"Ij:)e&I.dA.-/]^7Shi*2W;85?P8$B)p732"n.j;U38XTgJp,
L8"-DEk7e[%hRd\Fn&$K_2%/5r]MPK+R\]=1>VYd\/;4.kNLBpP$=R?kgM#Fig1o]q="1uL'H4-UHV?$
D8_`,S<A0/]t<32r]N]ZYt"8iA@h.a+kMKC4l=6gB,OY)pegJTX%MgTOj-VGK!LG>:T:oWF-H3;)f>!.
q=bTZrXQKH.&P`F\[lS:L9osLQYlZ"RU"Z;]5h4/R<8Z(0UV`1eSW7FrWUQuD-:A)PbQoGC]BPk[s_^q
8_&qbcE`>go]HAsJ!q]s*_,b7X;Y3mNqM/+])>ZMF,okODf9roV<IW/>eF4gD+@Umd'hT:i@Go56#?I5
)NFFkf(\MQ^p=FQl.>%b;[*[kRq?eIFSE$6=mA1^Vtdku\+Sn9D;7tF*]F!Sc%PZM@DI]CDmIM,\[mc?
P,i:t[s'S@n$?!L7U,)OA@`5Wr+9d#YXG6N%rD/X)Qj!oq)"@E*p.1Zf5::dIu\,`Hc#.A5"jFCltpo!
R;RX81&^9Dl]"QEqCl+L^FHUI@m1Em2^k)UlbhfKp)SO_:q*'ll*Vd-WO`OGpF"%()ecXCX\W::].[;#
)KQFiKN:1fqM$<EDTgSt0faXlFo)HhmT5^SgKuH*$(5Z5XgX"N<ilFlnbd4[^nEd_XjtHs"Ya9hT:&s?
`j*nR:q'4SkB`bslLq?-^S]b3\tHT0bHdnB$eD5"N(@kNdGj5QaOjFoDYn2MrH(*2IZg=$FaHO<>/7l>
egHpbE4l)."*g[dT\0jb5.s=)Nn4&]-.#V)@]jU`JZn`9RSLBDCVaY_]"OBDA)293HeusDq])&AA=N%1
BZ=hm^7dp6T)AQBF*&Atr!o/j<tr:YI$Uee@$C&[DqjrAG'pZ%^WTVCF%k<aoSs7>YMBt1SW72Jjk=P\
h1e+#8^duUdMp#83P(4I]l!hYlP&[bU;`)B?NXbcHACXQJ]3(XaOl]BDJtVP$i9*O`_SV+NHXH^#%5&,
d;I-q?abDfcMI/CmCe["SPD3=UnugG)Ejd.T,XRGh1h!;]`YKET4kE`ZC!fO3bs.iLR-8GJH#7U!701C
dVdO^mFu@/T,hWugfTE*Ech0bVJk5^M7.<V=KMLlJZ[C@B^<*MqgB?M;!BL0U"dZc)`4)qOP:/q:Sull
BWj-Hh:<[/2ViOi`tU8aT(\H99"-NVGt%4jl1V@PY5,ZplaG'33OEX2lf.S[)t<n=cud^em4XRmFmn(.
IA3ju[e?C6)jkO/gVA3molV3h!5l4u@;HQ%e*T9)IAflL],<,&GMV[r?OkQPZJF*.DBCAg0DNb53tL_h
*n0LoFF2iqXE?8;Dn<'SgW6.'?i*E![m*0e/ll2cD67e:\ukq&QAmM=gZHlUFo-Q,3pih!(*Je)FroB)
37I84g2ZG]gEY/(>Kh293Yl+)\fJcl6o*TD6[RV<FPCoL$bFD\VVA!&bDPPm5,R*2Qu7,cU3-;)i%rjL
4LBMS9Xf0)ed:ZFgLG9q?(0A%h(Ia'FfF+R0<(#W9Bsu[*is^9>aq)H#46\-`82!u8C5q)`'D`(5@[jD
f'Q`HqZlUqI:DNOp$"fPD*JA3^V-_9hi0gULU^F]Rd7-2k',8`&pLlZh)7KAIE^#C+7jRB#4lofB+]U\
g:I4tEj;\A[U#M->Ub(P*agp/>Ub(P*oM(5XkPbcUV#tS0\pnclaFcP/b_9i;Rc2*m@0c,m@0c0p6loK
D27MJTTAeq2iH&M-O[XH!8I1'm8Kn.QuppugY,8Tm8KmCN,*UI^Z<99]7\FMFSklc3sT0*5-]Nep!I+C
?u%85[P+jKP..f?HU;Uu[@_Wjm%0D$\rD+,M#l83:Ll\&Xm:iD<Su-Q2k"6]2V78F^?eb/QL,jVOM76N
DBC"1kDc+:06f,E/4[1sn%)s.[d+Uo4`&a+Y><O3e(`N=@mYM3"5pM)F9'Y:2_oTOV;#[mTb$1]MeG!q
GE-R5ia_ko?(['H2a4+H@2t_aH5h3OB_jO<S3[J(XHma6m-/>T:5HT3,5<]h[o(JA,h).=g"%(nZ?6[(
Re+3Np>jS*?YTLJ-%8P'*8NfB>TIc%9rCoH)\Xo*[o)$(+k(;$2*YSfR$%d?p$$>[aY>!Q^7hZ1/V+Dg
8GTh+>t%Gd:q)M5ClFNVh>TOIod$EhH8/$.h*[%]I'8Mm3Af@P=A5\,PZb)gbLLJ-&&+1"DSJHC5*MtW
rDdn(_+hE3r-`G<6]"j9hSu.ad>A`Y540`2cX`&RJ!->!L:Y&aZbAAt]);_OnOZE`ou:HXh*];?FSbVf
p,%c[3Z[h&.7'BXTR>Sp1-(tr:q,ng=aur@h>S_2p#2e&HLpd[L+1MR+5B:YfO[NfD2n6Q:Wn]u"jYY8
XO4b5Ap*usRU*h%WnXh&gN6Y<%Cc/*9r$+5ZZ4W3-BpaP4!OX:iKkEb;jOK=R$5I;2kb,]a8#OuV<IV!
I%PFqhfe<)NVT.uin?%I)ZG09T:\S_mb?mMB0k4!0;\".3TN$i1n)s38bi<gr-O<=@sn2c1>NGt>L$D.
D847o5\#bjqX`0Lpc2)?J)BC"#NJSs2bqojbK.rGbgUEY9hC4[@kGe5aE6/aGAQ!aP0B(nQ]9)_o2Xl&
AMt&T$Y#m*%&`Ca?0'SScdV:%aK7Bh9$qL7O+3![[s]Tff*9W]q6MR3NZD8P^7&=,;=e:d"aZ'=QE&\8
(#2+HFW9?\)uP&?DI`Tl9W$Q.\Jh0T^[S7bUCe0Frd5G@F1!n:;[pn;l]eR,(aHk!aZSDQj%H642YpQ\
a`KUlDlMcO()+$GS3FLVkGu_p7C@E.C9X!,Ab]PqVV='HnO_m-p??rE;HqtkKj9!%68I@,8KB`0POAE&
X2K\>gW\6@Y@^Jmq9A&1Wd,Q<oT,ubDG+4Ikk@3q-N4L^]A)WE"6@J29t+b,*B,h4OEsh'h9E^J*iq:i
SX.^DYaDrN5drZZ*hrA>%KH.j;k.aKggjXF7P$"48XaPCOr>Rib!J7jEH3YVk^6:gS""=u2:-3A",%bA
>MY$G6b?iM>Poi&l8IXG@k?5RH^</`(fhF7PG0d4(X=D)NA2V]='5cM)k)Sg/7[Ji-r.6k%fC3RF;oZf
d,6].?FOk2F(E$)e*UkXn2k=4ruBGGao^kaRfb@joQUMN.aD>LqNhnU=_(eTg''SU@FGHsc<\p_[r#V+
E]e8eKjAjjfG*\N34J4!%b^=5<s=(?n[a_M4H-J$YBuIN,JjEBr=lHi(gHeJFed]c.DCgMhYM0p(q2V-
_.Ls^LV7KkjR:LM].g&J)@!<hSpC#kan@_t@@'=q<u1L2S9rblI@#+pX"bjIWs_98I[9HaeV\#6fc+AK
]f"uqF^O7Fp[Rd#pg1rIc\8e2njAnX9l#0;BX6jkUuL'g<nLu5KMCcS,:ip%^#S2pkLB*tgYZILFo*5o
LGl`'\:F<P]PbV.(cP.=D7hNI<sNGCK>jFrN`=Puo<dH8RcA>[Xr2\lYP!tJoAu3p[V_1l0n>C!8'-td
m+6Aa@nVKG7E\TqgU82fdOpc1:[0@Uj\Ua$k2SoOgJm#c^2"7/pHH<X,?3qhme'FLe"&C,8L])0$bZA'
3m-&bd:'TcRhMs^(4"4fWQ_F6Nq%KpNhl%SgSYbA7U$gKmTA<E>B8i!NGcYc*T]Ca[l=+qPAX#R7er1Z
-LXUa<S-Wp=F@6;p68o:n9:@B0r"HO?;+K=<S10kX0`Ur^=LQT&#"D?GK(*DB[bOJWXE7=\p@/lKLQ'J
>>/A@]hYM4GNS#?2YC9JT;SjKgIL@md*Q:Aq"6T22<e&^F.a#CdW3b&GO[b>2`9ppS,&U`h0,?,^R\uc
l$V>*e?%E6(&Wf`pN)[2V&VT:4Qg$#qf[D&O483$p=4hnbJepZY.?YAG&4Rd/6pKX\Y$Y&eJ5=K4St$(
LmFg;TT"Y;,?A<Sl9bE_K?o%tH\]dBn$O=gSP=Rq$-h%J,DpDL<6[.Vpq7ZAZHOt#^"3JQ2aG!KEQCMQ
?OCW;n)o]g-(glCh7g>U-(<]:*ErFsEbc!o\+MVel[A[oP-ChE,LigLLa2Ru4r:qr\+-m)Ee%e)F^K!b
U[\8C1]-r'dH]@d,KSo$8$eE%r.+)rbNH'lT#@jeD6]F>b6ImX@PgR>_D/TE]_#'o/^Tm4!1n8ZN7\o?
YD;oA&]OVo_2c.+\kTG^L>S$Bjq9/qR_fj0EShn:fDh,kg:hD\?ah++pj0b6jKno((TdLYL0Q8BM7\c9
\rY"HI"7`)@iW0R[sq+i/EYQ30'Wc0;g-ssCtL+K+/9lH?C&%E9,&2C7-7)O;LSR\SI*KZM265e_DXh#
R*b-k;)HqA[ZRhRh$qD3bf?i,S"^4R?*jug8YnUgU\VM"GC8a1aMe8"Yta95(aHSKh#!"DDuV]*p@`t[
>6d-K&\7Z18Aqd!pPln<-HEKY/[*I?+"'Y9mj<3a&h.sq1=L*X0FWa$[UC#mEacOr(l#;#Qu3jt@4W4l
gP0,RbD#2h@2R")@Cg:mL9Y!NDQa7!IdU;sruVJbYKO_;>g/e:j00::4q+mV\/Eqt.>E]KBj+;>do_"R
L9:H:RWTSHNM69rMbas4]JK=S_<:LGe?%Ch/,0?iZ!9e0\m:$.(ATu0mIL]-i=e'6Hee@:$j$-q_2$O$
Z%4lM:%@Q+6Y1X:n\`@,lfNt.`PjYS;ZSe.J)C9b3#B"c:3#fLer;CYa&I;Gm=_utgSeGfs,9RBBpAWN
(VH)HFW9cXIdIc[oO2ch^kc@GUt[jE5446ArAoGc:C=g$leAiSbCTEhJ!4+Xf6%"J>^;F@7hbk@mq:J!
L*)oO388Kr9t(@g8)!!'[Om$u.^WQ1h[p*&4FlU#'I_iPIeHL)NN!K$-\]M3MM]Zcl@a!]fG8I]5#/8o
r;j@M2O^i(kO\Lfi6S+OUA`I'48F2IJ(UA%Heh60^1Q8tB&11m^I-"4:k#(jcu*Ol;(C<YWu>UQcS#&t
<t6jUG'f<PBbBpN?T);!M6";sp:[!=r>d.aVB;;/8t3<]EA?(Ke"SR^nU":_Au/<?3uL9G`Q=+qbIVS`
jY/lZ+00Z%@P*UR2WepXS&-6p5n#0[L>#,Aj4c6WBDsm4)p.=r`\nA=YUVrFU"qH`gPFmI\851*gCdR6
N*3cojT=nO.Yb!_B?\Qbdb]oX*f5)"mhi#Wk/@JKh63S(DQ^5(EGAhkBuc*sj/QS,b?cTTgl&9D\>Qq9
d&+I`h/bTR^Z4dB,!%+Mq[&Pbh=YX&.U,m6LY,`'.</UdgPB?mG';Vc8_EZ0'W9^CARagKS+]TZj?=B&
pD<6`Q*Y*i8m.7#GH(<i0nDb,-#VH]p(N;=_^i]d+cG!B"`1)W09eon`TDZ"bT:(/rNDc.f@]+ng)+sD
!mcN^+T'tH@P>1Zqd]?58o85;\rCLEm$e"2^6[Yf)r8M]-?L_\4in`*`bfeJPPFh@K^/;sX4g4lf:R?T
WAlilj/Ho,WndO#[Ofr$5BF?)R`g0$EUOa:=6H*[a?@2imdlpRs4]YFp0sM(UQE(I(V,;;hV3Z7NmDEL
e1m]nHa-Qo=s"B`mqc'JY37d`2__ZP]+-OMo-Qr91%+uLMV%7inTSBuKW`miK^B5@$.Y@ET7%I;G#=<%
+la>Tc8eMqpW#_g6Uj5rf*2)tNjLo=CVSsNI'!ns_YTS,q$pm;-O4VJUDfWq3JT9!NI;B;P1m%q7f7,i
SIhjVZI_g?p"O.u@kS$j#?X^eRKoInm@JGFG0PZcM"LC_?U[liH#;\]ed9`@XAstH5o\X7^Obb9*j]d:
ln-m[\,W2\4(Pp.7;>t=41;G4UlK`-*EuYo;TCo$NDU-A)k)RFLV88nkVeGeIkjL&YpTAPC@<g4od$`'
l#mf@AYJKrjuSV\a4OuVF59BXA$e-`2:-3AhaVrS`QoQMr#BJ&D>6`?QR9\t?.O"bDGQHO[OhnrN-gA>
WVtJX0SD1KTotl%L,-b31n`UED_ecW<juY!]1KId[Z.iD'\u5=\sZ7$6XkH\WefI5Ibg*.N[a.#NUrhE
4N#N2h^'TZ6QNFY^onEuD3SIf<N#%=eoBS7c+5KB<Dmr9#6eH\e*W6enPj9C<g,>2C2Lk'7[,iEMn3lJ
!1m[k]T$cc[W%+A@uLRG7-<_lr7j7,pCuGt^Ym.C]'[td&%`/f2ln@(%g-WcEgE4Z%'[:a=YS`g5"o]2
<ud".5#8Y]]ncFX']$Kk^Vb0*,Zf2lD-0N8mTS@aQ<`7bGi&E#4NEP6h]pk03UsSPqhRsEVq]Rc$3-Tk
gKXJ89XdZ&ce)>tF]dC;RbU(8YdWLA\UBhWg"Q34oO4>g4Pe#(62@_5m0Pf?7S;Jq!O5lo7&J^j`gS]!
)c!._G%>I-=Z"h;BX\GekAr%fOD>s!kk7pY[o9tX@uTI]r]O8jYrBIhA@a@+bctC,E1.*ppL-O%D*oD)
50O1@IZkpg/)NmC\rF*GLtu74gScVukMK3\)qTS&9XfS=hi+rPVpY()Z*n(tf)0`PYJMb5ELUujq_E2/
l;4tOH@@F5<8G9J>ef-;4$MMB'4XZ/0j-qC@_G`L5#!=PZ!OH7FfQf$h]d8Oi4"m([kQ>!X-a"GB;rI*
+udMY\ujRZ[P]A[BXO%@hOm9;SSW_lOtjN@QH"CAZDPQ9[k\oZB;rK0Y:8_jDLJ;5p;lc6>9u,lYgcbp
X,'dsVU`^l"f)XWcu&.BMgZuOFJ">a<8Ekm=5*pe\%^7[:Xg:%=E[002kR$+2R!O%bpR\>hoE$SZG/[d
\rBgA=423E?uGX$bL(1fJa3MJ\%^7K4/]bfbHdl,5MF(?/^'$KO+?m4*R\iSd-V9_r?4BG@'9&abL(2!
\NVkN]Cen$++oXIkoI=KfKRlaGN?c-$F.=="(NTY'<Rt_iHPXVCK/<;P*D`rn.3*S!-[ZIc1krcb$VKf
$>A-ZCX)FUUMU7\p<#-8CUZ0C)h'^ZRSL.ak3:`83P,.le$n007^EQ!g!3i72#A<ImEB-1]AI&%LE4h3
d*V0\BmRH7Orjp*;N>XEU#7:#YZm`5cd,]u5_o%m^VtZL+6PT_?3f0eZG0qQDBk4:rU-SA.R)&'m8&h'
)euij7V$u$5^VkIr3H"IeNgJ8%cFno`:pgid-\/R[V[UC9)9u,[h2^,o`<^J:UG9!elOl=FkbL3kj,[Z
e'Zcape%:Zm\eE5&h->[Y9;:2D8.gSD23:.&^tUqQm/E^e%UuNl#u8@M.F1\XLr>_mLJW07.YQQ?Xmib
mU^lP>IXR=,MKa-:9o0A0%q<2DUU4S@-chFD.)\h]?tKj\t;K(o(T\WPbZtmDV[1IMn!HdDUU67*2_Ke
I1F`nl.@7el#r=FNp1^.?,XHZGFNb1`c&Gj5K7WQ?1tao9t/`&?#1=g^$bm;?0J`9QI=B%RmZX6\$>'+
F,,pid-Yu-QnEasf%m2JdU0n0\ui`%h/p86_qq5-DpWSW5U=hG4M'a+YIdN@k^T(>lfTeIm4r%:DD)g'
g\R:TGD#.g5,R)X8Jh9!Y.IEKUqb6Ql*gRTS#4s%HEo/Gqr*._1n@=Lo<<L3I;E5q)f/hYT4OR[e;QQ(
N-)H;:t*I3g#ta5]''q^)qqkd-N/D@ZI+ADLO1<!qJCZ)mm\Dj]BKOk]?t7'IQ-CBWK6kcGD#_%lXPD3
qCKM0>rt6,l*eQrl3`G"V2rT\dUsHX8m+8AIGM?B*f%1A>9$^mh6o;Gh<DA?XtP#PprmhakIkS8cZIoM
q^1N:q^1O5Lj]rDpU`09[XH<0_Y,G-a7^t2B+b$*g&@/j]f3(ZftP63gD<s6gD@@=]&"7ugk$3UB0!PO
B>O0AYZm`-S[IT^/Ck[,)o-Of%Hb9G%J1Ym/!uYd1sgHRb[;I-HV$`:YGU!d,YuhS>\/q5J$%YN!SFMm
1jtE3jOT"YrChX7Ba=EV+!&-Qoo6C#cn6:Ki48[gG.<ZVFSg6M?)rC4B%I7Lkk7K^<sE'A^<mo^[<9J!
c*:2OBC%l*HrKQ]lQ2*Q^pk``<^X?sHm<!k=l8rnh3Rs*gMVEA47#qXQE>LQBTD]=\q^pCEIJjREl^5T
L2Lpk)pe*(#0k-jbgC:71TqaJh>0T^I`C(qNY1NXX0J$i-!G^a>H_4^ZG/[d\rCn+Pr,$QVV.>e3P(2i
h+Iu\\%^7K;6oUEV$'N-;2Zl'U?+<p-As<!pb>B]FW3'3hEfV)-dBXZ8_*41j>?"C#@P$TdIR#h+89KV
l7hgL0@?f;bf@D-9WelScu%k>2pufZSn<Bt;fs%#e&TRP)edKCNQ?KbI'gnPbibikCWskIDG#<6RiL6J
LYVe0Hm\f6&^C1/V!@YjjOu>cgNrJ`eqTS^CVJE?Sk?BPHYr+`)O,`160.8'A`VQpTl-LJCf7fu4&rc)
8o?3:FPELoL>2XPVO:9[)X\2?+3$fd%Cc"=VNEak3P'W?_.,=&gQM%H(\-sn\rEt\09GG,TJ;19j07!G
oKTDf1Q+a&_tl(94AE!YOe^Z,O]tmmVqW.iXp%MLD9R?58#G%XK_!lPlb;OdLdp,qj1VN4\UKS$Il[ro
)qpjXgDD/d^O2Si,Hf*tr-PG]TAo;th0.kflYJ.E27`*8lbgr04#Ur(Qru+4K)./k[q.-_SShe'AaGQo
h&_bqDp,D6gM@/V[R%91ri?I;D+!X,b`WpWCdQ^.$'DZ4Wc#us`bADUgLjA$j#'975@<o$1>NG^BcD6#
^[N_7dl+Qs9Jp>&o9ljIbUciupj0c3.8@99?LT2.YM2U(kDHdP.D#H[EpH:j\#7>^)d5qZC3&$_eq^4O
2m0:U@:k(.UC:X,8;_:L;K*.(lSd=H^]u5U[pL>gIbSskR[gf0``TY[i#.9hR*s`Deq^4P28<99VAeYV
o%RMLRVr/"i#6@]D2D2SU>)18dr]r*e@)&oI*GXm[Xh2LN'D$rBj<MnqffIj;`2qh:DUT6BtB;p%tD\J
h%kM7[^pkh3M4S)a`KTi2+F%"L&%Oa[^Efjl:HtPCVF6-5e!GDaE-gEG.NZCd&3+VJ`l:+pe@>Gm;s<5
#Cf"9gNB=1e?H54T9P]],;ML*H).l'bYPM_fjF;O"b/l+F;n`LaPS_`NJ(E;n#(??NHq,AP3I-1.JqX(
W@ZsJholMjSl4Qk/McbAfX$ur0sen>GdQHmYUD`S[V^slNos\S@@*Ms2LV*V$d\3$VS23e\!T(bNH#Ki
Tig-jIQ7(#45H4-mB1SYHXQSR2=IKgqch!f"DrQ"\shdorUodY@1U#k;\bhpNd8%pQrCi/p@@nFVJc$T
$f>$T0b:CoC*S2)]D3?=nhVBXCiL`)#M;Pkq/]GRhI5la8,;WP1op3dG&9=%Xr4G<ApusRMaK=l0992e
j^<a9+6V\$F-#p82ndO(S]FqY,J*io<;PKgULr>21V'oA(u()$m46gqZ+>?V_/H:-2^)210;a%i$1k7&
TAn_\]_<66mW-?8gU9[op<_O1pPcQB5(9)e1p+NA?MEcigun=5ocRWA=dmlfruP!3;p.Y"3Q<ZK%be9o
I9Y\k7$h9BB6]`7iB]YFS8#_TV!T@CQ3g9PPG<\GgU9c/cE!c5,tE@_Epn6+OuEnKR5]>O:;1O2[-)%i
eVTJhC;Y^s2>01kDSMaGnSX65m;(Abi\MIIgDJt*f"[($FSi[D)r4!?PC+2#VFjc&d79`$mVm*bWQ\:&
WVq.B2WGj`AH?@?g*_ZSXFm=^]8,t3$shfCca`GnZI*:>UM3tE95m\#/_cNA51s94*2.64BmJGk7anli
Lg6PpXS;EefiK$e4L&Qep`)g!DgYlV2gjH\A\i"-::IKGqo^gsgX'Q6*KbRl@D^[>7jq-As.S?\Wn2+#
;csLk[gAk44@EJS_Ulk]r![#ESsOr]bVRh8L!0:=@(VUZ?'h@oXbK5Lff6pBN@N5iB<h&e<V)Sfr_1$V
Vk#kZ6JE^A+TJ00m\F"AN,<'(c!s@k7ipLICJAJflFf*7q76!B8,.??o(/XUoQC&)K'uX.DSO,^]n(ZB
lrpb0g5K-3d*+1P0(U%3XP4iZHc9WlgR%JR-%>n41L%g]ao-[q?QRRdnB42#T:TC*0';Kdj6IcLn(C.Q
;:fL^]1pA3s0,bds07$!aS2=iGD0g'HO2_r*l)hLRdFq3K5B-aD!.9:51TurlXs2Z;89c!q0sF#oBrF=
o(j#?H4$9epq1O?q7;RYK$oC8FpiC20`h4uirIEqGG9!-b3uT,\,S6+#G&jq5f>oR3I79cgRkO(P_ZKV
nY[)Qs*TpNn_d-UNiuCI9NAV_7a>(OhKeR`ZCeUmY@2FFV\t]IC2);5*-%#23@0`h@sO]%oT0$<b-=3r
j)%c!gO%VVn<5tulGpB[@PD[T+fE"$pufDfq7?M>.`Vl-Rq,4$%PVE]XuscbDNeBlS*m35XLB-(-l;W@
e)dH:f;3tk7?"q(VXs>u8\jdnF*ejA8^=6uI=Ynj-'@%Nn`/AQr,#ZQD&A#d#^&4O5PJ:9:>IkFFPAJX
_dU,n(l#;#Qu3jt@4W4lgP0,RbD#2h@2R")@Cg:mL9Y!NDAu%dnD?%:OClG?.E9tZ;6dKo'jnE^'+hmm
gM"<=,<!ZmjSUOc9&8_)p&$t_-e%JY^ea5EC+^%d+VDKLFnNS2Z).5/_scn1%EHB<$%?FELV7T1!h,3Q
!YSuF^60!sSG+4%a,tqVmq;^I1Bb-b),gPorAFW17e:d"^QFEpJ:63KY^I*Rl=t?ZV5hsDr4_5tr"73*
m>k00CQ+kuoAn=#fWB)1`t]Kn5KT\uhYs2,]Fd.GpG'q44Bg?W!I`cmeM3287WG[H-0At[RgZZZD_\V7
?$tO"<;Q+\Z+J$Rs4DR\@acoF^V+I0PAK-!MKNnFc'J*`K%nDdDac3B`!"jbo5u!,>S1%0`^k(8k6_\q
l'm]X-+gk:%e/?gTB%bB*[a7EJGgck^O1lCC_F;IFc$?"'g"eR5Mg+D4eTYT&1,>0==tj/k,R*Yb]]1P
%J+ZaG(5ghR'.b6T4jT6Rr]HVN5jRl6=oKqM4%;OLIA:>_g44"#4g+H@tWe::==60a)V)<a\N;Y89'+H
\<cKL&<;t4g<a]DYHO\bK\5&+NgT?Rkk"s64&4f0'E"60b7qRr%b[>hO6Kg_X"G`[=4,OSO`E1MZ7IV<
fa-Vrb2*K"SI[V@8"7)/6uaqga#'o><O(.G"0c'r/]<tP.r6)-a*1t@VARAe.s,Il&(rm/g(8C<Xfd]U
FW9L/T=7\h]HlK5+Wn.`Qc-RHHmM7k+!@K;:#jtQWo#>cEW4kBhOWk&=H6s2N]%g/AoF!"rGLb_NN,-0
(0,:q?5/Ikp[>$VI7-OVYMIc)Yq]UTC`Dfu;me9JB"cl0%klRU=+W"?D:>M5R231H>F7@e]pY\_aSV5\
6sG'Ph>RDhT@if^pJACJE#[X4?GS!<::C8p:<L5Fkb;FUA):Lo^2F=\'l$@NGF:q83?7p0dYX3:[HjEj
Wk=+6QO1CGa7=%cN@J5'cuf5f;/`h@$SS0[4gd,hrk*Y=I88?5^W8RNL1&K-^"B=jpFr\kMfnK^X#a=(
)ri.[-]-AjP^i=hg?SAdrnc:MJCn4L9Y0O]k.SCZpD7%W-8_hRg2e\fMVjahBY1Hk.fNcATuP,nGArPh
!q%#7W=(AP]R;k!WS4P(-tA%UC=@.Jn3uNZ.R^a#mX`%bg8s2O]O@:PJEN'Dm5F:>0rBQtgI#'JkeFm+
N:Bs9OjukSIC7[d&[eeM[JDVYMV1rFd;@PM\;bB9:G[rT`9R&ujMjdFkVh^2XDo,0D@[>dl._6C[G=o2
h.SUjla*O=bVEWceHMD$Fa`a"B^7;Xc%^D^lF-$cgd\dC)=!HgA@`eeKl,:^4ML3sg?V4#>mT0Ncb+._
9m(_#gBIH.<k!'4`][dR)d7f8J8P8?iF@!\R;ReQ*#q^92g/QqFenCaXFN<ir<'S0+_!@[j_\fM);B$J
T1$]/RrfV$7@QIe508#iq.#k2:QsN,"?+8*%H]7&-D!;np1(VuJD!mDkVi-Rs"L;6p+OMS&)<u82\eGB
BtF9=JtJ7kFpRBf?&@b,B`9KF48+a.6ppMY(]n;JI4f'BUrEMT=pD@aRrfU`PONWhdHqOV]#Ac<R[gXC
S2$=0AjUAuI37og<AC!.F"Q,m<OWPR&8Us-FSc%uTD-hpY,D',9t).BF-;."9if`o2^H>]T?O0j!;8ZO
el:JFEU^_WdVXqqT1eF[NNr$>aE1W';?"(tXg+<@e[J_dnL([-,1p;8jQr@d[dY68?FS6)f="%=ea4Fp
ge4O!Jqbp]DEDO^d--,7pljBQ&YQ7R,N\1`&Ulre\rH6B"8mMGDSp+-K1r`XNHM?P^6YgYL-F8bPM($i
Leg[(DI]jb`:0qYD<uK9)#p2-gN``gaE1WWojdJG^WC2sqVsL5A2`ffXK09#NSOIYZ(;*0>c6=Ys*#.V
SuUQ?\Oi[Q6E2+pq#44DeZL*"o3XETA2`ff`+MI8`a%?>qX"AaYM3_<?c9_BljJb5pPK"(X`$&nNMd!M
4@;E0%g1$7gMGRiZBcb;[q36CSSgf)cJm`&F;oM`'*GIChi(+PLWoUe-0T\h`-K:)jiILoB*al!otd0J
'9o]TB9I&>Kt;[nF3=A28%3tGn:^nqX`(#-Ui@ugp<Y:^jd0U729_q',5Xsml8CnsqJ;TqEkU);cZ4.)
ab$]*^i"RQIaUEVCZY?6Y7d:6:UY/cCt^2>"8j/sFBd;tqWS@L"n/c;h8]<YV[$V=^6qfhhf)ZK>%U7"
2tgePrlq<G,%I)\\p^70C77o,1)o(_3P(3XL:1toGMbRT7<<.GM7!(bZY<LV%a[QPh4B_W<Bo=&+Xopj
iTG)5*HfDuD%3sAF6j4oqKB%DAlF+1@6;OoA\#Aml8-imF0#%<Nc&4HpY<7FqF5N8aI(a"=5V?R2\XU[
006tYmJFH<VQ7[l>h`7O\$<q]K;R)u.cUM$b0b&GB<c](D'8Lqhp9e2RU]./r'\c+>p0)U/`".(VWT%`
?DDPu8kHS)^$b3G]?j\"2q21FWNB=HLtP`LM'poODBEB6o01@Jm<)cSgr6q;l*c&T1B0PEBbtIKp,cr6
SMnnC:&@O,R;V38Kl4)@*sQEA.uUfK2XLR6ldaGNo?"DBrH*poI3k"L\+:H!rgFbSD1*@j`gBK45]!Z@
\d`$@FWTT._JdY?>MfW#:W%#&"kpPIrGFr]p@l+[A@e=%(V7<JI2JWZ0cKp$/N[QCIC+,90r74m`dD=L
"ukA`6SkU(@(NJT^=5!ZCt]&A9W;UOD8_`DkBInNjB^5OrA?GJ^WpZL"^U>8\99-V"c/DDgP@r'c>sY)
kdJG5eCPOq?Y;:aJhD.,>cSmb!^ng"cD(d'2Lbq[(piII@(O%AQu7,#BoL_e)<aDr:DB<lAMW)mV[M=h
\.AES@rl<qdk4bRGtHJ%S!WICbfsBTnFs;+Qqd7AOB\'VCq@;GlQ)b9eo,bbXYi#+/d%%$]<V%`qK/Fc
n=(L/i7[tFI/D-bbCKE!0.5oFh@2s_[OY\1@VM3(]3ne%8j,u9^"1iq!Hs+7XtuP""57a"/KWhZkX)aq
h`h!dKf7>M!Bc_%FL>5h^'Q0#G&<o:Frn)169!QR/8!@B?kN:#Fg9iK]'g)c3'E]kX*qZm`V)VTRk=df
l@**u_osF`B=>Qc5+:LM?*rLU&aci%>GG[dm/ksJ<_Kp:=R\"=VrsH5^!AP/F77k,IA<3[c$.g6]f+O*
%*YSS!=a]'C?YAei-(PaO"kj)TB58pr8t+uW7tZ9?Nu9t>]Uj217NHDN&bS82VQ\?cue!dq!IPjh>Sh5
na4'Xei0&hlK6:J^cLMN"2*2?@lE]YoT)433k>b`74\L)h8DG9I?pY_BX^2j!5%o`VUjJT.L5P4VUDkg
m)a(t-%9[0>i!Es3Lcnp'f6jC0LrUe7W,u1^?sK1RU[<#a6je[1CXAe3(Pt$A2`h<$'hclEch1PEaqn$
/`io%BJr=ONc&bLHt<;$lPn*WLX"55B_c5/?_?#Y9@,nPRdtS?RYq'b6J[sgqb6/92Wj%;++W2D7W[sg
G-&r"7]Yud@o$^c0(F@.Ec`9#_cTI#DYlV]3P(2)oT'KtDLJ9;[r-9ZdqEHJNBN\(]*/)!f-t(9mio6t
Y>2QThjYVAhW4S!gMTADU]3>$>G'q#Z.<s!A*])uVHj9Uge)k'r=lg4M`T\ff5RYQ2T>qro!*VtC^=_@
_6-e8<eW9if43gdf(ZKZ"g_o%^ns%gSo1;drEcMUD2cM/q"IbDr[bT7*Rek\``g0k[,--7KkQDaC&4:"
!bTo!^q:rH>rfKUpO`?]l?)nIEqKN4Wc"TVrZmnL$SjZ'F,b='d8`X'plkM.R8"KKX=6`kD1=-/SSk&p
jdM?3h>TFFYnkf*LIU1Kern7?48u$1I^NpX:%c=>$//[a\da/4+45Jl7XC&tSZ:G35Q).]DYrMYY5&N.
PM<OPp$cSB70$%M><#Wl+"=^TRWTR`mdPKtdI"&`O)f'o2B)u`CSN`+=]UY)]@a\eZg"4")F1Z@5>5e&
rJQ8CW*-SU^/Tu-_a!VrR;Rf@bUZH0[=e=)L7s_cr\PhN2XL;YL5+A\+6YW&O0AgM7CV5So2]VWmAgR(
:mu:Z?gqP\h%%8ghu:Q8D=<R4;TGDG?)?4r;*_V<B)=d"f57%=fH\c3-JaEk,W%\R\"VLLPNd6]Nk`3N
8_0)/VqM')B%'0Lh7f2tH,DPOrCM$U+/@R]a7qaNl8HY%7V')97EW>]Ybh"UlUbsRfcGHOdmYGWPbJ'K
DJH*(ctmB>XDVMW2TB7\kVi-D^q74?9Xh&nBoep:[<DWF5#bGV0dF!8E7JfOZcAB'mmV?qQNa"TG.K9m
k?-Q[5*OV8Vi>RY^uq)&=-F8`\EgD:jCu`nR/;7n!+YST)`Uf:*n\<\m5e9:gNMEtlG=,tqqW!1fc+AK
_gG^6mbN9Hd@/]EbaX'1`7ijB2>D?r46EJcb^R;*USP*fU>,F)>H8R@g[?:E[N[o!0tMcK\TWB?h8]FP
?_Zt1qf9..:7BGR1$-2`IrKiQmjk4$>l>Fe#<DN'])3[8kHk*aBH)YNHr=D)>r:A\WFAB:H/K6@pEY77
8Xe1T%:*o,O3sm67r4[8fl!KQ]ZP^g>@Ej',AcY[1S8s]:NV%%jm2aeD<fl].<#(Y0fN.fG4/W+hPKH5
KPf/g[\DO'A^lL?\pY+H;]FO^_KnDIa,\^;'5WS+h7f8Rldi;q+6UBLdVOAm.0i&KK(C?hs1Un]1%$u<
q+MrKr"@`O\U]!#2"VpF9Cff]ks`#3WfV@t^<Xq!h5'\KdC(.GAtIVXpFt`VKM#P<ZAmFi;!7ROWI7:h
2KFk`pXb*nI9Sm>A';UWjuc&h+6EC&ZYeOiMf(nc;'r!_gSe8as-B23[+4R@R2FboV;O:3`c5kDD:h2/
buJ>!Oo=XDpE^_b=)QdJA".VroC`XH_Y0*U\(#3AQA'1BBo^9<Z`D6gh/dDfAoGVb\o>UVk7GnhHQ)SN
U)C<)-8_2f*i41Be?GpE8*,/V/am"4>;k.Mp,^@B\!+rqdb!lY(4;8(F;rgnLLtZJ0r,@Nj8`2XpQKs=
0tN?i9_ct9l#r?3i;'2)go!'.18=$Ih+=KC4LFWK43Y/'o?!c!%Im`PkO*]bV<bGW/DIY6>_(IU9NW*;
cI^t"f70'h^OqiQhJ7c9b9m/"S,E22JnIi`l'TUKiTJUUl`:0Bq0<KKg$V+a4iA1gDF:b(h:lVWDW<c2
PLF;PpC;4Rj!XVjcs-:u]Z0CPo8smE7QQ1Zl+a$+h8]=XrYOD1?8kYVffo'dVJk44"mV\`4Q-2*TlM[o
m25%SPKldIkC1.b-JNRHi\jIZ(XS$%.BXbFZLHbmopnnaT^@Rs@2CM&gHgaUq>'ci4c].&dKXDHs&HM.
s$#!oO8=fL\ud:Gnng3j[i]$_*b2Em_T*#?9[a;j!ST6R;)qtQeUi8nk>u#egOJ.4H^YZH:[e71PFR+%
m[Ab%JitRp_\)4g;'(0an8!(@1[eS]mh:*:m<l%MT4`t-P[++D'lnBT9ueJZ-1^95<5q*XVR_<G"5SDQ
ict)k&9IlB"1\(Kno#DqO+5<\H8kH3!7C1X'mtS&p9tps7b\%:RA`Wbd<sb>bS02&`^s!Fs8.Cta7O5T
+`R\#$a^@-21YQY%&8/;\$pT=l#sRT6CW8B3^<A^RB&I2ZYdqT1%-q-_cUFJDrr7)9,Z.'5@EOldquuV
N;i$6[ssm0odlib,EE?io"WA89+Acm%/LJU1+mT!Z^j_G(N;9B\nr:=d3":pD)q"mk$Kq5AZka:L(XBM
G(2L>DA\,5NbnFqF]7#+15@;ge%b!Q\nr:=YuhdDg])s&58f=Vr>q$W&$U$d__@%4b</0?V%#!A3;sZa
7clObf5!sTgYIDVp-1GTK=0PhOn/Sn&)a%7$LEHE:uOM*5fE3^"8o3O:ClC?LCEb:?]t#QCHD/jjEuL:
ZNkuNm/slu+TZrVB)<QXS&2@TSo2HtnJ%Ve3HAoL@hNl$IX;$bS51'Wl2Qu.L\VsOs&JP?EZ4Of4O,nb
&bnWI7aAJ]J&LmHYEZPGi.pB@XkkpcBB^*)qb@Lt2n?U"GN=,uO%5]j^6S].&!6+tpAJ6EK'3.eC_-;6
^KU+_EZ3DK0(SXmI/a08cGr#XQ(404rHsOCc_HtG=4dafa2k1YJWH#"kPpI&2'?hqo0,Gm((&u^^jgZ_
D0d7E0)ppWO&6dujF/TQ:RJ'7fIQqDQ/r%]UHDd;!#tXRXVL:854>,$3;9W/L?J/Tr\(XMjl.M$#P_Rt
N/'puF#iC/$N;C3>1^"Gc=acF`cahQP*:9Q5GPMhXX\S0cgpZKkNDjggI'ZuhdDnUL#Y*Bm/0EDcG%-H
?T$TtH#Da,S!QXmNdW!D[kHn.2KTa^Lrm.sPt$O4/d\0;i:CK,>fKM;WQ.`og5os1drbMIp,C\`;BG>Q
[dl/R$K`8R=-U3b#Pmg=q>Y@VQcEU>ojZ2G/e,PX)#sRHgO@<GCseQXGkQcE8?=$56s`2$5,[PurVYG*
hfGm=4r9=(UHdgL:9jcfh7L=D\85Elch2F0SkXYt.?en"j[FV?1#IP&Id*C&j#R_@H`FAgm.^-HBZmXH
h9^,Tj=g?+%-DZO?h9'C&[\t3dbEs_&,1002='ru4[OG(Q1+H+<5,^-P)IqCG?.cdLWTd"k/G(ASdY"o
meutS>8-0r)2#E_fId#lF_*r,4G<9F.Gr0_I)!bo&q=3RL]=d08Y#[DaCD&P).W]IflkH;;NJK-mp+!a
Nk(fqRnA-o4Rb_P:T=*XpUtrJN1J\`]efJTh:pq<6edJ&^-ZD&I>HboNgj)tBX3o#oB*OWId1b&<k#rY
2c$p?6*<r<2PJrTN66>?4P`2bRd43#4S(2O0!GYhDa3pd^?4N/B`n5!Q';,-mM0kBCd16C2"i!E[!Cf!
%C*7lg+O[8jQDVJ:DHV"4QKPWk1:il(L!#tH^F:\@uh/T4=T/8cZbJC`SZU@74R&!&'_@nh(ufWc8fpi
rVSh!C;0F#at#Pjg)"DMr4ZTDgIe'&qT%2^BoDbB`lIZCMJL;@Im_\1;qa<:3Y]"Uk3;SRr-nV7O-h2&
.?[GA!96/H#CHjpOrFqC^YjJ"`el$j\&@c"`8>W#K0AMW?bt=Og/Z2+TC;ORM!m`*gO&^c2e>+Hm/7]H
]\H`VpW[1u5L1_Q4.c)92l(>0e^nPrrt/U:C^/2KkW/,B^X;%ckiK(0mc?%uX<7/m?(F\ceC\kac8fpi
O7;mKd*ZpA/^%erI<Y@EIHHgR)"+B5`Zjgijm>V.=e1jNP-O=2$*e\mo)<OTD=hTSFnjb`Zo5kShGZ;P
eC=S:FL;Q,H@^DAE/->W"V1'LCNC!NRgTI?mmEpgq]b\rX:nV$M^I6igWhM[p#fJ;8!W=\53MR(hm4pa
jW,JOI1PY.;Y(mjHg]CuSWuaeCRYXnh8`Wt:08TYIEQ\BX?&6_f&2[VhgtD$3F<%bZRM`sK9Yr@f-MTD
]o[1Sm.m1B]rXguD-s)R`]Boc2D&`k;<4uqMp,CX;O=K1X\UBe$qRAd@NA?]IS4NVY!^@rMdT6,qV/>*
VbW_CgI!_C*?Z0E]5:/Ws/^Ohd0].WG?FBA<[m/&752_ED[l'E-KMR-'$kFD2I*-_h45g_gSWe]\aFMP
^;JYZeHpBVJ])WSVY)AqT-Dt`;g$6N:RP%,gMi]]:*6@Ah=gjX!"8k('E~>

%%EndBinary
grestore
np
249.486 251.323 mo
249.387 251.323 li
249.387 250.276 li
243.062 250.276 li
243.062 249.228 li
249.486 249.228 li
249.486 251.113 li
249.477 251.125 li
249.486 251.131 li
249.486 251.323 li
139.754 251.323 mo
139.754 251.323 li
139.754 249.228 li
148.187 249.228 li
148.187 250.276 li
139.754 250.276 li
139.754 251.323 li
236.737 250.276 mo
228.304 250.276 li
228.304 249.228 li
236.737 249.228 li
236.737 250.276 li
221.979 250.276 mo
213.546 250.276 li
213.546 249.228 li
221.979 249.228 li
221.979 250.276 li
207.22 250.276 mo
198.787 250.276 li
198.787 249.228 li
207.22 249.228 li
207.22 250.276 li
192.462 250.276 mo
184.029 250.276 li
184.029 249.228 li
192.462 249.228 li
192.462 250.276 li
177.704 250.276 mo
169.27 250.276 li
169.27 249.228 li
177.704 249.228 li
177.704 250.276 li
162.945 250.276 mo
154.512 250.276 li
154.512 249.228 li
162.945 249.228 li
162.945 250.276 li
/0 /CSA get_res setcolorspace
gsave
clp
[1.00217 0 0 -1.00217 0 843.493 ]ct
[110.799 0 0 3.4841 139.101 590.196 ]ct
snap_to_device
<<
/T 1
/W 158 
/H 5 
/M[158 0 0 -5 0 5 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS cf /ASCII85Decode fl /FlateDecode filter
/O 3
>>
%%BeginBinary: 1
img
Gb"@$s$,?:s8U;?4Gmj0]n#>U$)\"*s'H8Us8H)[i_`A_$r(72s8SG^rVp6coDa;`m&,%@j$(/E4GlW`
/MSZE7=Y-c(]OAG.jtiB5.IgDs5Bg)H&o/1b^"5O`@)eHeAS#%"\N.+1m[e%dG1rJ^KO7tSm;ldB0X#B
C_Vq>>$t2'"-mf$[ngoFZ(o']l3.RrN:2n6~>

%%EndBinary
grestore
np
248.783 360.961 mo
242.359 360.961 li
242.359 359.914 li
248.783 359.914 li
248.783 360.961 li
236.035 360.961 mo
227.601 360.961 li
227.601 359.914 li
236.035 359.914 li
236.035 360.961 li
221.276 360.961 mo
212.843 360.961 li
212.843 359.914 li
221.276 359.914 li
221.276 360.961 li
206.518 360.961 mo
198.084 360.961 li
198.084 359.914 li
206.518 359.914 li
206.518 360.961 li
191.759 360.961 mo
183.326 360.961 li
183.326 359.914 li
191.759 359.914 li
191.759 360.961 li
177.001 360.961 mo
168.568 360.961 li
168.568 359.914 li
177.001 359.914 li
177.001 360.961 li
162.243 360.961 mo
153.809 360.961 li
153.809 359.914 li
162.243 359.914 li
162.243 360.961 li
147.484 360.961 mo
140.97 360.961 li
140.435 360.511 li
140.051 360.961 li
139.051 360.961 li
139.051 358.866 li
139.754 358.866 li
139.754 359.914 li
147.484 359.914 li
147.484 360.961 li
/0 /CSA get_res setcolorspace
gsave
clp
[1.00217 0 0 -1.00217 0 843.493 ]ct
[110.799 0 0 3.4841 138.4 480.796 ]ct
snap_to_device
<<
/T 1
/W 158 
/H 5 
/M[158 0 0 -5 0 5 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS cf /ASCII85Decode fl /FlateDecode filter
/O 3
>>
%%BeginBinary: 1
img
Gaup%Ecjh!]16q;^O5C+q"Cg7r;66^;*9`8M*^AUlKdX$KF]`5B0X#B%"r\Pkq;f!KD@6ohbT(+p9b:(
Ae^;8C1:#NMZ31G2t=elR@s0V_YF]qXj20:HSHp#`dW4m&QJ1Xi_`BD$nB`c5/!?m.c3MU%@$9Qm[d\p
97%fO;*9_MJ^[r]>m*f=H&o/1/:;DF:!pZGlX8sr'TZ^,@-"[!.cUL2!8?Y5ci~>

%%EndBinary
grestore
np
139.754 354.56 mo
137.997 354.56 li
137.997 346.18 li
139.754 346.18 li
139.754 354.56 li
139.754 339.895 mo
137.997 339.895 li
137.997 331.515 li
139.754 331.515 li
139.754 339.895 li
139.754 325.23 mo
137.997 325.23 li
137.997 316.85 li
139.754 316.85 li
139.754 325.23 li
139.754 310.565 mo
137.997 310.565 li
137.997 302.185 li
139.754 302.185 li
139.754 310.565 li
139.754 295.9 mo
137.997 295.9 li
137.997 287.52 li
139.754 287.52 li
139.754 295.9 li
139.754 281.235 mo
137.997 281.235 li
137.997 272.855 li
139.754 272.855 li
139.754 281.235 li
139.754 266.57 mo
137.997 266.57 li
137.997 258.19 li
139.754 258.19 li
139.754 266.57 li
/0 /CSA get_res setcolorspace
gsave
clp
[1.00217 0 0 -1.00217 0 843.493 ]ct
[3.50629 0 0 97.5547 136.997 487.067 ]ct
snap_to_device
<<
/T 1
/W 5 
/H 140 
/M[5 0 0 -140 0 140 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS cf /ASCII85Decode fl /FlateDecode filter
/O 3
>>
%%BeginBinary: 1
img
GasZdp8oS,e_NYS:TgikHM;)joTtVe&Yig1@\[D-@\[D-@\[D-@\[D-@`(SB0E<MpX!R~>

%%EndBinary
grestore
np
250.446 354.56 mo
249.387 354.56 li
249.387 346.18 li
250.446 346.18 li
250.446 354.56 li
250.446 339.895 mo
249.387 339.895 li
249.387 331.515 li
250.446 331.515 li
250.446 339.895 li
250.446 325.23 mo
249.387 325.23 li
249.387 316.85 li
250.446 316.85 li
250.446 325.23 li
250.446 310.565 mo
249.387 310.565 li
249.387 302.185 li
250.446 302.185 li
250.446 310.565 li
250.446 295.9 mo
249.387 295.9 li
249.387 287.52 li
250.446 287.52 li
250.446 295.9 li
250.446 281.235 mo
249.387 281.235 li
249.387 272.855 li
250.446 272.855 li
250.446 281.235 li
250.446 266.57 mo
249.387 266.57 li
249.387 258.19 li
250.446 258.19 li
250.446 266.57 li
/0 /CSA get_res setcolorspace
gsave
clp
[1.00217 0 0 -1.00217 0 843.493 ]ct
[2.10378 0 0 97.5547 248.497 487.067 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 140 
/M[3 0 0 -140 0 140 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~CKjVN>>T*>:hs93CKjVN>>T*>:hs93CKjVN>>T*>:hs93CKjVN>>T*>:hs93CKjVN>>T*>:hs93CKjVN
>>T*>:hs93CKjVN>>T*>:hs93CKjVN>>T*>:hs93CKjVN>>T*>:hs93CKjVN>>T*>:hs93CKjVN>>T*>
:hs93CKjVN>>T*>:hs93CKjVN>>T*>:hs93CKjVN>>T*>:hs93CKjVN>>T*>:hs93CKjVN>>T*>:hs93
CKjVN>>T*>:hs93CKjVN>>T*>:hs93CKjVN>>T*>:hs93CKjVN>>T*>:hs93CKjVN>>T*>:hs93CKjVN
>>T*>:hs93CKjVN>>T*>:hs93CKjVN>>T*>:hs93CKjVN>>T*>:hs93CKjVN>>T*>:hs93CKjVN>>T*>
:hs93CKjVN>>T*>:hs93CKjVN>>T*>:hs93CKjVN>>T*>:hs93CKjVN>>T*>:hs93CKjVN>>T*>:hs93
CKjVN>>T*>:hs93CKjVN>>T*>:hs93CKjVN>>T*>:hs93~>
<~k4J]9o`+(Gs5rtRk4J]9o`+(Gs5rtRk4J]9o`+(Gs5rtRk4J]9o`+(Gs5rtRk4J]9o`+(Gs5rtRk4J]9
o`+(Gs5rtRk4J]9o`+(Gs5rtRk4J]9o`+(Gs5rtRk4J]9o`+(Gs5rtRk4J]9o`+(Gs5rtRk4J]9o`+(G
s5rtRk4J]9o`+(Gs5rtRk4J]9o`+(Gs5rtRk4J]9o`+(Gs5rtRk4J]9o`+(Gs5rtRk4J]9o`+(Gs5rtR
k4J]9o`+(Gs5rtRk4J]9o`+(Gs5rtRk4J]9o`+(Gs5rtRk4J]9o`+(Gs5rtRk4J]9o`+(Gs5rtRk4J]9
o`+(Gs5rtRk4J]9o`+(Gs5rtRk4J]9o`+(Gs5rtRk4J]9o`+(Gs5rtRk4J]9o`+(Gs5rtRk4J]9o`+(G
s5rtRk4J]9o`+(Gs5rtRk4J]9o`+(Gs5rtRk4J]9o`+(Gs5rtRk4J]9o`+(Gs5rtRk4J]9o`+(Gs5rtR
k4J]9o`+(Gs5rtRk4J]9o`+(Gs5rtRk4J]9o`+(Gs5rtR~>
<~fCAmmnc.52s4?f@fCAmmnc.52s4?f@fCAmmnc.52s4?f@fCAmmnc.52s4?f@fCAmmnc.52s4?f@fCAmm
nc.52s4?f@fCAmmnc.52s4?f@fCAmmnc.52s4?f@fCAmmnc.52s4?f@fCAmmnc.52s4?f@fCAmmnc.52
s4?f@fCAmmnc.52s4?f@fCAmmnc.52s4?f@fCAmmnc.52s4?f@fCAmmnc.52s4?f@fCAmmnc.52s4?f@
fCAmmnc.52s4?f@fCAmmnc.52s4?f@fCAmmnc.52s4?f@fCAmmnc.52s4?f@fCAmmnc.52s4?f@fCAmm
nc.52s4?f@fCAmmnc.52s4?f@fCAmmnc.52s4?f@fCAmmnc.52s4?f@fCAmmnc.52s4?f@fCAmmnc.52
s4?f@fCAmmnc.52s4?f@fCAmmnc.52s4?f@fCAmmnc.52s4?f@fCAmmnc.52s4?f@fCAmmnc.52s4?f@
fCAmmnc.52s4?f@fCAmmnc.52s4?f@fCAmmnc.52s4?f@~>
<~VN,ktNd%@\GG^CEVN,ktNd%@\GG^CEVN,ktNd%@\GG^CEVN,ktNd%@\GG^CEVN,ktNd%@\GG^CEVN,kt
Nd%@\GG^CEVN,ktNd%@\GG^CEVN,ktNd%@\GG^CEVN,ktNd%@\GG^CEVN,ktNd%@\GG^CEVN,ktNd%@\
GG^CEVN,ktNd%@\GG^CEVN,ktNd%@\GG^CEVN,ktNd%@\GG^CEVN,ktNd%@\GG^CEVN,ktNd%@\GG^CE
VN,ktNd%@\GG^CEVN,ktNd%@\GG^CEVN,ktNd%@\GG^CEVN,ktNd%@\GG^CEVN,ktNd%@\GG^CEVN,kt
Nd%@\GG^CEVN,ktNd%@\GG^CEVN,ktNd%@\GG^CEVN,ktNd%@\GG^CEVN,ktNd%@\GG^CEVN,ktNd%@\
GG^CEVN,ktNd%@\GG^CEVN,ktNd%@\GG^CEVN,ktNd%@\GG^CEVN,ktNd%@\GG^CEVN,ktNd%@\GG^CE
VN,ktNd%@\GG^CEVN,ktNd%@\GG^CEVN,ktNd%@\GG^CE~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
140.893 363.641 mo
139.073 362.11 li
140.051 360.961 li
140.435 360.511 li
140.97 360.961 li
142.255 362.042 li
140.893 363.641 li
/0 /CSA get_res setcolorspace
gsave
clp
[1.00217 0 0 -1.00217 0 843.493 ]ct
[4.20755 0 0 4.87774 138.4 478.008 ]ct
snap_to_device
<<
/T 1
/W 6 
/H 7 
/M[6 0 0 -7 0 7 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~DeNNa>?c2fBObO^EH5u6Ci!QlARf4[<**.&='&*k:/4PZ8kM]J8kK~>
<~iT]k&o^ptul0[m*i83GRjQ,drm-X3-qY0aYp\4^fs8W-!s8W-!s8N~>
<~dbF!RnaXlPgYh#Jd*L.je^`a;hVd>MrV?9bq>('js8W-!s8W-!s8N~>
<~X.u#DNfL<DUS"0NXKJV&W2Q2YTV%jKJ;&]2KnXGbEH,u<AS#LeB4h~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
253.205 253.804 mo
249.486 251.131 li
249.477 251.125 li
249.486 251.113 li
250.713 249.427 li
253.253 251.252 li
253.253 253.74 li
253.205 253.804 li
/0 /CSA get_res setcolorspace
gsave
clp
[1.00217 0 0 -1.00217 0 843.493 ]ct
[4.90881 0 0 6.27137 248.497 587.409 ]ct
snap_to_device
<<
/T 1
/W 7 
/H 9 
/M[7 0 0 -9 0 9 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~8kM]I8P)KK9M.lJ8P)u[9M.lJ8Rb^q8kDTGCg0\-8kDTj>>Rpa8P*`&:eF>O8S_O,8kMZHCKjV-8kDS
~>
<~s8W-!s8W-!s8W-!s8Vins8W-!s6f[^s8W-!jRiKPs8W,[o`+sks8V0Ps8W-!s5rtRs8W-!k4J]Rs8W*
~>
<~s8W-!s8W-!s8W-!s8Vops8W-!s5NnTs8W-!eaib?s8W,Lnc/Xhs8UX>s8W-!s4?f@s8W-!fCAn@s8W*
~>
<~B4YXbA7T4kCLq$eA7UC<CLq$eA=\BnB4PO`W/Yq4ARo>MNd#,IA7VX!G@tJtA>YB2B4YUaVN,k5ARo<
~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
249.387 359.914 mo
248.783 359.914 li
248.783 358.866 li
242.359 358.866 li
242.359 359.914 li
236.035 359.914 li
236.035 358.866 li
227.601 358.866 li
227.601 359.914 li
221.276 359.914 li
221.276 358.866 li
212.843 358.866 li
212.843 359.914 li
206.518 359.914 li
206.518 358.866 li
198.084 358.866 li
198.084 359.914 li
191.759 359.914 li
191.759 358.866 li
183.326 358.866 li
183.326 359.914 li
177.001 359.914 li
177.001 358.866 li
168.568 358.866 li
168.568 359.914 li
162.243 359.914 li
162.243 358.866 li
153.809 358.866 li
153.809 359.914 li
147.484 359.914 li
147.484 358.866 li
139.754 358.866 li
139.754 354.56 li
140.105 354.56 li
140.105 346.18 li
139.754 346.18 li
139.754 339.895 li
140.105 339.895 li
140.105 331.515 li
139.754 331.515 li
139.754 325.23 li
140.105 325.23 li
140.105 316.85 li
139.754 316.85 li
139.754 310.565 li
140.105 310.565 li
140.105 302.185 li
139.754 302.185 li
139.754 295.9 li
140.105 295.9 li
140.105 287.52 li
139.754 287.52 li
139.754 281.235 li
140.105 281.235 li
140.105 272.855 li
139.754 272.855 li
139.754 266.57 li
140.105 266.57 li
140.105 258.19 li
139.754 258.19 li
139.754 251.323 li
148.187 251.323 li
148.187 250.276 li
154.512 250.276 li
154.512 251.323 li
162.945 251.323 li
162.945 250.276 li
169.27 250.276 li
169.27 251.323 li
177.704 251.323 li
177.704 250.276 li
184.029 250.276 li
184.029 251.323 li
192.462 251.323 li
192.462 250.276 li
198.787 250.276 li
198.787 251.323 li
207.22 251.323 li
207.22 250.276 li
213.546 250.276 li
213.546 251.323 li
221.979 251.323 li
221.979 250.276 li
228.304 250.276 li
228.304 251.323 li
236.737 251.323 li
236.737 250.276 li
243.062 250.276 li
243.062 251.323 li
249.387 251.323 li
249.387 258.19 li
248.338 258.19 li
248.338 266.57 li
249.387 266.57 li
249.387 272.855 li
248.338 272.855 li
248.338 281.235 li
249.387 281.235 li
249.387 287.52 li
248.338 287.52 li
248.338 295.9 li
249.387 295.9 li
249.387 302.185 li
248.338 302.185 li
248.338 310.565 li
249.387 310.565 li
249.387 316.85 li
248.338 316.85 li
248.338 325.23 li
249.387 325.23 li
249.387 331.515 li
248.338 331.515 li
248.338 339.895 li
249.387 339.895 li
249.387 346.18 li
248.338 346.18 li
248.338 354.56 li
249.387 354.56 li
249.387 359.914 li
/0 /CSA get_res setcolorspace
gsave
clp
[1.00217 0 0 -1.00217 0 843.493 ]ct
[109.925 0 0 110.226 139.233 482.137 ]ct
snap_to_device
<<
/T 1
/W 338 
/H 341 
/M[338 0 0 -341 0 341 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS cf /ASCII85Decode fl /FlateDecode filter
/O 3
>>
%%BeginBinary: 1
img
Gb",kqmTPTQ1'c'0-_^t8LLCcC\rq9)@\017"JSKO&h&QPc+U)-m[T("qa9Ia?s,rGo_qWNsu,AM&NWR
7VtjPMFa5l)j0(r4[u?]miD/;\U:EIeui;*=7+&`[<GW!J+sF3kLA@rfA(.if3F@sf<ps;5BQ:,`a=1G
&4212>l0pqNk=r=)OHugV&IrX7thKu&TKl.^&L")`geK#Al$.L`_BC7&OM;)`O+"!Z,V"Qf\\#]F'/t:
W";;&+rr7r]B2d=r>Bp<gLj7GpmJZk-RAPYW&)*[U%@]eI88PC/=neAkgYI:%pn)(l,LsY0DQ"/[h[Wf
[`=\^mI7haZVS4i1@k@?<L:\hkg#eapt(FBRJ$CEs*iD+)RF;m`ZpDUs+OhI?9dQ-=*H4ao[soHNpJcK
m*MB^Iei4S5C;tKD_.H/;sDV8-*ZLf/ZZXC/cYS6J+<QqIrje:MrmcMHd2!O.ka$\hP's3p=nQ.LN]eh
\7+'b0kH]H8moCSCEE9I594u`*nkl(_u641ro&I83aHspfJ!45D4n%P%<ZlVm>F/+p6Tr@S6B^KVeu7L
Md$rns8I$(@ojX1nC4R!:]9tubb$o#`f61cY4:B7]@NN6n\U-4q;'-UbKk,%mY1u8)2!EBG+$JUm6^uT
?RO_qp`HkMrr8I?>OUct/_BrIFOR=@=Rj9^nNQs(HdBCHqk/sJf,)Z&>^H4WD9J(7.k\'7)Uq+=/\g?'
G5&Lh`c\]8Kf,6Iq0DeQ\S%.4c>J4sW*d;gi?)s5If8NLT!teMh>Q6/-F,(n&PkX&oIKVkFq!."_"P1f
TZMRog#_p^[Rf("j3])5f@&5!1Mmt5QqrQWMMCQql1/oUFHh,k:OLSoI=GtcO1=*9%e"XepVo]Uro't8
L]6_!$i:j^NJq`$^JBm)E9rYS&+;`iF5;L,9,F0_l0?H,T:qk)a)nm/j!1];rXM#Fn,KHO2LL;Snrnbd
&(u1!3n#E\0gp;c2q[HVj1C@S=g99&%t8uh4nI!q^*U>ad5Q5c%+dqNs7nIO^NKIF>rtf1E8XZ:@<D+@
Z2C2;>.-T,T\S$=l6LPWZ9GV[ri]5WJtL$-r%6$=X\Qn7*BR_+[".V@mdbjV7pELhHdbTr9i?4:SsfEf
<?CFBpmMLj?<#t]EL.+(H$#31%&Tp\#Cm<UG8o^@\E^pLgm@Kj^!Sc9=(rV\&cNP`'>9"Jae1e2n'i_6
O6/l:a6/VORJXC-a4,Ok!:?NS%&`tSY3@5QTFB=CCM2-gCrH@Y/V!(c#0K_KP2uN8*f0\Tmfj6[1MAT<
1k1&=iS@Pj-a8&U1=4TcF0n*a+S?CPFXf`sS+;$4;psj(D+$N/2WeY$Du($A91=Fc@c,?bfJD[;0@S<q
k>!,qnD.Bfk\6QI1?N+ql'f@MYJujbpf`Y-0)B;rhk,0]Xe*82A_#o2*o?VKW=S]Po#^FLU\oVfP:J;`
mGlZial.$I%HZMN@/,Qnk;-I2Io381VuPjkIa?oV9rIkcp(-#-p6h`6Dt>2fSf,.K6YuSQ?TiJfa!X=d
f>^jhm0ig#rUak(`dN,MSuG7"hDtJJea/(jn@b'CkJ.Qif1/>d8""kiDg^t7j"F4,*S`/Z3VX)u5>+-F
f)_J6HeJ!p>l_#Vb,.)bZhJ9Q#sL@mnB\HjCJV=F/FPQX9n@VV\'7etSi9n$C^iK?5P#B[9UMLO_sk.6
CNt'YPBY,m?pFNpT##564jI<@9>4G:qs%bU*8'f"phtT@YD7!4GA.N8:E.p7Anda*F>O?Y%V=ai?U(dV
2TfFphs,mFMkJW*8brplCs6'dY`6]VPk*q@-f9Q:-2fs`a"r"J]stA:Sd!:U`j@\KMo4kaO8?NRN:f.-
NmAK7ht1:*OeeVIDXr&`SR_X`Y3f`F@+u3%g)EK9Hf2HF-Z+L.Be)X9G?UJ&Q9IMbe/?EMpI*[dB`Bc`
M.(XQgllqbfX$()UTBBT>(#'@g?C#,U+_P.]7J;DjVRnrNQ_=`06:S$0]5UAlN]ApJ*5?pQ3B#!m6p_1
fY;:J3:=EHrd4VPhnsnq][%V;S%j>_&c5+^If?t2IC%MN(\'%bG\:XO0[His++Ik1&&K5ReE<6Dn&@0$
j%Fi?(40rI>f/Yd3P4g/o;5<BZmj<AAQ+D3&%%%.4>ZB_V*,cqV7C3Wh=Jpb?$>PIpC^shr,OB$M>8W1
R*\g%pTue+"&3EHPdc\H$eU+rSq#3oLHe.1/Go7D$LOC-TB7'g"o?NMT=q78YpgSer@\!#WsCc/524e=
dV$:.S;sn``#8Y?'O&>\n;RhT6C`eDH2'[>Y@DF%G$jt7=-YujJ+dI=>afHj9tRRZ5F)36<@*PtU"8D!
[Va^D?T$2.`Yh"qoZ/=MFHeeX:!4?&;**D<HZ1.qFV!;N95V=@p@D>tg,a(7bI.+?XJM4gL8pBVVX!cJ
5tCI=fHZMH8(igtb36k0da;*_)u];DZVt4$>Go`4rVT[VYpHm2k!l[^9A`,Z<H]7[7\5(@2Qs]=j4(BX
:c6Tsg2Ln):BDPJNqCuYcYf)0[Z\]2q;fHVIuf$$/jn11j8Y);_dd30+'Eb)WWkAt2Hd35Hq?/YYJ%$g
L.t#skpZF$=d*=?=ZY902KsQ&N`iR3lHAl_H0g^7QgJGVputjcHHm*!]uhrpeZc^q8Tba:8+3s%P&rM\
D4NSWom6F/dH'iHg"StKLpG3#26[Cqaa1YORTc]dpmY?E9r"JemG!$['0j5&D!>WSNZ#l0+Q'/`]KSO;
45iPl?'_MK0c*VKV7r7$Q7@G=MGK[17kOF+3nb]ph3.6V8mWS]NrEYfC;s"[Q_c0>$Z)!h*m@\ADd@Nh
WW_jS[,Ei&qTtf)c?S[:Vsfh02TRs\!r5U9jRr%o>TC[mQ!K]Ui1Y]CrEDKp5!EcUBlk%kCQa_/nX=fk
n'm<:p^ms(9?Sq\<Uf3RZqmkCoC:;p.!qQ,h_\pB=R##Q5%>n#n'm;OO72aZq?=&[,43ip&<&nMX/"`5
@9uqplF/]To1mPlF!g?=j?#6ZV10CF26abP=`fmN-LqO;8$g6gL/E>3K06Ds@2'eea)g^If'JlC6#NkW
3m*mS^8uGK08AsbnO`?/8$O6IZK?Ok6MhehGkOjhZYpE!d?ms)ffr*S''Z?%/<\&&aaV'I5HSD6l?N"s
RY,?_\[/U*..;gL''Z@@HAJ9.:N\en4;h>;X5fUX6uu06R)cZuUhOrch&qcjFOXChZK?l-2a"LoC]:os
na)aP&#,)D+g^G^TYlDbUYb=QN4\TPb:ZlLGilY;Y.$H`I?Wfdl3-jAB%9cVd2CPA<I.fj`-Z@BCX&m2
nQ[%(S/:O']^rCSlq?YeCjmUiNhXE!k=d></7mf],H&1MFZfDD.sF9"msPS4K5.Ksjj?rVle+3sG$2u+
475pbN;bgiPr#b,\*dr?W\O7>7n;5sb$P"Ob>JL*HJMA<H+s.q%?3[P@l^B\c*9rFFk"^r0"WZGiiT!0
:K!.3.]1>&09M8Qeha+sq=)s4XbdaeURKBtf29MAqWK>;HH,YiQ_b%4oX^Z:Zks_j\rIO\8$'BMNP6[!
Nc%t-BZs+r2GPd7/7mgHQP<q:N/eBoN-u:%^3$_:[ilco<a@2L^@rO7kie\cjV:XrPcM_m8(mLPhP[[&
;C:6\0VkJ_SG=NQorhGS\+S.r`Ud[Or*5h;qc(460mgY>4m,`U5/)-G3S0I:1cn/$3J5&tYm;?joXR*K
BJE%JI?9Kc,9?GI3a)s?;'2U/r^]QX.3cf_FL6$_Q#ni)hE%ZZVIFXHlV.<N8i_%$cK'\'/i)[)0sS"3
;=,GW!pq)3AmLR[CB%rZ.%[CT'[Kb'\tli4`J#(]ip6R5Lp*/*qT!\K7uN4`Q&[?O;\=9<kj[;]c5YTP
b2qE[?:F[]r)(2+@dqY`-lm1";9GAp%rWI?+ssVI-pgFHT!e.J(P,(?I-ITu=gjuNpr11k%f2c%d.pB7
Gb!*%B\0hP:T[aYEfOq=ipAsVlZ02gks$Y15ooD6"6u?om6?Yl^4'J5D(G%GkI,T?(\+*C<%bI;T"^5*
]%5:)p&93+?VfLjFiNA%`WbhA4R[^s]o)".S'J[Hj#NHEqGDF(b/W.b*Z_(ARPK>.l"):_cgd"6l]thR
ZLQ_:X0\nnGg="'De_Q7c`3`RY.U\kLGeeB0:-"*ZLL''f)':=?H"^D>B/SD4QiARIAQ9c<InQ'VmJM-
SC9tuLI\29IQh9SZ$X0AV[oc:Rl[-^;!OMgco9cBGBtSV>rr"_g@`lk^H#$-ei3(<2ensp*RB1<I8dI(
3+FCqNc&%7pl!(D8k8j2fG2TZ^iPK@q]$Q"bo<X#C1+c$(*3A,PE10F4o!H&^HJ4CKAXIc?]Fb>2XoFY
YBg$Mpe^jsXVmHo7t:?i\k28)Q]Cp%6'Yfi)39#]c':-GZ%nQf_Rh8//6*k'LGZ,n*^-fMmD:k^L8:Sn
D,kpQS+.=WC4Au7*p`126kLA<G$1hsoda0eo]-5^534TKd5i>_'BeOtN_\8=W<s^<cAJrF`a]KbH_+F:
pr(6^r2DM6b5BC(hAb=0L.Xu%jPB^/Yu3(nH_9BZ2rdc]PR"r<l5;>IBlnIIinM3:RtFr6OH)6?lT6Q@
Xqd!THhmH=jP@T/SN!PjYhXG:FHj1ZOH)6?lT8g^e4STrNq2_8alB/f:9`uUkAh#a08a&akU=.n5,iY2
6!iHj1D`hOOiR3YNuq)fI3Hb('b1.*F/3MlPg;-dP)_HAlT8g^'MY1/)>X'TjOqGD4jMHZ<f`l%rO>K5
l0++jYHG"XZXtj2D'k;ZlJ.;2nn=_Er+PSNQoE<2Xn(LAK8q_\\SKL?6ot264h$sWm]/F891N4.\rNbp
;ET6ul,^o+-gOs"C`3aDau\"t2Ec(P&fhuq^Z'hI4.[9B*Gm+gQq-2_Gd=JfBT8uS=o*O!1`gb'S58Sp
hY(=i*W>r!m>mFr8NPQtf!m'oEGSF:\0f0L[3nV>0:Tt6N`phY[?mNC<_'&^\74[OL\j:^LU2(ZROmJF
mrQJFN@aD=A^9>p4/;\D-o91>Q9JYsU[_GMI/MA6hE&!FN\WPN5AKA='VV;7?g8JVT=(:F`:i2cKOJ.0
lLV)7E6iElf9(6h<:o#ek-?BscXcaB4[ds6aGj^a(DcZ]b%UOD?(!;Z<JE&GUn7JPK=XUD.HP.`!RJ^Y
"Dn@E)91>g#W\)PY!)_Fr^Ine)r#R`pU+_u3fD9JB]Z$b=kTci;7>N<K6E0Z0m2=?72t1a7Ek4hNc'2[
g"-^M?[GL/*Sn2Iop(V/7k"Oc%`4Zj:PM#W=8^;;+\kP<5,s*&0;C^l^2d$Ab3[FRKA(*ERs3+>mFWe)
N[K2mSia$7@4dGe^+eMi(%mtS9ocP3mji>R9B3?kSR2]W&tLk=%-f%AqYZnt=FA[]<m%!WfLG5>K5JPK
QMQot[V>Y4O'Fg"b5<L5a.OK^e%RME/W?aV;4;=Y)1Jd]O]hQ3e'[X1]OC$VgWsbUVk`^q\b!oJ(4:$K
M2ka]:,u"gXBc).>1:E-O)+7fKA(+eLi%e;1p$tXSVp9"pIF&5rE@smG;9,o>J=M]gL<flCA!m9_V`e#
&(8ZF-^ji>gQHarZmC4&C-3s<d<$/9A@69C5!SF^WkEoJB6c];-1d1ToF6us*bV.B=mJEDS3,k(fgcsY
UWe]%cO13I./)S%ineJ(D*)MrNR@gl?T[(>3aQR1(<u;m#/8F]B^UeNA7N;ZbG-$E>D)%sBBj9&?.8.S
LmhQ,SPg!'+#XYaZIe9;UMNSoV>g%tW;;mYcYkaL76T_fnJUrWD*29UH`ugrNZ4ITmn2=CIQj^*`-\Z"
BE"<=3m'N=*CZUBj*Z+/VV,!'\UU2j7[4;2;u-jD9O4L=iBAIMGUYcDLC`pcY8M!UrI,54D*4n><`cF%
V:f?O^GgB%KNd--/b:c?dcu9+fGA$ZHn9)m*a0LW3Z\Xj^ZW><o;MOeeVEn9Hro#K]#qec]O:HocZO?i
:DSq8q=tKWNRQ;,p2.M]h'=Te%ddFYOn5+JV-\mBhlpNcp\5Uf-<V.1EFdl7BJONi\nq@CfjuZI)r"ar
)[Gm(T2+`uX&C,=gq&c#F7Rs:rZ+/!D55GUfWSp2kVpqni+$2j:Am$:qr#blNi-c`T1b`7o5b-CqC28g
lp@8\(T":?+$WLjhgT:oO.LfBku[(i[-st3lhdq9o?@!pSZ\YNs2D.KIn/DQCZD"(6GJ+X?[7+LbYE>u
&#C?uqjDd3g2U$jdFJa'I;G,_Hr9Ti17iu8Gl@=&`q@/qpsN"_KW#QS+&-gZLicT%+mMTgKb,FMdSV0@
aG4k:#U/a^*>LnsHq6b]&0`4E;://JC.sHM<A&!-Ph6Q@3D2m&Z.R@6^=P@lM7ra$\(kc(o%en@:7MC_
_#NZ^S*+tk4Rl+]GWkF5Dh`]7_:[ntc)\i2\W1nHb:TETO]Kh*ioZ$t_7#k,h_)YBPN+;9,@6/37@)aa
B5$(skE]G/1'uN)MsYoj^m<`RGFbm"qSo[tZura?(hM_!<*(%/9,;;uD24`cEW4&jGJDPi>0C=gNn<<8
p]:=7ruHjnflAs(lPP$a^[ICWX-QQE`97HbH9UQ_9u0$mUSG`%`6&`p:H[+07lS\Me'T1O*r%eb"l!m$
^$M8.r:;&`PWgIt?CLR6c/fqjB+h&_Q3X6na'Y/4-(+QQW]h`RgD6'l-s5AP?c86D=.UesA/,F6I%m^l
d<9#kUq)o23Qu<p(!\>[cab4'TCpO_,MYN<\/m6@027Vu.6+I@q@CF?DS9@PW@QK5?sZ1b?)OrP0K2`g
3otVtk!9=:6pqi;c*n&Cc)e>EchcV!>\$.KS28M@D^!Fm^5b>O-Hd`-%an*`89=cN]6rYT]Mb&.31+Kg
(NV^YjncC\U2^&<cB$tOU6f$RO%)9">WkLXY\b-Gn:YkndU'%?i*Uq.diYC-n!<Yub[=16e"L0Pa!1,^
-RG;/h<I6b5Bbb0+O-;i=j@V:b;U;&:S:p)e:c/#$(j<;OV9rR:=ljc]**34Rgr<IK4bNn%em7cQ=o:U
9eXCEERX"F2'#+5dF!.'9IJ[7)-M@1XA%qR@1C#De-2Gslt\X$eCl$:lUne\"mg&V\2,A.[s?[ug,"u"
S:qh\?HYJR4uXn4[d@ndNo4%ViH&GoXJ,.Z6IlD'RI<l!2e?^pS\@1aBC4!CBm5S;O<j"!L%W'6ZOYER
0p))+lQGsG_)&72Ff4&`6>>_!:`Bl0c`Ku%T:)<G0@QN?&1#Nr9`4kb9rfo<?EZ<bRa),F2MgU8-eb,8
A`jpFjfbLD6TOW29Nc2dcGo5WSd,om(T'`q,&Q5udH8nckGYaLa!sX.o<F0"m5_QqI==93ST1'pSd)UM
Yl;;6h#+%EQ4(Ioo0RdAh@G$MR^uYoH(k1%g:dlNDY(P:Q?m1V(mY'd<Q'"/c=YN#p"@GJT%*T/rq7ep
cgQ"^fI-(aarl7icC7#fo<UbF`A?J6/tIKUF>STND)[Bf2(3#&S)ibA-`b"b5!Ks-FSEdF0'59Y,Wa*D
p$C4qNjb+YDPj!))^P!5-!="\jEQD=o#r2Vc]88NAc:O7$ZAcS?dH9+DnZ)@IF?MDZF4!5:@YPp^tNRi
CU*+H`.k'6:OU\3Bf,$%CElcmI75>#]lEVn[CK9$BJXAr1l&'4:S$(pZHH'5Y\D\%($ne,02'u0W#F:k
gLRj\r>GB9AXB**9YU5+RZ=8ep[lStdA-&*OH)6'\F-HMkL#3:-#`gH7ka_,/9)"dXo4mCMmCN&2=A5-
:9B";USI1<>.+.601\SP0\0[VPP'7H4115q^-hK<dH$kecrs?u[J>j-X2_$adCiabIrf0!M@65T%J&eW
k+,\tlVD90,auA,Lu6`8(W%<34?dONBlk%r'VA>cg)t*IOuW$X$hPZh`h/"J9:EsYO72mNqMeZrSEU\c
jhk^qmN::)hCBVK':#UM/Xglu`FHSeo-MY+o[iH%_#Gmr/60O+4^$&FiAu!=91Ss30K&=[D\(*Z1m<,)
*u*<@D3$5/HM#;([0u.kOcEc+[uXke:(9>*T:l"CB"\%_`Af]Qc/\7r2_g5NrpmUBP;lo?3gq\AE'(Ga
Z%87&n"n)'6CL$>mEiLe"7u&hkU<^0`03e`rVT3G5oV(48#-e>F4^ADQQN33;ZlWdZKUMLjbpnKd[lHI
Un`BeZ^5k-".o=W2"+\iF"PjV%+YrN=6&/JdkdP%:X1>jQ]CpM;pRSo]oH_eeJPZRkPC;2&iQu)Ot8Z:
45m9g6.\u[E?jq(G>`UPWds9B;.Is6Sni3^4#LEK"AR+7UZ?IXqE`_1mr]&a74GiB<P[(=eG<Gkc[5g5
44UUHP2LVZBlk'Y_t[KiALS;]r&8o]UA>&>3DGK!lZhb:27*mg:2oZ8<ZU;u>A(mH'0Z\HO)L7=dsm?_
A'd9.F3_p6:rh]jo&qKNfWmU$P[9Y2nb.)>a6<!XBFJ(bqs6Q7K4rJojO$iun?WqGm';k4p\k]bJFM/R
NBulTmD1_r\N-Mrp3>*bW'!,`5("cj/7mhCURKBtT6&RILcXBRWjAgsA!s-fg%!ot,9?HLc]jI@nW&Hm
N]+p58Oog[QP:D(YG587WT1[i:A]'[FEGF+7:V,_/\<QFiiStZ>;!o"g6_,D"3$!e8%nDP3L#O>1Uf+&
3a+qCE9V&RO-5Oc_gCfX3a.K&%f.6;,3F]XUHU`MGi$Yqhj<N.UY>$9N/i5!Vd?,(*S$UWFOU\:5=[b<
N1Voi3a0I)+O\[">Yieqm!-jg8OoVP78QCcP)`.)]o\9N,9?GI3a)s?;'3IF2G6Pgo+DpnY+t'l+U=%j
4f+p5]L(&oHt](mT-E"PT][QL3`@bXX>?ugHeoXD+4tU<fjuTGD]O7BamE`S\p)V_AXBGk["$St,'6f[
Z*f)2$gkk+LO<1a^%/i!T^/QMi>7..\Wi-:6ZJh!-n_kD'Gp%q7pP76X7$#QrbZGjQ!K\2;4\DMPjbRg
Pc)GAja6R7>=UPpmsD2`84Vujl_sC:2=dnC8+WE:cMi(W=ceZp;''A"4S%HlDI,2DGjRl]Q!K\2dCCJ#
Gjfe)?EuUQ=2Z2MLWcHfL\GYSrV2NtS5j`8b!bFJq;]/sXM&.eFO$FA<k%Y`..;l'pgoeg9^KDWYP[S>
jZ8uSH!7h\6[P`eHe_8,%+MPe:*(GSpr(84):r.oH<JD/qb4FaO1R,/a.SkOWT+k7X#!lDf\Cfp*Q;Y.
Hf:;a02%^Xk9JG>a#]f%:sG9TnVhD5S9"edCfVQFL[go>>t:;)@\1[$?<UEJi44<7\WT"FqoKO*dNFqK
.BSWY+&P6->t;_H^0Q/7"4&^#k"=o`Nh*OAY5p\o@.rYT3r6dUml[*4HKhA8N4mf-)gJOCBs+7lk<915
-ttr9A`$B$*SnGUff@!(8k8j>j0YuE^hX@Y\WUR;o&V>JZp?CC.BSUOf^Zn)ip3G9IWKd<=)QqR#1ZsM
1LBr$Zj4>HD&/a!MiRf!i7:!25:R]H>6e.MhnX#W@M(WqH5Wp"$f:&3oJ3lL0oM(GhGNO9h]>\7LG\&M
o4T2K)3=I&,0h7sASf[f=ri<\*ut%i%@)tMbhj5!B=HL_Lqh@4ZPeh39Wa)Y6JJ&Ym:E8=FQr^mL>I?$
a)^EXZQ8Z(XmqF0l3BGkj;NM+it7&G`&WLa%eD!jF/I>^f'6CNP)_HA41D2sqH!1\/K0+.PIGJX4FSgA
^7u.8dEu#b2br8;I.8#LUB*I=m%Z^b8G!:8k;kI!N$`IjQf8oe@K.`u/WGc3Hi)L`]Ed\7K=l'Pqn0Rj
+]"TXpbS@$CN#Z^O+t+?dF$q#1cidh@)A0F8Ol-kbW>3g*+\U#)+/0:),6])1!S`K_cf3?ptEp;:SabD
DjaVs8(mbb*Gm.h]T[R=pO4<I:T<ks1jSAUk4,348$V;aF/C;4dAJ'lqA&-_V5(/'STiLgnT_@ZLFO?%
*qh\Da(4H+Q%Lb/FHi/iD3$:G=qVi%2[O7nda;+$k.jjMN$iCI6KN?*:Y,HHMA:sP*G++AELoaDo]1e>
hdA'53nd3W=Dl[6p1.n/lC6LkV9daWZ?X_n1m.PYRj3pAdG&;.Wp-JD_j?BA_`.rs9J^#?B&07)7#ur(
DI@=]*UH9%?e_^]"^0Q,2uBJV?%BJS:,_2i;:g!WRFCm*h4/thDM@IE*DB@4WRKgAMk2<*I/*.OhY,k<
Dk5Q^7n;.6\DY>gFZ1#.UXmG;m@&/`hK9[t]uVW?L:.cgH*DYTU[UF<kKa?(]12-EDr8ihb_9IIrXIV9
cQoKZm-+jabPm1KI?,EHF-1W@gZCZrVQ_[.=2;.]J#dcjoaSV!A5bZ*FfjJdn).j0f(hGolo^1rDZAE3
OjitH9jcqgs1pP?FHQE<AZ%.XG3W,\0%@]_FYucM_JOhnMLF@<ELqX2FS'48*k;F-kpXlu]MhiO`I;D\
aq<,k.poMd8+eD"g*V!!qE3Cn_quE_?N*^qo$l-qI<Lo2.lq*^ZoZX\IRX"M[)mK72P%f>=mVX/cd1T0
=[-GFL?W5N(O:Hnf8Z/G^4Yl@5P]3hP\4Dfdr^mgV(^,g")6m]ZAc3,T&9AQl@N`Gl(U=*'HP),n!S3#
?+"lMq5bU)09C;"ANG]%MGMr$7o+QCs3ho7?Tln18$-&oTC(H=+(M`0g+Q,l:j^IE#hDq':/as;pd.R;
-MIo&dFsZSV,cF-'<D^QqjJ":dag7h:oD#6Hc>YF2M]Zf\P9.i21I5N#MR_]2#U.30gT&/7,>72N2l&%
#kk1g1H+C$EmQ1%BrgJHF/,?I+$FrK\4^:RoY`g9,Jit<9h2<ldRO#gT`8G1Og=A<[@ZB-K^1)[KQ>')
!D2J:U?X*"j?*/I^5Mj?lZR)W?df%_Q$PgRV9O_[C=5!^eMm#J1mmU6VnKuSl%d[uecBSQRB^bA+%k#F
8'On8+&<tkD8)A5Ter-DNL&-PmW9JTr9`-!G[;e6p+,U"IqG42mb>>L9!0>'l(L3%S\]cS@(kWmr>s^,
I0TCUbR49?hjJX7NKp]l%;fE/(;I]B&,5,_E.'sYmj+QMfE/_of2^fpP-fN#S+(@dF)<I">Goa?>Ph.s
A]>M<!8iZ`q3g+fNE*cSeB+XQ*dt3&TBQeCZb:M6Js]C,&H1D[dg,pL_"P1f`9HLE]hcmus37*1;D6pR
q<@c9=6.pMK3'^Yi'5Xc;7EXqa#6LumBQ\jis5T!^EIL-0Z\q5lGpqh+6dkVFn4RfL].h`/O!:Oq=#Gu
He=(aHLea:s1.+)HcEGi4T5AR)rs2s'=;'ABme<lmiVIg[pOT18NVFoJHars3'TIFfN;e,RKpR`l*ICJ
U282t,eg)>C3tQmqD@Am84S@FU5j=p#U/a^*>LnsHq6b]&0`4E;'CV6LNHK$+n?cs'gd_(84SR]8R1I"
Im85B8)Kq=qQoksm)p[[7&SA9(NRdKKkG29@qW#CV\jgA-OXk\8oBr$-)dTkCAuG6Yr_aYf608CmQBhb
*Grc)j'UQMq;tVr%WsnCNgMk:F=_=W@eIkr7hm.1KG^n#N&Z*)3oq`XFERO%`aIRGf*kj<@MJ$;0ErC6
&V'EKTre\`?$kqI_d!09rc9_=aY,A^"CmOM]D_-#T"4<RJ(aeGN9dX(eBqcEm<jfhUORN,GV;'O?J;`*
g4j0s`XHV>+0LqG2n.tlPo'K"aS&+c?#P!4/<>P)lCf/L<`apaDQkAZ`3)CUM;K\c#<'N/(0cM/UTMIl
P1.2kIqPrM>cd%<TjEF_OH\hJ[QH99nk8U:iBFskK=lK[fR)dVYPFr,ji8`<%_'WNBB+='1E).:dRR1'
Xmb`13-!)YH5BX9+jCmk;;+9`%+\GFCO&AG_7l/cnkE>+Z='i).'60aY'$6mTV)/=o(M`D:,4%H=!dmT
b=e5pCrWu+"2jp\K"3W5+dZ5/Y2?0A4uf_&r:#dHo#9S\f=/qm8)Bf8q,*(!&*N<FeTr.#1XF(umHU;=
6V5#4nenk4N9PPuS;;I^Go$Y1't,@S0l=\`SL`/Q(R65sEi"!Om$'?r9J-3>L0U!XcO`c**XLnC2r1`D
l-o_qT;HED7bJuc4s\DGRl51+,[G'JPfpV,H*H>#077A"SfH$Yl=QW//V?%q9qurVl?bJ\N@-l1,E!S[
F<bukTECK1]piZ4"M[1CR2[4-PI+t+-gC6_g&tu]%bUS6h)IJBr;B44`Q7?="a-'9mb6cBIe]L=c=Gcb
c[(#D^M7sF9@R)q5s8n:S\l!aHmV59R1X`%?eW(o`&[/=ZVt':A(hkKW/4roH0.TMF6g-%f@#[SB;\/N
-`F^1k68i;LMi]o_0_pf9`"Q/cEck[G"NIG]j[(ogK%8qBKH"gR5YNpHi)L`mIi\;RrCf5Ng)ZO7BP0s
qr8eb4_TWDD*a'CkG#2#G+*2[4(XHp9macW@K->rN-:KK)R&`7o+9F.0NHaiOLF"#VIc9(p2c_s-9\i?
)jlWq5I'5GJ)'nQ'qP&Zif>^_J!9Rh`K5193Cm>g@*hHUVAr!:Xg]\D3%3&,rudHdggtU"q+[nBgUh%i
2l3:OA?D>8k5kjIXCLm?SmgMlA0%GGc]88>72)(.jfH'h3m)b3j+$<,.p;1Mg9mnG,0u]TR^K+\,O:e\
qYY$R;>-()REJ1]6IB';Q&[bdAT$"r_Am8)aYGei<+1foWar5M<LG)6)X&UBc/qKZkigD=44c75P)_Ga
FAHrl8^A4o1i-N#Q>>/`ao7s=b>:(cmFa.Sp%kIsN"-Ka-uG@,%S:g8^lBe^DdU3E*9h,mH04/J4%5?G
5#/gj1jR^2kaUe2at?2L5Y&(.qjru9ka%K,^\l:<ekM<f2FnLj(kq+CU<2HUK@ZJpalDE6es]cN]a,]E
:#8"PoSi16UCHeZTR<YNo'2lqVcNBR+S/Bf@EU8nQ'aLY@a,uhUSI1n7sh)-%FX;aM*o!U1O4CrORL[k
?6<O$F'GX>pq,*O9Uj(jgj*t<N0fQRL;t>Sq+f1Zb]V!NC;ls_`fI,d9NG0G^MV4TqWkLL9!70oQi,bm
l"D)u2,*g@c$9$Ynsu6>nF8ea:!MVV0:4m_osl:-`@#l/FOY4N]mQ_i]_9arGA?'DSsa5pF?`+hB>-1(
N]qRJ]JCC[8k5*.]BhqW4m2c7Q<XSj.)qrHQ<XSjBV/T5l6uJsZ^c)l:]JhiiDJj<T-($iqe!M=8Bj4T
nF@e]G%tFa:DOr[Y1].INjA3AS&q"!G'U*<B:k>EQFn=0l;P@8@/YWK.9Xu&Y0@8XV0tCrlU+ugfj;^?
IE61TgCJP2%i(4V]N:foZX08(7sQJkcHr#NB3lbM4RTn?B7*bmH/*`]cTTDh44Q&M.]\Rb7TaiSSC5SX
2L5$S#LOBq:>XXB+<#m`ad\nJN5eV8(t5er1olYBJ,cJ_9*Tk6K4k0&O$/^*J>XF#p.Y0@hKJD\+*ngZ
4.9/>GAhli@OSi.A`Gebnas_F),J$&gCNUM]_um4HE:V*GubsAY\_^SQhG6c<d$LG`-]4(H(XAHcP%gQ
Jc@j;ipZ0j7g74E:91.JkKP"AGpi&E??(pH]]\,ca6:9V!=_Ijb:ZkaQlhS`8'+]H?Mq+P;C:6]Wr42c
]QI3N+T-@]q]L9.FN/H)e`*:F/k_UWa)spClZgIg91Sqjih`EpYtWTnlI7-!L=YnOS#Ft9s#kL^%;h%o
oB>DJ9@"XRFjM?/AF4=/[t487qV+:4Ed`%of_RmPo0q`R)0D>`iKHo)rI&_NBQJ"'F>Q'J`,6*s9oGA`
QB(gf&PGV5j3bM#3p?J3MU9a:O1-W+8!U-n?UqLNlDLDY1C\Ao04HU*T^-8'HYB7Nrd/=TUQ%FDda<FV
0jYiA*A(a5-lqua=45Jc]onE<6TXLnFL2m\U]*eSI44*fY<gdf,0m0NNr#AH,opjhf9)*U6gIGFBUu+>
[*I`nf/f+.m`f(6M"Wjmk6)UK5'9W)^Q.T,><a,KoY$:=L[U;ti>7.?iVTBupc^)YZksJnlAspkrD?gu
&'@gK%*DN.O7JP1j.W6jpZ/NQR_,c`XeX%.kHCZ'RjT6L[\MIQUn`'sa4VQrEV;nJS:/bp,/p3r7JtQD
,5uiNW6T&(3HmocF7/tR3HrH(pRJk9Qi,dC_tu@:0"W*7idI]-c<[U5H)@dj?*;(+)s_?@Hq1jYlb\jh
]e$LM%^1<E][>!)>k_"e,+c%FlpYJ]C>!/J)c&O,$V=$&fjuWPD`b0.T=t#2Q`Fr,_h-R*1[F9(D/7-S
Zg.OnQ<fNVnXOsT50#^UF)Tdq=GM/2ju9s@2sBeT#4ldam[eVl<ZQVe^m<`b^?fm)%<c8ge)Ob<=0CRD
:TS^##+kG)K>)QbY^,603f5#&l\rYd!tEu3j'M$2lZhi%:l^\C?=PAMcYGf#B5F/>8!t0`14F'(jX;(o
)#HVF;.=diFX]gP"0]3ejX=gSN3Q0ZUD'fCW7L*f%5#13A`FLIVjPhC]_W>]KJr>b;\To!_"s9H3m-.u
Hgml,Id7j)KAVX>*/F7G2t39rclW)he5<S,MiKuCkI`V7kG=r&l_*P'S+0[sdp,HHYOt!%Pr(l*B8iE_
8%5[.Fq/Soda:)sHUnkndYu3f;Yg+4GjQZ>O5Go`+\f#4YDd@h^1#]h1"+H1*cl:ha(r]45F7GgMMH[6
+2=42]@K]p5>S>Ta528g4+!QpUNJ\HVa3PB-&dWJV"h/po#;h%5-1#Q4SNPA9rk&]8)l3b=$$0qH2Sed
eOPhTmu`[g9&@*Qq=q'GVPeo9USIHmpnMN$FL4g"52&)R7)+i8GES$E9&<f4o'op=h_L1O54RYpc[K`g
k*r3Bc/eDcME!8m+3<J(aiBGhmiHfNpoUd`l(b#kUGl!IG%)ITYiCT1XOg*8S&s\P.0j!4H$h"8psJ0I
,:FYK'm,Zu]OpEFZ]j\<>;&3h+8\R)UWqliSX:'uDP6>O</j#SPC3:QZIUu1psGb0e@0q_qUcNSFnF`"
#<q6Vl"DkUI4+K2B)Mk@U"s=K0Cd9(eSet=s6.+MB[G0(DkAiXgL!*b?P4BmIFb2t%$[<p/0/Sh2$]0,
Ap^iG'%C&.nRTljW*#0qcquV3+7n40cgRg-,O8E9_#1-Q1n#sMiMrC7aV#8i32ZC[mIM(5'TJ[0o^:[T
&,u(LR2pF7H2CU"Du5-.1n#ukm&O)EH,o]/:mG\9Op@kRGr1o+24GK-nX0<r_0fG]3p9V7:te+JS+BE<
=4f-agH+"%pg!UJU3$1"NrEkD,F:YC*Bj)Sr_IAaIZZ\6*-fg?biL+T@68gZ,<p5&4j$4<gRB5glQ05?
clU8@*en=4c_0`(T7Pq6cn"N[s&"IKf%-0`5?F:.]%>dYb!MLE)eGhHPaSp4ZN^@>g&m]imo2MS!t/H@
XJKuFeq3[bq@qLd&%e]E(\Pu_8Jub;AddHsY[4'o@Cn5fQ)*7-\a[#^O8EsIqd!;Oo'AXr*PH76e=iX-
G-5\[UPj&Y20@iKOV,dsS5i'n%rlGK>_``g95+[d1Pm^TcDRN+Zh']4J\LWtpg1=aRf-"I9i)@QFYDCF
j=P$6?@5!3V]9.D%6am]->Qm]ZY"krGR%s\\tCW(LZp'qTa^jZ1@TKOf8]CXba1"*,,i-)7Y8'ClR/L!
Qd7G<U*&CjmFcb<<]AE$X.)5d8%n8BBb,l>K'+n+i-?bede=_DGF:J>lc39DX/#R#Y.bOskU:Sil9Y2J
UY9rO`\d(!ag7\Mp5Z+fC%mCY)5ejaS$Wdn^Nh`/OZph`62ZVQI;0>sqb*MBCL'Xj:@C"M5TL4r;qRCM
g/",50>llWgU<Z]VX<t:bl^f*nX7;n&3c3OdT'ZK1MmDaK7E]bhac4VTT9$6i79tjhD>2U3$%trOmS2n
I*XBW`p"m0[_4oA51=o$.^npsJsqD-;?l`pXIZc":MJC>ip%l*j*S!Ng(W!0/A=W>Lo[S@O5ED!6#"o0
U=Q0>qtuKC68S6.EE+?%>Nu[jQSs]_L35%]T-(HnAaQ$LMB6iB[!l8`5^=aojeE;_?Kr*`V`tRSkdJNt
II4iD[F`@].!)04-=$*:q+R='o_=RkS7V-sCsJk!cb'[Hqh"JSIlgasPK(uQlR(5)+7@0tq*!WQms:\r
nGp0u:MGmKHHP-/`mN/j&\H9!iZ@;1FW]H+\+Z?qm"ZUd"a7j#fU;T+1fbY,q=WsK=]S%Fm6+_S#6Dt?
^LZ_s]q@%Gff4t9VL.K$YJl=;kpZ6q2qdpnSeC>]iI.2-GOj)V's!tcrcn7U\S!0*0@A'^5*=04T:g'1
1?!OOS,MBpk72BSn=DB%Y+'P+AO@R>cU7`!CD[k,&*:oLL;!fXV!ae$n'HQuqs'4'SZ]f#ViDeoZdmGh
D"$bqn`/TA:X/^rpukT;886+A3dUAL0E1pB?eKlmZ1Ya;m<`Tfk(d^CJB)"VeuAVB'jF]krGkp3(KD@<
ku0*uHjQA1o[uP#hn;Qi0A3]q_/VV3rUpt_cWuis$6_g<Ni"hO?90Qh&COE!KZK'n<!XZ<+WV:aLjV``
Kb,FMdSV0@aG4k:oGba#BV0N^/Ckt9/5irtZh,_5*@9k^Z$C=M\mrte?fs5ndIn-lnA:JkQZoI%lmY/A
@dbBD3G("&/O,;14SF\_HZ%Z^^M3Ff@NUE6,>N.g@r"/7Z*tJnrk$'0*o?nk"6Xd;Nq5$I#=j_)E@/W`
.=S'&Fjsl^M.:l3c(.Y%3\gIsS;pch*d.+?d>cV3&LGH2luJ>M`IuWNM3TBA%X[%hjdNX0=mh9J*#aH5
:XM7G0.P!Hn_HcW@p+i*E3:!n9roaH1+9E%_&0dl/f<o\PNEf?Rpn>CLE3WIG/_1J'H9df%Cc*1gX_<f
EVI+%aHoE"-ZVDil0-5"GJCui9^(rBjbplECq\Y;OCFWQ@_]$/@cK:X2MBBfZCGgkH>7`GqTZa?7u-YE
bBE8.C&[h9*.)?+J#gQUI[7UaEhW.m::I%-Zs95fd;hFhjg<<Kdr<'g2s4`%#j6Z;j]FWN7t^3"cNVA^
00d51],Q7*BM=qVU74qC](@N3EIH3;[<L5<\anaagtfddH;V5/P17#j3r&kY:P3MZ([GfqT:=qg2D)gY
mE1QgDb?I.0<@64\S%s&-Eo9bYU/ZfCs/W&D@nddauL?)-b!jiJE?=05!?'N`Uu5W*G)mD?H24X)N'i(
RNJpWfMT2Kq&OscROtY4LYJ*UmS9N[Bl^[qabScVY"%LimoDYb\ZokhHp;I10$ecGI7e:QUcJ-0ff#AT
5O'4'c[IFiR2aeA[ZjeX]4KI4EuV]4G"T8^L<jbAgqqWkXA;Wm:SsoN,WaXs^&H$n=4_JSAm&b%SSDnH
$#H#2Ds\Rb[IN`h,9GmX2!=gL4h!/KS5JZ,I+F)ceD-j%rJN_SaaQbW%ec513hH$rqCH8ejDBgGcEV+F
KB]^d&pHN?2pU3WJk\=tSJ"Bdbb6lVM&"PGRZ9.pB3a>.h\50/0comjYA\'sT\d,`B3\`NIO;4WHd@[a
3U\oM=j:(TScp%`gn\'Nlh6a@C!WO"F7,;@;<NL2AZi(8D&PS?ZO5mMRZ<P\P[)M)FS*P7FZ5D3ZjQ]%
K(c:g*+@?b(7e!CDW@CPV/PqqoD99Ue/-S246*K-Nm];[VI'KIXWmPQC$0ZfT%c5<A3Gjb>CM#S,+JF\
L<c8PZ*nj:8N[[L1SM>mY.R:d)C!@M^QA0E`^(hBhZRZ=)]U\F;d[mKm)&RA8`N,tcXlA=S"uf&3h?$"
N\kB+%iT0FnI4Qq=\gUGq5]<fl3fY1?#4C8M2q#[ZML%8lW7=6*Gm.h=:$fS)@c;pX<D2d2Tm)u+<[0M
K8stAkfm&@SN'COBA1).DtD6%d:VU'kc_<tRn&,.RCmU]m+82a5347:S,1$K&U$a0mtj6m&+9trQ&[bd
B5F/P:8"4NHG4\;n"a<Q:&SL[$+m"XRtp]t]C]@mk\"F3@ktFB'M[;piaFZN,+E`Xlu?^j\qt-DPkFuZ
B3Zf)r="a4,OHpo-#5'+U%o>SZl>+q$+m"`d9f)HDUMH6Q@)7b>/ql=,Hm`dDg;'@RP0dt])ap$(<iA?
3ZgO?9k^bQ[#W2@\h(*_rJX6neU33ig't7kHg9)F..76IQB'P<]!",MigQ>+)F%uN6oHV0p5uWC.EhN\
r/1bP8*a^Af,T5]=nhU^,@9[RRP0dtMhHIBjQF[3c5h3(AmBO[l/a<4cZ'FTWlcqi<UfMJ6*ZBSBp%%O
I9%BMSLg?kZh/:&NG"3*`_-d1brtWBYud)OP@^)Y$HT+DeCHK85&tXD*IVYJ`b?BX/K.Q23QfA>HB3Du
q$[.O=58aD_I_1?Z2E0UF`_`sWj0HW+$-UlEg0;CYMZm.K#bRq`0U*1SoZ43V^%ZH$$Nh&me!3S3m.G!
jorm[8(ls_ZRb<I]o;,ZM=M2#VF=s8EERFKo9s#NYiW=!b>C0hkLM%^UlP0j0Wj6SVFA=+$$qt=7u7UR
%P?Qu:$j++j#L0BH"/#p!SPsEb)[Qpk:W[_d4++rf'ZCY=j"a*NL_j.M/OfS9P*6I^O]+aD;"$6:&><f
/'4Q]m(laU6Jm0Lf"[JUVR#_Uj&c,tA^_j-nRGlGAM=$*mrp<LpGD@"^]1?jZe'O5g!h+e:R"pN#CX?s
&aPb2;?&PXp`%nn#c+4Z'VV:ZC%?36b,$DR(4iUD8OrAL`497';1BO`c-)tQ?oH*,UVqlsnf145E?3J)
IiBdW>W+/8l)5+]kie]:pu'uj4jGSAF_"F#Un^+ujsVs[U]+p'Wm/_a71d[?P"/$a<AMYci'l-Al)=WR
"m%+p9oHe[8'/A%aE,TpkbrMcq6tY2-^%2^5W\0t&NZrjc"cjUBl>+7og(WB$u5C>BeLSLoq;X3<SXm0
S(F*bCg$tidH]:/XY]dC^KU8Vl8<*NIk6@U?6.k:D9]RVNj7.6d:1I/8(k6cd/HlaMU55[9Sk\[]52&Q
fGiMN(Qa[RTX`?Xn2_ZD:b9+m=p//W8e1=E1jb>Y3\'#c0dnuCCt]7FDk7J.kbue?nSe$o%/:<DQV07(
0;P@,.$&F(.!N:>g'`.r.l-=$?'4l4r!uf@?a$31KOiP<_!@N&5sLtJ4NHDLpp[qmpY;835fffki,S0?
3iXp5DgbNb>oiCIM4/LO9oFVn,C5_W7qZ(N<QuU;],YDB3PNntjuT)Z>r>\-RhgkJYK<f>$g13_c&\/r
NjA1[\('9s3p^ou^LPg^e]Z%2`PD9=hRV)klfdA%IW-)"8'<MTfm%8(p6*oK%\.c_O*bTD6oHW[@'5YD
3]aqIU%??\?ZnHP`cE]V\;TlYfk%/b??nCb=!F+L8MF4;(*0O?.(TAYAXB0.4Sr`mJN!"T@oV6CCg&*l
f[*pi->(fUf+2].D8k?&#($:dGj\T&c>D.UGkpKj/!3Pa,e+XTMiP*_`*-*mjX;(O[7dWQ2WN=g2-1uk
(((!=7n8>)Zg&sQ';$ee**'da]L6"lp-1C<>WR0!UOA0.C!kG;nB-YelR67GCrp#]ZHH&J4O3`oWoO&0
8&&O'-=rO?.`eL+J5$j(St&tS="V/R$d=Z(8*bEdIJWaqX1pO5B+'C_R-3toHeo:SVT$>3'7Nb]*?A:t
iWAg98Or+!>]ZK`%!p3c..YZM.'>iom0:"2T2nHhgUHujp>JY7lZeA2ZrZ'VhY@eFq3HIs2YDh[4ap42
*W<m&_gCQ?)*]AeD3.6m'k\=W?Je9MEFmU:J0m$YP"%rEQf8o?<'&_UcX%0DH%CDiO'T,R9K)8Rm!3(/
e'1h+SQJC=h`6!nk?@+`1O7Q./@MYH1/s5qo-K]4\*PkL%GB5QFHlT]2+naWSQ&+gXBbV`?Ttr:P'"&K
k)?NUQ>;ai4J&YG-/(j9Rs#0]'HcVUp9iKtePS.;/X;>SP:&OnCJ=8/m:16eODNW&d*[-f-Oq/Dqq:@.
Fd+a1r-R[A.p:.kel\n7=a_E`?S.aj$ThGNj9GoR]me`_*Hh#J=d*S\nEjHml"DkUqJ4(QbcR30lr>?i
T<Gu.s)#n>NPYHmREo>'qO<+AmoXk]r%gG!kgPSFrQ6Xc)lH>!UWJ[cZ08_qlBp*\f!6jiRDGCGH2lU7
?A.fj_#=K)>BHrh>!Jr)I1s1Yfm2ah]C=XIC^PPBHnG*Q^.%KBWesNgFYd,AfaGk=E)?c*a<#r3cZ$RG
LAQ"@^;jH-9h.-,r1h#SEHqHTSTL+opR@I%raJ_cb'Tt4kXr@6-)m4sb\fl^p'[(-/X5F+DD]]2QqgQ*
.47/Oq=,K(9@P]&$2Xe@G%H(QfXFA%?:O0-qHBr?Vor?BY1*E*Fk8une,&k]I1nYrD(#L0$b':*bKi:T
fIjgp:,WQqZQS6$(XrlB?(NRMc?@[66!M?oc0AoF53C,g_tA2VG43lOQG6jl['hh474/tVGLFm&+7=T1
B?R<MXJH'sSo?ceO5ss1=h&o,WL#opDFQ_bRH?8CPW(KVbs(6r3M>VL9[g3Xp+i2G2V'I0-48KD(Xu`;
^[r=FlY9Tf5L$cFYTI?"OLQ"RaWc/#1k^"<k;"XKH*N>lA('Nj_PTV'EpkD\Q;olu@=!h@H1!ZH`g&c5
mP6h\?H26ni`g"(STndX,^A`t4!!G9bcct?9ALR(G-[`SDHo7qo8IDWOg`F`:7]<e2F^(fd7s6*Y\c&<
q$6fDW4GU5NjE_oZ\:I59se?c%sABU6QZ2>\)DV;SbWT.H@i9Z1s<e6_)fa9%,-kWl8;dhZ7YdepS*&B
5O5Y-3r8F=)nrrS-]?!_kpX)6?6!*l6^3UcgV!?.k#[kJQ!"ES7HauL;uKB'0>`.B:%5i9Defl2Q]2U#
SkC`JY+hcF2l`H9;EmD$2pp5rJ,2S$c[E;fosL._TetE3L%\;fC&aEiINhnV/2lU<IGQ:PFgPmIAl7K5
;-qs9ji7lSB+np4U8)BM=rO<6fSfSC4El)F`^_ZD52eD,G$0`T^*$ZFYp]4nk&T\KBs4(LYN?@cGi8dP
EOc>KWkFVFp[2Z5AuV]8>NY(3q"_Zd]]7s`f0/b5)-`cUph"1rI:BDQj^(d8-pKW+*l.f*qr6(K-]+Un
Y%-)Aq\\BT)C4\Hr:;Gnmm$K]ci4]WUSj+or)_VIl\Do$W7gd`cF&"j>^8&MC;/r*JXncqMO[hff.o;U
d[lHIhLBV0PNY<ECU*o[a*/Wa>405?at?I)Z2XU5f6=?,NO.*sa[JZ>I;6`a03KnJdEIR8Xr>/@kU>c?
SN`,7:<qg<Q_%FXZWE:40DqjhoN03Pc9286Z&]T:S:#GmkUbb?qR)1;\p3FrMnWAilnVNHlK<n5MoO[:
/\>Lfl-CT--m$i7`h5ekN\[d>k-&+_\*);7NtOd8JS"1n29'!P_<4K05ISS%mu4Gie!+W_84S@F,(^Li
qYpd#Sp>"!~>

%%EndBinary
grestore
np
249.387 251.323 mo
243.062 251.323 li
243.062 250.276 li
249.387 250.276 li
249.387 251.323 li
236.737 251.323 mo
228.304 251.323 li
228.304 250.276 li
236.737 250.276 li
236.737 251.323 li
221.979 251.323 mo
213.546 251.323 li
213.546 250.276 li
221.979 250.276 li
221.979 251.323 li
207.22 251.323 mo
198.787 251.323 li
198.787 250.276 li
207.22 250.276 li
207.22 251.323 li
192.462 251.323 mo
184.029 251.323 li
184.029 250.276 li
192.462 250.276 li
192.462 251.323 li
177.704 251.323 mo
169.27 251.323 li
169.27 250.276 li
177.704 250.276 li
177.704 251.323 li
162.945 251.323 mo
154.512 251.323 li
154.512 250.276 li
162.945 250.276 li
162.945 251.323 li
148.187 251.323 mo
139.754 251.323 li
139.754 250.276 li
148.187 250.276 li
148.187 251.323 li
/0 /CSA get_res setcolorspace
gsave
clp
[1.00217 0 0 -1.00217 0 843.493 ]ct
[110.799 0 0 2.09046 139.101 590.196 ]ct
snap_to_device
<<
/T 1
/W 158 
/H 3 
/M[158 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~9hnGY:/4PZ:/4PZ:/4PZ:/4PZ:/4PZ:/4PZ:/4PZ:/4PZ:/4PZ:/4PZ:/4PZ:/4PZ:/4PZ:/4PZ:/4PZ
:/4PZ:/4PZ:/4PZ:/4PZ:/4PZ:/4PZ:/4PZ:/4PZ:/4PZ:/4PZ:/4PZ:/4PZ:/4PZ:/4PZ:/4PZ:/4PZ
:/4PZ:/4PZ:/4PZ:/4PZ:/4PZ:/4PZ:/4MX91VoW;,L1f;,L1f;,L1f;,L1f;,L1f;,L1f;,L1f;,L1f
;,L1f;,L1f;,L1f;,L1f;,L1f;,L1f;,L1f;,L1f;,L1f;,L1f;,L1f;,L1f;,L1f;,L1f;,L1f;,L1f
;,L1f;,L1f;,L1f;,L1f;,L1f;,L1f;,L1f;,L1f;,L1f;,L1f;,L1f;,L1f;,L1f;,L1f;,L+^;Gg:g
;,L1f;,L1f;,L1f;,L1f;,L1f;,L1f;,L1f;,L1f;,L1f;,L1f;,L1f;,L1f;,L1f;,L1f;,L1f;,L1f
;,L1f;,L1f;,L1f;,L1f;,L1f;,L1f;,L1f;,L1f;,L1f;,L1f;,L1f;,L1f;,L1f;,L1f;,L1f;,L1f
;,L1f;,L1f;,L1f;,L1f;,L1f;,L1g;,%~>
<~rVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]n
rVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]n
rVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVliss8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W,ts8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8;~>
<~k2k^djlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUc
jlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPUc
jlPUcjlPUcjlPUcjlPUcjlPUcjlPUcjlPXflL3Zhi8EPOi8EPOi8EPOi8EPOi8EPOi8EPOi8EPOi8EPO
i8EPOi8EPOi8EPOi8EPOi8EPOi8EPOi8EPOi8EPOi8EPOi8EPOi8EPOi8EPOi8EPOi8EPOi8EPOi8EPO
i8EPOi8EPOi8EPOi8EPOi8EPOi8EPOi8EPOi8EPOi8EPOi8EPOi8EPOi8EPOi8EPOi8EPOi8EY]i8ESQ
iSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibS
iSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibS
iSibSiSibSiSibSiSibSiSibSiS`YPi9(~>
<~AnPahB4kjiB4kjiB4kjiB4kjiB4kjiB4kjiB4kjiB4kjiB4kjiB4kjiB4kjiB4kjiB4kjiB4kjiB4kji
B4kjiB4kjiB4kjiB4kjiB4kjiB4kjiB4kjiB4kjiB4kjiB4kjiB4kjiB4kjiB4kjiB4kjiB4kjiB4kji
B4kjiB4kjiB4kjiB4kjiB4kjiB4kjiB4kgf>uQ&qH$FRYG^+IXG^+IXG^+IXG^+IXG^+IXG^+IXG^+IX
G^+IXG^+IXG^+IXG^+IXG^+IXG^+IXG^+IXG^+IXG^+IXG^+IXG^+IXG^+IXG^+IXG^+IXG^+IXG^+IX
G^+IXG^+IXG^+IXG^+IXG^+IXG^+IXG^+IXG^+IXG^+IXG^+IXG^+IXG^+IXG^+IXG^+L[H?j@4I<g!Z
G'8%PG'8%PG'8%PG'8%PG'8%PG'8%PG'8%PG'8%PG'8%PG'8%PG'8%PG'8%PG'8%PG'8%PG'8%PG'8%P
G'8%PG'8%PG'8%PG'8%PG'8%PG'8%PG'8%PG'8%PG'8%PG'8%PG'8%PG'8%PG'8%PG'8%PG'8%PG'8%P
G'8%PG'8%PG'8%PG'8%PG'8%PG'J=^G[g~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
248.783 359.914 mo
242.359 359.914 li
242.359 358.866 li
248.783 358.866 li
248.783 359.914 li
236.035 359.914 mo
227.601 359.914 li
227.601 358.866 li
236.035 358.866 li
236.035 359.914 li
221.276 359.914 mo
212.843 359.914 li
212.843 358.866 li
221.276 358.866 li
221.276 359.914 li
206.518 359.914 mo
198.084 359.914 li
198.084 358.866 li
206.518 358.866 li
206.518 359.914 li
191.759 359.914 mo
183.326 359.914 li
183.326 358.866 li
191.759 358.866 li
191.759 359.914 li
177.001 359.914 mo
168.568 359.914 li
168.568 358.866 li
177.001 358.866 li
177.001 359.914 li
162.243 359.914 mo
153.809 359.914 li
153.809 358.866 li
162.243 358.866 li
162.243 359.914 li
147.484 359.914 mo
139.754 359.914 li
139.754 358.866 li
147.484 358.866 li
147.484 359.914 li
/0 /CSA get_res setcolorspace
gsave
clp
[1.00217 0 0 -1.00217 0 843.493 ]ct
[110.098 0 0 2.78728 139.101 481.492 ]ct
snap_to_device
<<
/T 1
/W 157 
/H 4 
/M[157 0 0 -4 0 4 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS cf /ASCII85Decode fl /FlateDecode filter
/O 3
>>
%%BeginBinary: 1
img
Gb"-M5mi5u&;B'NWi9<td\;=A"d.4?hDK")l64/e*pjR!DAF=FbkC3;rjFO577:?4Y"AjE?*1SHTB_Zs
'+B@31&:Ba;^so_[(G"h->!(+$bIGhU-%_4;ITAVTt/%K8T2M]])gaH:T6-@?QE=nfT,O:Nr]6_aB;j
~>

%%EndBinary
grestore
np
140.105 354.56 mo
139.754 354.56 li
139.754 346.18 li
140.105 346.18 li
140.105 354.56 li
140.105 339.895 mo
139.754 339.895 li
139.754 331.515 li
140.105 331.515 li
140.105 339.895 li
140.105 325.23 mo
139.754 325.23 li
139.754 316.85 li
140.105 316.85 li
140.105 325.23 li
140.105 310.565 mo
139.754 310.565 li
139.754 302.185 li
140.105 302.185 li
140.105 310.565 li
140.105 295.9 mo
139.754 295.9 li
139.754 287.52 li
140.105 287.52 li
140.105 295.9 li
140.105 281.235 mo
139.754 281.235 li
139.754 272.855 li
140.105 272.855 li
140.105 281.235 li
140.105 266.57 mo
139.754 266.57 li
139.754 258.19 li
140.105 258.19 li
140.105 266.57 li
/0 /CSA get_res setcolorspace
gsave
clp
[1.00217 0 0 -1.00217 0 843.493 ]ct
[2.10378 0 0 97.5547 139.101 487.067 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 140 
/M[3 0 0 -140 0 140 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~:JFMY9h\>W9M\AV:JFMY9h\>W9M\AV:JFMY9h\>W9M\AV:JFMY9h\>W9M\AV:JFMY9h\>W9M\AV:JFMY
9h\>W9M\AV:JFMY9h\>W9M\AV:JFMY9h\>W9M\AV:JFMY9h\>W9M\AV:JFMY9h\>W9M\AV:JFMY9h\>W
9M\AV:JFMY9h\>W9M\AV:JFMY9h\>W9M\AV:JFMY9h\>W9M\AV:JFMY9h\>W9M\AV:JFMY9h\>W9M\AV
:JFMY9h\>W9M\AV:JFMY9h\>W9M\AV:JFMY9h\>W9M\AV:JFMY9h\>W9M\AV:JFMY9h\>W9M\AV:JFMY
9h\>W9M\AV:JFMY9h\>W9M\AV:JFMY9h\>W9M\AV:JFMY9h\>W9M\AV:JFMY9h\>W9M\AV:JFMY9h\>W
9M\AV:JFMY9h\>W9M\AV:JFMY9h\>W9M\AV:JFMY9h\>W9M\AV:JFMY9h\>W9M\AV:JFMY9h\>W9M\AV
:JFMY9h\>W9M\AV:JFMY9h\>W9M\AV:JFMY9h\>W9M\AV~>
<~s8DorrVccprVuips8DorrVccprVuips8DorrVccprVuips8DorrVccprVuips8DorrVccprVuips8Dor
rVccprVuips8DorrVccprVuips8DorrVccprVuips8DorrVccprVuips8DorrVccprVuips8DorrVccp
rVuips8DorrVccprVuips8DorrVccprVuips8DorrVccprVuips8DorrVccprVuips8DorrVccprVuip
s8DorrVccprVuips8DorrVccprVuips8DorrVccprVuips8DorrVccprVuips8DorrVccprVuips8Dor
rVccprVuips8DorrVccprVuips8DorrVccprVuips8DorrVccprVuips8DorrVccprVuips8DorrVccp
rVuips8DorrVccprVuips8DorrVccprVuips8DorrVccprVuips8DorrVccprVuips8DorrVccprVuip
s8DorrVccprVuips8DorrVccprVuips8DorrVccprVuip~>
<~j6,[ekNV$il/Uskj6,[ekNV$il/Uskj6,[ekNV$il/Uskj6,[ekNV$il/Uskj6,[ekNV$il/Uskj6,[e
kNV$il/Uskj6,[ekNV$il/Uskj6,[ekNV$il/Uskj6,[ekNV$il/Uskj6,[ekNV$il/Uskj6,[ekNV$i
l/Uskj6,[ekNV$il/Uskj6,[ekNV$il/Uskj6,[ekNV$il/Uskj6,[ekNV$il/Uskj6,[ekNV$il/Usk
j6,[ekNV$il/Uskj6,[ekNV$il/Uskj6,[ekNV$il/Uskj6,[ekNV$il/Uskj6,[ekNV$il/Uskj6,[e
kNV$il/Uskj6,[ekNV$il/Uskj6,[ekNV$il/Uskj6,[ekNV$il/Uskj6,[ekNV$il/Uskj6,[ekNV$i
l/Uskj6,[ekNV$il/Uskj6,[ekNV$il/Uskj6,[ekNV$il/Uskj6,[ekNV$il/Uskj6,[ekNV$il/Usk
j6,[ekNV$il/Uskj6,[ekNV$il/Uskj6,[ekNV$il/Usk~>
<~D.R*lARK@d?u9I_D.R*lARK@d?u9I_D.R*lARK@d?u9I_D.R*lARK@d?u9I_D.R*lARK@d?u9I_D.R*l
ARK@d?u9I_D.R*lARK@d?u9I_D.R*lARK@d?u9I_D.R*lARK@d?u9I_D.R*lARK@d?u9I_D.R*lARK@d
?u9I_D.R*lARK@d?u9I_D.R*lARK@d?u9I_D.R*lARK@d?u9I_D.R*lARK@d?u9I_D.R*lARK@d?u9I_
D.R*lARK@d?u9I_D.R*lARK@d?u9I_D.R*lARK@d?u9I_D.R*lARK@d?u9I_D.R*lARK@d?u9I_D.R*l
ARK@d?u9I_D.R*lARK@d?u9I_D.R*lARK@d?u9I_D.R*lARK@d?u9I_D.R*lARK@d?u9I_D.R*lARK@d
?u9I_D.R*lARK@d?u9I_D.R*lARK@d?u9I_D.R*lARK@d?u9I_D.R*lARK@d?u9I_D.R*lARK@d?u9I_
D.R*lARK@d?u9I_D.R*lARK@d?u9I_D.R*lARK@d?u9I_~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
249.387 354.56 mo
248.338 354.56 li
248.338 346.18 li
249.387 346.18 li
249.387 354.56 li
249.387 339.895 mo
248.338 339.895 li
248.338 331.515 li
249.387 331.515 li
249.387 339.895 li
249.387 325.23 mo
248.338 325.23 li
248.338 316.85 li
249.387 316.85 li
249.387 325.23 li
249.387 310.565 mo
248.338 310.565 li
248.338 302.185 li
249.387 302.185 li
249.387 310.565 li
249.387 295.9 mo
248.338 295.9 li
248.338 287.52 li
249.387 287.52 li
249.387 295.9 li
249.387 281.235 mo
248.338 281.235 li
248.338 272.855 li
249.387 272.855 li
249.387 281.235 li
249.387 266.57 mo
248.338 266.57 li
248.338 258.19 li
249.387 258.19 li
249.387 266.57 li
/0 /CSA get_res setcolorspace
gsave
clp
[1.00217 0 0 -1.00217 0 843.493 ]ct
[2.80503 0 0 97.5547 247.095 487.067 ]ct
snap_to_device
<<
/T 1
/W 4 
/H 140 
/M[4 0 0 -140 0 140 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS cf /ASCII85Decode fl /FlateDecode filter
/O 3
>>
%%BeginBinary: 1
img
Gb"@%pEV9Ys2-T'pAOkNeSg[:arf`+njiMNr)*GAIus7&!s"cV]ef~>

%%EndBinary
grestore
np
139.754 359.914 mo
249.387 359.914 li
249.387 250.276 li
139.754 250.276 li
cp
.287663 1 1 .390814 cmyk
.75075 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
gsave
[.937039 0 0 -.931107 77.5578 527.15 ]ct
@
grestore newpath
276.594 247.11 mo
278.553 244.326 li
280.661 241.589 li
282.891 238.916 li
285.243 236.319 li
287.689 233.814 li
290.238 231.393 li
292.88 229.075 li
295.597 226.849 li
298.399 224.745 li
301.248 222.762 li
304.162 220.899 li
307.123 219.158 li
310.131 217.557 li
313.167 216.095 li
316.222 214.791 li
317.562 214.289 li
318.227 216.03 li
316.962 216.505 li
313.982 217.78 li
311.012 219.196 li
308.079 220.76 li
305.174 222.464 li
302.325 224.289 li
299.524 226.235 li
296.787 228.292 li
294.117 230.471 li
291.531 232.743 li
289.038 235.108 li
286.63 237.566 li
284.334 240.099 li
282.151 242.715 li
280.089 245.397 li
278.122 248.181 li
cp
311.63 213.162 mo
319.632 214.503 li
314.516 220.769 li
314.188 221.169 313.607 221.225 313.204 220.899 cv
312.801 220.574 312.736 219.987 313.064 219.596 cv
317.168 214.568 li
317.74 216.076 li
311.321 214.996 li
310.806 214.912 310.468 214.438 310.553 213.925 cv
310.637 213.423 311.124 213.078 311.63 213.162 cv
cp
f
/0 
<<
/Name (Black)
/1 
[/DeviceCMYK] /CSA add_res
/CSA /1 get_csa_by_name
/MappedCSA /1 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
1 sep
true set_gvm
%ADOBeginSubsetFont: PBAAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal FCFNLW+Calibri gcheck setglobal} if

2 0 3 <> FCFNLW+Calibri AddT42Char 
2 9172 1005 <000100ae0000039f0517002e00e54024241e01241d01241c01231b01241a
01241901261801261701291201291101122010014d30b8ffc0400d0f024d
60300100200b014d0029b8ffe8b310014d29b8fff0b30f014d29b8fff0b3
0d014d29b8fff6b30c014d29b8fff8b30b014d29b80211400e1e18200b01
4d180b200b014d0b11b8ffe0b30f014d11b8ffd4b30f024d11b8ffc0b310
014d11b8ffe0b30f014d11b8ffc0b30c014d11b8fff040090b014da01101
111312b8013fb323522910b80107b10654003fed323ffdcd012f5d2b2b2b
2b2b2bcd2bc42b33f12b2b2b2b2bc52b31305d2b002b015d5d5d5d5d5d5d
5d5d5d25140e022321222e0235343e02332111070606262635343e023725
3e0333321e02151133321e02039f060a0d07fd5c070c0b0606090d08010e
fa13170e0503060b09012a040c12181218201206ea080e090544131a1007
07101a13121a110903d8950a040d1e171118100c06bf0304040104070b06
fb8f09111a00>FCFNLW+Calibri AddT42Char 
2 8126 855 <000200bbfff7018d039500130027001bb10014b8027bb70a1e23194c050f
48003fcd3fcd012f33e132313001140e0223222e0235343e0233321e0211
140e0223222e0235343e0233321e02018d0919281f20281809091828201f
2819090919281f20281809091828201f2819090320202c1b0b0b1b2c2022
2d1b0b0b1b2dfd28212c1b0b0b1b2c21212d1a0c0c1a2d00>FCFNLW+Calibri AddT42Char 
2 322 4 <00020023fffa047e051400220026009db90024ffe8b40c10014c23b8ffe8
b40c10014c26b8fff0b40b10014c0bb8fff0b40b10014c0ab8fff0401a0b
10014c25100b10014c0d100b10014c0c100b10014c40280125b8fff0402c
0b014d24232625f40c0b0c18221d230a0d0116040c000c100c02af23bf23
cf2303230c230c121d5212550555003f3f3f1239392f2f5d5d1117391112
3939113310ed3211333130012b5d2b2b2b2b2b2b002b2b25161606062322
2e02270321030e03232226263637013e0333321e02170723032104750801
10251f1f251309046ffde66a030a13231c1d250f010801b2040d19271e20
2a1a0e047b01df01c23d161b0e0403070c09013bfec9090d0904050e1b16
04b20b0e080303080f0b8dfd7b00>FCFNLW+Calibri AddT42Char 
2 970 24 <000200ac0000048f050e0012001f0077401d3f2101131810014d13100f01
4d13140d014d13120c014d13180b014d13bb02320000001affe8b310014d
1ab8fff0b30f014d1ab8fff0b30d014d1ab8fff6b30c014d1ab8ffe8b30b
014d1abb021100090018010cb20e511bb80126b10554003fed3fed012fe1
2b2b2b2b2bd4e12b2b2b2b2b31305d01140e022321222635113436332132
1e0207342e0223231133323e02048f56a5f0a6feee172929170125a8e89d
51b5346faa86afb17caa7239029aa8fba5521f270482271f57a3e89969b5
844afc113e80c100>FCFNLW+Calibri AddT42Char 
2 1188 28 <000100ac0000037c050e002c0076b11a27b8ffe8b310014d27b8fff0b30f
014d27b8fff0b30d014d27b8fff6b30c014d27b8ffe8b30b014d27b80211
400909132013200009001ab80108400d802601c02601d0260126260619b8
010cb20d5127b8010cb10654003fed3fed12392f5d7172ed012f2f123939
2f2f10e12b2b2b2b2b32313025140e0223212226351134363321321e0215
140e0223211121321e0215140e0223211121321e02037c040a0d08fd9317
2929170266080d080505080d08fe0601b2080d090404090d08fe4e020108
0d0a0447121b12081f270482271f08121b14121b1108fe6a09101c13121a
1007fe3108111b00>FCFNLW+Calibri AddT42Char 
2 1436 39 <0001005bffee04780520003f00a2401d1c1c0f181810014d18100f014d18
100d014d180a0c014d18100b014d18b80211400d00bf2701202740276027
03270fb8ffe8b310014d0fb8fff0b30f014d0fb8ffecb30d014d0fb8ffee
b30c014d0fb8ffe8b30b014d0fb80232b42f34013418b8010ab42222392f
3ebb010a0005000a0129b2395314b8012cb12f56003fed3ffdd4ed111239
2fed012f5de12b2b2b2b2bd45d5dc4e12b2b2b2b2b12392f313001140e02
23222e0223220e0215141e02333236371121222635343e023321321e0215
11140e0423222e0235343e0233321e04047804080c070c385e835a6baa76
3f457aa9653c7b35fed4111104090c09019b0b16120a123a5c62643196ec
a3565da9ed904a8265451a0a045e131d1308262e264e8abe6f7cc084441d
1d01792224131b110808101c12fe131a261d22180c5dacf0949afab0611a
23291a22>FCFNLW+Calibri AddT42Char 
2 1770 47 <000100acfffa0158051400150050b73f174f17af170300b8ffe8b310014d
00b8fff0b30f014d00b8fff0b30d014d00b8fff6b30c014d00b8ffe8b30b
014d00ba0211000affc0b715014d0a10520555003f3f012f2be12b2b2b2b
2b31305d25140e0223222e023511343e0233321e02150158081421191822
140809152117192114081a080c070505070c0804da080c070505070c0800
>FCFNLW+Calibri AddT42Char 
2 2422 69 <000100acfffa047e0511003d0085b3270f0f14b8ffe8b310014d14b8ffe8
b30f014d14b8ffe8b30d014d14b8fff0b30c014d14b8ffe8b30b014d14b8
0211401e1e0a2e2e321810014d32180f014d32180d014d32100c014d3218
0b014d32b802114010001e38520a2e0f270419225119550654003f3f3f12
17393f012fd4e12b2b2b2b2b32113310e12b2b2b2b2b322f33313025140e
022323222e0227012626272316161511140e0223222e0235113436333332
1e0217011e03173326263511343e0233321e0215047e0d151a0d371a2723
2315fe6820411c02020208131f18181f12082c1a521d271f1d11013a1d36
32311801020108131f191620120847141c12080b1d322702e0397d3b4896
4afcf3070d070505070d0704aa28220a17291ffdc83463605d2f4fab4f02
be070c090404090c0700>FCFNLW+Calibri AddT42Char 
2 2972 87 <000200acfffa03c7050e001c00290078b12406b8ffe8b310014d06b8fff0
b30f014d06b8fff0b30d014d06b8fff6b30c014d06b8ffe8b30b014d06b8
02114017111d1810014d1d100f014d1d100c0d014c1d200b014d1db80232
b2001125b8010ab306060c23b8010bb315510c55003f3fed12392fed012f
d4e12b2b2b2b10e12b2b2b2b2b32313001140e02232311140e0223222e02
351134363321321e0407342e0223231133323e0203c74077ad7893091321
19192114082a1a01152a4d696d4c29b53b575d2c9f9b4e6746240393619c
6e3cfe2e080c070505070c0804aa282207173f5c79574f6a340efdf92847
6300>FCFNLW+Calibri AddT42Char 
2 3214 90 <000200acfffa040b050e003600440091401e102e1137080b014d37100f01
4d37100c0d014c371810014d37180b014d37b80233b7294010014d293f11
b8fff0b310014d11b8fff0b30f014d11b8fff0b30d014d11b8fff6b30c01
4d11b8ffe8b30b014d11b80211b21c2e10b80108b67040014040173db801
0bb5215117550555003f3f3fed12392f5ded39012fe12b2b2b2b2b32d42b
e12b2b2b2b2b123939313025140e0223222e0227032e03232311140e0223
222e023511343633213216171e0315140e02071e03171316160134262726
2623231133323e02040b0614241e1a21140b0477152d3e543b7309132119
192114082917011331411a4b734e2723425c3920342d2814740e08fefd44
50193f3391a84463421f1a080c08040409100c013134573f23fdd9080c07
0505070c0804ae271f05030d38566f4341674f3a140e2b3c4e31fee3241d
03854c69170706fe4c213b50>FCFNLW+Calibri AddT42Char 
FCFNLW+Calibri /CharStrings get begin
/space 3 def
/one 1005 def
/colon 855 def
/A 4 def
/D 24 def
/E 28 def
/G 39 def
/I 47 def
/N 69 def
/P 87 def
/R 90 def
end
FCFNLW+Calibri /Encoding get
dup 32 /space put
dup 49 /one put
dup 58 /colon put
dup 65 /A put
dup 68 /D put
dup 69 /E put
dup 71 /G put
dup 73 /I put
dup 78 /N put
dup 80 /P put
dup 82 /R put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/FCFNLW+Calibri*1 
[32{/.notdef}rp /space 16{/.notdef}rp /one 8{/.notdef}rp /colon 6{/.notdef}rp /A 
2{/.notdef}rp /D /E /.notdef /G /.notdef /I 4{/.notdef}rp 
/N /.notdef /P /.notdef /R 173{/.notdef}rp]
FCFNLW+Calibri nf
FCFNLW+Calibri*1 [16.9135 0 0 -16.8065 0 0 ]msf
334.494 219.736 mo
(DNA GRID : 1 PE)
[10.5203 11.2474 9.79288 2.85837 10.5371 9.18402 4.16071 10.5203 3.51801 4.21155 4.19455 8.43991 
4.19452 8.43985 0 ]xsh
300.264 515.279 mo
297.884 515.356 li
295.485 515.392 li
293.086 515.384 li
290.659 515.336 li
285.843 515.111 li
281.017 514.725 li
276.201 514.178 li
271.431 513.482 li
266.708 512.632 li
262.07 511.635 li
257.507 510.496 li
253.046 509.217 li
248.717 507.803 li
244.519 506.263 li
242.458 505.435 li
240.453 504.583 li
238.494 503.703 li
236.573 502.786 li
234.699 501.84 li
232.881 500.867 li
231.101 499.856 li
230.979 499.778 li
231.944 498.184 li
232.038 498.241 li
233.762 499.227 li
235.552 500.181 li
237.379 501.107 li
239.263 502.006 li
241.193 502.871 li
243.161 503.709 li
245.166 504.516 li
249.298 506.034 li
253.571 507.428 li
257.966 508.691 li
262.464 509.814 li
267.046 510.8 li
271.703 511.64 li
276.416 512.327 li
281.167 512.869 li
285.927 513.251 li
290.706 513.474 li
293.086 513.522 li
295.466 513.53 li
297.828 513.495 li
300.198 513.419 li
cp
233.753 505.104 mo
229.864 498.027 li
237.979 498.146 li
238.504 498.153 238.916 498.576 238.907 499.091 cv
238.897 499.605 238.476 500.015 237.951 500.008 cv
231.448 499.912 li
232.282 498.535 li
235.402 504.211 li
235.646 504.663 235.486 505.228 235.027 505.475 cv
234.577 505.721 234.006 505.556 233.753 505.104 cv
cp
.287663 1 1 .390814 cmyk
f
1 /0 /CSD get_res sepcs
1 sep
true set_gvm
%ADOBeginSubsetFont: PBAAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal FCFNLW+Calibri gcheck setglobal} if
2 1920 62 <000100ac0000034b0514001a0048b90015ffe8b310014d15b8fff0b30f01
4d15b8fff0b30d014d15b8fff6b30c014d15b8ffe8b30b014d15b80211b4
00090f5215b8012bb10654003fed3f012fcde12b2b2b2b2b313025140e02
232122263511343e0233321e02151121321e02034b04090d09fdc4172908
1422181921140801d0090d09044b141b13091f2704ae080c070505070c08
fba109111c00>FCFNLW+Calibri AddT42Char 
2 3556 100 <0001000ffffa03d7050e00220065b718400d014d181100b8ffc0b40d014d
0006b8ffe8b310014d06b8fff0b30f014d06b8fff0b30d014d06b8fff6b3
0c014d06b8ffe8b30b014d06ba02110011ffc0b50d014d110612b80128b3
1d510c55003f3fed32012f2bf12b2b2b2b2bc52b10c42b313001140e0223
2111140e0223222e02351121222e0235343e023321321e0203d704090d08
fe940814211918221408fe94080d080505080d080384080d090404c4131c
1108fb9e080c070505070c08046208111c13131d120808121d00>FCFNLW+Calibri AddT42Char 
2 4040 115 <00010022fffa046805140024006e401d24080b014d2824011a080b014d26
1a01281701260d012c19012c180119b8ffe8b40f10014c19b8ffe8b40c0d
014c18b8ffe8b40f10014c18b8ffe840120c0d014c1918191826251f5218
0512520555003f3f12393f11120139392f2f2b2b2b2b3130005d5d015d5d
5d2b5d2b250e0323222e0427012626363633321e02170133013e03333216
16060702b7040e19271d162118110c0703fe5908011228221c2112090401
73010169030814241e1f240d03081e0b0e0803010405080b0804b2161b0e
0403080d0afbbf043f0b0e0803050e1b1600>FCFNLW+Calibri AddT42Char 
FCFNLW+Calibri /CharStrings get begin
/L 62 def
/T 100 def
/V 115 def
end
FCFNLW+Calibri /Encoding get
dup 76 /L put
dup 84 /T put
dup 86 /V put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/FCFNLW+Calibri*1 
[32{/.notdef}rp /space 16{/.notdef}rp /one 8{/.notdef}rp /colon 6{/.notdef}rp /A 
2{/.notdef}rp /D /E /.notdef /G /.notdef /I 2{/.notdef}rp 
/L /.notdef /N /.notdef /P /.notdef /R /.notdef 
/T /.notdef /V 169{/.notdef}rp]
FCFNLW+Calibri nf
FCFNLW+Calibri*1 [16.8901 0 0 -16.7832 0 0 ]msf
88.6149 486.195 mo
(GATE LEVEL : 1 NAND)
[10.5732 8.46186 8.44506 8.44518 2.80372 7.09382 8.3945 9.84697 8.44518 7.09383 3.49622 4.2395 
4.2225 8.46202 3.53 11.2487 9.84686 11.2487 0 ]xsh
gsave
305.258 526.465 mo
472.519 526.465 li
472.519 383.309 li
305.258 383.309 li
305.258 526.465 li
clp
335.333 417.035 mo
332.933 409.084 332.933 401.125 335.333 393.174 cv
1 lc
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
338.333 393.174 mo
340.733 401.125 340.733 409.084 338.333 417.035 cv
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
362.453 416.917 mo
360.052 408.966 360.052 401.007 362.453 393.056 cv
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
365.45 393.052 mo
367.85 401.003 367.85 408.966 365.454 416.917 cv
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
338.392 416.976 mo
346.389 414.59 354.397 414.59 362.393 416.976 cv
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
362.393 419.96 mo
354.397 422.347 346.389 422.347 338.393 419.96 cv
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
311.274 417.094 mo
319.27 414.708 327.277 414.708 335.273 417.094 cv
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
335.273 420.078 mo
327.277 422.465 319.27 422.465 311.274 420.078 cv
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
335.453 443.88 mo
333.053 435.929 333.053 427.97 335.453 420.019 cv
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
338.453 420.019 mo
340.853 427.97 340.853 435.929 338.453 443.88 cv
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
365.513 416.976 mo
373.505 414.59 381.514 414.59 389.511 416.976 cv
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
389.511 419.96 mo
381.514 422.347 373.51 422.347 365.513 419.96 cv
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
362.571 443.88 mo
360.171 435.929 360.171 427.97 362.571 420.019 cv
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
365.572 420.019 mo
367.973 427.97 367.973 435.929 365.572 443.88 cv
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
338.633 444.061 mo
346.629 441.675 354.634 441.675 362.63 444.061 cv
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
362.63 447.041 mo
354.638 449.428 346.629 449.428 338.633 447.041 cv
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
335.573 471.083 mo
333.173 463.132 333.173 455.173 335.573 447.222 cv
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
338.573 447.222 mo
340.973 455.173 340.973 463.132 338.573 471.083 cv
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
311.514 444.061 mo
319.51 441.675 327.517 441.675 335.513 444.061 cv
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
335.514 447.041 mo
327.518 449.428 319.51 449.428 311.514 447.041 cv
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
362.694 470.965 mo
360.294 463.014 360.294 455.051 362.69 447.104 cv
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
365.691 447.1 mo
368.091 455.051 368.091 463.014 365.691 470.965 cv
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
365.632 443.939 mo
373.628 441.553 381.633 441.553 389.629 443.939 cv
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
389.629 446.923 mo
381.637 449.31 373.628 449.31 365.632 446.923 cv
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
338.633 471.024 mo
346.629 468.638 354.634 468.638 362.63 471.024 cv
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
362.63 474.008 mo
354.638 476.395 346.629 476.395 338.633 474.008 cv
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
311.514 471.142 mo
319.51 468.755 327.517 468.755 335.513 471.142 cv
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
335.514 474.126 mo
327.518 476.513 319.51 476.513 311.514 474.126 cv
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
335.541 497.974 mo
334.337 493.988 333.734 489.997 333.734 486.006 cv
333.734 482.01 334.336 478.014 335.54 474.022 cv
335.738 473.916 li
335.845 474.112 li
334.648 478.077 334.052 482.041 334.052 486.006 cv
334.052 489.965 334.65 493.925 335.845 497.883 cv
335.739 498.08 li
335.541 497.974 li
f
338.845 474.022 mo
340.048 478.008 340.652 481.999 340.652 485.99 cv
340.652 489.986 340.05 493.982 338.845 497.973 cv
338.647 498.079 li
338.541 497.883 li
339.737 493.919 340.334 489.954 340.334 485.99 cv
340.334 482.031 339.735 478.072 338.54 474.112 cv
338.647 473.916 li
338.845 474.022 li
f
365.704 470.873 mo
369.717 469.675 373.734 469.076 377.751 469.076 cv
381.769 469.076 385.786 469.675 389.798 470.873 cv
389.904 471.069 li
389.707 471.175 li
385.722 469.986 381.737 469.392 377.751 469.392 cv
373.766 469.392 369.78 469.986 365.796 471.175 cv
365.598 471.069 li
365.704 470.873 li
f
389.798 474.16 mo
385.786 475.357 381.769 475.956 377.751 475.956 cv
373.734 475.956 369.717 475.357 365.704 474.16 cv
365.598 473.963 li
365.796 473.857 li
369.78 475.046 373.766 475.64 377.751 475.64 cv
381.737 475.64 385.722 475.046 389.707 473.857 cv
389.904 473.963 li
389.798 474.16 li
f
362.66 497.974 mo
361.456 493.985 360.853 489.992 360.853 485.998 cv
360.853 482.005 361.456 478.011 362.66 474.022 cv
362.858 473.916 li
362.965 474.112 li
361.769 478.074 361.171 482.036 361.171 485.998 cv
361.171 489.96 361.769 493.922 362.965 497.883 cv
362.858 498.08 li
362.66 497.974 li
f
365.966 474.022 mo
367.168 478.013 367.771 482.007 367.771 486.002 cv
367.771 489.994 367.17 493.986 365.966 497.973 cv
365.768 498.079 li
365.662 497.883 li
366.857 493.923 367.453 489.962 367.453 486.002 cv
367.453 482.039 366.856 478.076 365.661 474.112 cv
365.768 473.916 li
365.966 474.022 li
f
389.452 416.858 mo
387.051 408.908 387.051 400.944 389.452 392.993 cv
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
392.449 392.993 mo
394.849 400.944 394.849 408.908 392.449 416.858 cv
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
416.569 416.736 mo
414.169 408.79 414.169 400.826 416.569 392.876 cv
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
419.571 392.876 mo
421.971 400.826 421.971 408.786 419.571 416.736 cv
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
392.512 416.799 mo
400.504 414.413 408.514 414.413 416.51 416.795 cv
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
416.51 419.779 mo
408.514 422.166 400.509 422.166 392.512 419.779 cv
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
389.57 443.703 mo
387.17 435.753 387.17 427.789 389.57 419.838 cv
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
392.571 419.838 mo
394.972 427.789 394.972 435.753 392.571 443.703 cv
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
419.63 416.799 mo
427.626 414.413 435.631 414.413 443.628 416.795 cv
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
443.628 419.779 mo
435.631 422.166 427.626 422.166 419.63 419.779 cv
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
416.536 443.749 mo
415.333 439.758 414.73 435.762 414.73 431.766 cv
414.73 427.774 415.332 423.781 416.536 419.793 cv
416.733 419.687 li
416.84 419.884 li
415.645 423.844 415.048 427.805 415.048 431.766 cv
415.048 435.731 415.646 439.695 416.84 443.658 cv
416.733 443.855 li
416.536 443.749 li
f
419.689 419.838 mo
422.089 427.789 422.089 435.753 419.689 443.703 cv
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
392.644 443.611 mo
396.656 442.414 400.673 441.814 404.689 441.814 cv
408.705 441.814 412.721 442.414 416.733 443.611 cv
416.84 443.808 li
416.642 443.914 li
412.658 442.725 408.673 442.13 404.689 442.13 cv
400.704 442.13 396.72 442.725 392.736 443.914 cv
392.538 443.808 li
392.644 443.611 li
f
416.738 446.894 mo
412.723 448.092 408.704 448.691 404.685 448.691 cv
400.67 448.691 396.655 448.093 392.644 446.898 cv
392.538 446.701 li
392.736 446.595 li
396.718 447.781 400.701 448.375 404.685 448.375 cv
408.672 448.375 412.66 447.781 416.646 446.591 cv
416.844 446.697 li
416.738 446.894 li
f
389.477 470.829 mo
388.273 466.84 387.67 462.847 387.67 458.854 cv
387.67 454.86 388.273 450.867 389.477 446.878 cv
389.675 446.772 li
389.782 446.969 li
388.586 450.93 387.988 454.892 387.988 458.854 cv
387.988 462.815 388.586 466.777 389.782 470.739 cv
389.675 470.935 li
389.477 470.829 li
f
392.783 446.878 mo
393.987 450.867 394.59 454.86 394.59 458.854 cv
394.59 462.847 393.987 466.84 392.783 470.829 cv
392.585 470.935 li
392.478 470.739 li
393.674 466.777 394.272 462.815 394.272 458.854 cv
394.272 454.892 393.674 450.93 392.478 446.969 cv
392.585 446.772 li
392.783 446.878 li
f
416.599 470.712 mo
415.395 466.722 414.792 462.729 414.792 458.736 cv
414.792 454.743 415.395 450.749 416.599 446.76 cv
416.797 446.654 li
416.904 446.851 li
415.708 450.812 415.11 454.774 415.11 458.736 cv
415.11 462.698 415.708 466.659 416.904 470.621 cv
416.797 470.818 li
416.599 470.712 li
f
419.748 446.805 mo
422.149 454.752 422.149 462.715 419.748 470.666 cv
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
419.689 443.64 mo
427.686 441.258 435.69 441.254 443.687 443.64 cv
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
443.691 446.624 mo
435.695 449.011 427.686 449.011 419.689 446.624 cv
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
392.644 470.574 mo
396.656 469.376 400.673 468.777 404.689 468.777 cv
408.705 468.777 412.721 469.376 416.733 470.574 cv
416.84 470.771 li
416.642 470.877 li
412.658 469.688 408.673 469.093 404.689 469.093 cv
400.704 469.093 396.72 469.688 392.736 470.877 cv
392.538 470.771 li
392.644 470.574 li
f
416.738 473.861 mo
412.726 475.058 408.708 475.657 404.691 475.657 cv
400.674 475.657 396.656 475.058 392.644 473.861 cv
392.538 473.664 li
392.736 473.558 li
396.72 474.747 400.706 475.341 404.691 475.341 cv
408.676 475.341 412.662 474.747 416.646 473.558 cv
416.844 473.664 li
416.738 473.861 li
f
389.6 497.676 mo
388.396 493.687 387.793 489.693 387.793 485.7 cv
387.793 481.706 388.396 477.712 389.6 473.723 cv
389.798 473.617 li
389.904 473.814 li
388.708 477.775 388.111 481.737 388.111 485.7 cv
388.111 489.662 388.708 493.624 389.904 497.585 cv
389.798 497.782 li
389.6 497.676 li
f
392.901 473.723 mo
394.106 477.712 394.708 481.706 394.708 485.699 cv
394.708 489.693 394.106 493.686 392.901 497.675 cv
392.704 497.781 li
392.597 497.584 li
393.793 493.623 394.391 489.661 394.391 485.699 cv
394.391 481.737 393.793 477.775 392.597 473.814 cv
392.704 473.617 li
392.901 473.723 li
f
419.808 470.725 mo
427.804 468.339 435.813 468.339 443.81 470.725 cv
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
443.81 473.709 mo
435.813 476.096 427.804 476.096 419.812 473.709 cv
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
416.718 497.676 mo
415.513 493.687 414.911 489.693 414.911 485.7 cv
414.911 481.706 415.513 477.712 416.718 473.723 cv
416.916 473.617 li
417.022 473.814 li
415.826 477.775 415.229 481.737 415.229 485.7 cv
415.229 489.662 415.826 493.624 417.022 497.585 cv
416.916 497.782 li
416.718 497.676 li
f
419.871 473.768 mo
422.271 481.719 422.271 489.679 419.871 497.63 cv
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
446.807 443.64 mo
454.803 441.258 462.812 441.254 470.809 443.64 cv
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
470.809 446.624 mo
462.812 449.011 454.803 449.011 446.807 446.624 cv
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
443.75 470.666 mo
441.35 462.715 441.35 454.756 443.75 446.805 cv
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
446.748 446.805 mo
449.148 454.752 449.148 462.715 446.748 470.666 cv
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
446.807 470.607 mo
454.803 468.221 462.812 468.221 470.809 470.607 cv
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
470.809 473.587 mo
462.812 475.974 454.803 475.974 446.807 473.587 cv
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
443.869 497.511 mo
441.469 489.561 441.469 481.601 443.869 473.65 cv
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
446.87 473.646 mo
449.266 481.597 449.271 489.56 446.87 497.51 cv
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
362.812 524.833 mo
360.412 516.883 360.412 508.921 362.812 500.971 cv
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
365.814 500.97 mo
368.21 508.921 368.214 516.882 365.814 524.832 cv
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
338.707 497.896 mo
342.717 496.699 346.732 496.1 350.748 496.1 cv
354.766 496.1 358.785 496.698 362.799 497.896 cv
362.905 498.093 li
362.707 498.199 li
358.721 497.009 354.734 496.416 350.748 496.416 cv
346.764 496.416 342.78 497.01 338.798 498.199 cv
338.6 498.093 li
338.707 497.896 li
f
362.753 501.03 mo
354.757 503.417 346.749 503.417 338.753 501.03 cv
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
389.811 524.774 mo
387.411 516.823 387.411 508.862 389.811 500.911 cv
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
392.809 500.91 mo
395.209 508.861 395.213 516.822 392.813 524.773 cv
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
365.704 497.777 mo
369.714 496.581 373.729 495.981 377.744 495.981 cv
381.763 495.981 385.783 496.579 389.798 497.777 cv
389.904 497.973 li
389.707 498.079 li
385.72 496.89 381.732 496.297 377.744 496.297 cv
373.761 496.297 369.778 496.892 365.796 498.08 cv
365.598 497.974 li
365.704 497.777 li
f
389.752 500.911 mo
381.756 503.297 373.747 503.297 365.75 500.911 cv
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
392.826 497.658 mo
396.834 496.461 400.847 495.861 404.862 495.861 cv
408.881 495.861 412.901 496.459 416.916 497.658 cv
417.022 497.854 li
416.824 497.96 li
412.837 496.77 408.849 496.177 404.862 496.177 cv
400.879 496.177 396.897 496.772 392.918 497.961 cv
392.72 497.855 li
392.826 497.658 li
f
416.87 500.792 mo
408.873 503.178 400.868 503.178 392.872 500.792 cv
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
311.153 497.809 mo
319.149 495.423 327.156 495.422 335.152 497.809 cv
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
335.153 500.792 mo
327.157 503.178 319.15 503.178 311.154 500.792 cv
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
416.929 524.654 mo
414.529 516.704 414.529 508.743 416.929 500.792 cv
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
419.93 500.791 mo
422.331 508.742 422.331 516.703 419.93 524.653 cv
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
419.871 497.571 mo
427.863 495.184 435.873 495.184 443.869 497.57 cv
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
443.869 500.553 mo
435.873 502.939 427.868 502.94 419.871 500.554 cv
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
446.989 497.571 mo
454.985 495.184 462.99 495.184 470.987 497.57 cv
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
470.987 500.553 mo
462.99 502.939 454.985 502.94 446.989 500.554 cv
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
402.409 440.446 mo
407.172 440.446 li
407.172 422.136 li
402.409 422.136 li
cp
1 /0 /CSD get_res sepcs
.153 sep
ef
402.409 440.446 mo
407.172 440.446 li
407.172 422.136 li
402.409 422.136 li
cp
1 /0 /CSD get_res sepcs
1 sep
.75 lw
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
404.81 421.749 mo
403.548 421.749 402.528 421.913 402.528 422.115 cv
402.528 422.317 403.548 422.482 404.81 422.482 cv
406.067 422.482 407.087 422.317 407.087 422.115 cv
407.087 421.913 406.067 421.749 404.81 421.749 cv
cp
1 /0 /CSD get_res sepcs
.153 sep
ef
404.81 421.749 mo
403.548 421.749 402.528 421.913 402.528 422.115 cv
402.528 422.317 403.548 422.482 404.81 422.482 cv
406.067 422.482 407.087 422.317 407.087 422.115 cv
407.087 421.913 406.067 421.749 404.81 421.749 cv
cp
1 /0 /CSD get_res sepcs
1 sep
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
404.81 440.109 mo
403.548 440.109 402.528 440.269 402.528 440.471 cv
402.528 440.673 403.548 440.837 404.81 440.837 cv
406.067 440.837 407.087 440.673 407.087 440.471 cv
407.087 440.269 406.067 440.109 404.81 440.109 cv
cp
1 /0 /CSD get_res sepcs
.153 sep
ef
404.81 440.109 mo
403.548 440.109 402.528 440.269 402.528 440.471 cv
402.528 440.673 403.548 440.837 404.81 440.837 cv
406.067 440.837 407.087 440.673 407.087 440.471 cv
407.087 440.269 406.067 440.109 404.81 440.109 cv
cp
1 /0 /CSD get_res sepcs
1 sep
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
399.234 433.501 mo
419.871 433.185 li
419.871 428.45 li
399.234 428.766 li
399.234 433.501 li
1 /0 /CSD get_res sepcs
.651 sep
ef
399.234 433.501 mo
399.232 433.343 li
419.712 433.03 li
419.712 428.61 li
399.393 428.921 li
399.393 433.501 li
399.234 433.501 li
399.232 433.343 li
399.234 433.501 li
399.076 433.501 li
399.076 428.766 li
399.232 428.608 li
419.869 428.292 li
419.983 428.338 li
420.03 428.45 li
420.03 433.185 li
419.874 433.343 li
399.237 433.659 li
399.123 433.613 li
399.076 433.501 li
399.234 433.501 li
1 /0 /CSD get_res sepcs
1 sep
f
420.468 430.761 mo
420.443 429.511 420.239 428.496 420.011 428.5 cv
419.782 428.505 419.613 429.523 419.634 430.773 cv
419.655 432.028 419.858 433.038 420.091 433.034 cv
420.32 433.029 420.489 432.011 420.468 430.761 cv
cp
1 /0 /CSD get_res sepcs
.153 sep
ef
420.468 430.761 mo
420.443 429.511 420.239 428.496 420.011 428.5 cv
419.782 428.505 419.613 429.523 419.634 430.773 cv
419.655 432.028 419.858 433.038 420.091 433.034 cv
420.32 433.029 420.489 432.011 420.468 430.761 cv
cp
1 /0 /CSD get_res sepcs
1 sep
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
399.582 431.123 mo
399.556 429.873 399.353 428.858 399.124 428.862 cv
398.896 428.867 398.727 429.885 398.748 431.139 cv
398.769 432.39 398.972 433.4 399.205 433.396 cv
399.434 433.391 399.603 432.377 399.582 431.123 cv
cp
1 /0 /CSD get_res sepcs
.353 sep
ef
399.582 431.123 mo
399.556 429.873 399.353 428.858 399.124 428.862 cv
398.896 428.867 398.727 429.885 398.748 431.14 cv
398.769 432.39 398.972 433.4 399.205 433.396 cv
399.433 433.391 399.603 432.377 399.582 431.123 cv
cp
1 /0 /CSD get_res sepcs
1 sep
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
375.423 440.446 mo
380.185 440.446 li
380.185 423.399 li
375.423 423.399 li
cp
1 /0 /CSD get_res sepcs
.153 sep
ef
375.423 440.446 mo
380.185 440.446 li
380.185 423.399 li
375.423 423.399 li
cp
1 /0 /CSD get_res sepcs
1 sep
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
377.81 422.94 mo
376.549 422.94 375.529 423.096 375.529 423.285 cv
375.529 423.475 376.549 423.626 377.81 423.626 cv
379.068 423.626 380.092 423.475 380.092 423.285 cv
380.092 423.096 379.068 422.94 377.81 422.94 cv
cp
1 /0 /CSD get_res sepcs
.153 sep
ef
377.81 422.94 mo
376.549 422.94 375.529 423.096 375.529 423.286 cv
375.529 423.475 376.549 423.626 377.81 423.626 cv
379.068 423.626 380.092 423.475 380.092 423.286 cv
380.092 423.096 379.068 422.94 377.81 422.94 cv
cp
1 /0 /CSD get_res sepcs
1 sep
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
377.81 440.151 mo
376.549 440.151 375.529 440.307 375.529 440.496 cv
375.529 440.686 376.549 440.837 377.81 440.837 cv
379.068 440.837 380.092 440.686 380.092 440.496 cv
380.092 440.307 379.068 440.151 377.81 440.151 cv
cp
1 /0 /CSD get_res sepcs
.153 sep
ef
377.81 440.151 mo
376.549 440.151 375.529 440.307 375.529 440.496 cv
375.529 440.686 376.549 440.837 377.81 440.837 cv
379.068 440.837 380.092 440.686 380.092 440.496 cv
380.092 440.307 379.068 440.151 377.81 440.151 cv
cp
1 /0 /CSD get_res sepcs
1 sep
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
364.311 434.132 mo
383.995 433.816 li
383.995 429.397 li
364.311 429.713 li
364.311 434.132 li
cp
1 /0 /CSD get_res sepcs
.651 sep
ef
364.311 434.132 mo
383.995 433.816 li
383.995 429.397 li
364.311 429.713 li
364.311 434.132 li
cp
1 /0 /CSD get_res sepcs
1 sep
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
384.355 431.514 mo
384.334 430.264 384.139 429.254 383.923 429.254 cv
383.707 429.258 383.551 430.277 383.572 431.531 cv
383.597 432.781 383.788 433.791 384.004 433.787 cv
384.22 433.787 384.376 432.768 384.355 431.514 cv
cp
1 /0 /CSD get_res sepcs
.153 sep
ef
384.355 431.514 mo
384.334 430.264 384.139 429.254 383.923 429.254 cv
383.707 429.258 383.551 430.277 383.572 431.531 cv
383.597 432.781 383.788 433.791 384.004 433.787 cv
384.219 433.787 384.376 432.768 384.355 431.514 cv
cp
1 /0 /CSD get_res sepcs
1 sep
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
364.734 431.855 mo
364.713 430.605 364.523 429.591 364.307 429.595 cv
364.091 429.599 363.93 430.618 363.955 431.868 cv
363.977 433.122 364.167 434.132 364.383 434.128 cv
364.599 434.124 364.755 433.109 364.734 431.855 cv
cp
1 /0 /CSD get_res sepcs
.353 sep
ef
364.734 431.855 mo
364.713 430.605 364.523 429.591 364.307 429.595 cv
364.091 429.599 363.93 430.618 363.955 431.868 cv
363.976 433.122 364.167 434.132 364.383 434.128 cv
364.599 434.124 364.755 433.109 364.734 431.855 cv
cp
1 /0 /CSD get_res sepcs
1 sep
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
377.01 423.399 mo
378.598 423.399 li
378.598 418.664 li
377.01 418.664 li
cp
1 /0 /CSD get_res sepcs
.651 sep
ef
377.01 423.399 mo
378.598 423.399 li
378.598 418.664 li
377.01 418.664 li
cp
1 /0 /CSD get_res sepcs
1 sep
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
377.912 418.689 mo
377.493 418.689 377.154 418.715 377.154 418.744 cv
377.154 418.769 377.493 418.794 377.912 418.794 cv
378.335 418.794 378.674 418.769 378.674 418.744 cv
378.674 418.715 378.335 418.689 377.912 418.689 cv
cp
1 /0 /CSD get_res sepcs
.153 sep
ef
377.912 418.689 mo
377.493 418.689 377.154 418.715 377.154 418.744 cv
377.154 418.769 377.493 418.795 377.912 418.795 cv
378.335 418.795 378.674 418.769 378.674 418.744 cv
378.674 418.715 378.335 418.689 377.912 418.689 cv
cp
1 /0 /CSD get_res sepcs
1 sep
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
377.908 423.378 mo
377.489 423.378 377.146 423.403 377.146 423.433 cv
377.146 423.467 377.489 423.488 377.908 423.488 cv
378.327 423.488 378.67 423.467 378.67 423.433 cv
378.67 423.403 378.327 423.378 377.908 423.378 cv
cp
1 /0 /CSD get_res sepcs
.353 sep
ef
377.908 423.378 mo
377.489 423.378 377.146 423.403 377.146 423.433 cv
377.146 423.467 377.489 423.488 377.908 423.488 cv
378.327 423.488 378.67 423.467 378.67 423.433 cv
378.67 423.403 378.327 423.378 377.908 423.378 cv
cp
1 /0 /CSD get_res sepcs
1 sep
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
375.74 468.541 mo
380.185 468.541 li
380.185 449.285 li
375.74 449.285 li
cp
1 /0 /CSD get_res sepcs
.153 sep
ef
375.74 468.541 mo
380.185 468.541 li
380.185 449.285 li
375.74 449.285 li
cp
1 /0 /CSD get_res sepcs
1 sep
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
377.87 449.003 mo
376.612 449.003 375.592 449.192 375.592 449.423 cv
375.592 449.659 376.612 449.849 377.87 449.849 cv
379.131 449.849 380.151 449.659 380.151 449.423 cv
380.151 449.192 379.131 449.003 377.87 449.003 cv
cp
1 /0 /CSD get_res sepcs
.153 sep
ef
377.87 449.003 mo
376.612 449.003 375.592 449.192 375.592 449.423 cv
375.592 449.659 376.612 449.849 377.87 449.849 cv
379.131 449.849 380.151 449.659 380.151 449.423 cv
380.151 449.192 379.131 449.003 377.87 449.003 cv
cp
1 /0 /CSD get_res sepcs
1 sep
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
377.87 468.031 mo
376.612 468.031 375.592 468.221 375.592 468.452 cv
375.592 468.688 376.612 468.877 377.87 468.877 cv
379.131 468.877 380.151 468.688 380.151 468.452 cv
380.151 468.221 379.131 468.031 377.87 468.031 cv
cp
1 /0 /CSD get_res sepcs
.153 sep
ef
377.87 468.031 mo
376.612 468.031 375.592 468.221 375.592 468.452 cv
375.592 468.688 376.612 468.877 377.87 468.877 cv
379.131 468.877 380.151 468.688 380.151 468.452 cv
380.151 468.221 379.131 468.031 377.87 468.031 cv
cp
1 /0 /CSD get_res sepcs
1 sep
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
375.74 494.426 mo
380.185 494.426 li
380.185 478.958 li
375.74 478.958 li
cp
1 /0 /CSD get_res sepcs
.153 sep
ef
375.74 494.426 mo
380.185 494.426 li
380.185 478.958 li
375.74 478.958 li
cp
1 /0 /CSD get_res sepcs
1 sep
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
377.87 478.419 mo
376.612 478.419 375.592 478.621 375.592 478.87 cv
375.592 479.118 376.612 479.316 377.87 479.316 cv
379.131 479.316 380.151 479.118 380.151 478.87 cv
380.151 478.621 379.131 478.419 377.87 478.419 cv
cp
1 /0 /CSD get_res sepcs
.153 sep
ef
377.87 478.419 mo
376.612 478.419 375.592 478.621 375.592 478.87 cv
375.592 479.118 376.612 479.316 377.87 479.316 cv
379.131 479.316 380.151 479.118 380.151 478.87 cv
380.151 478.621 379.131 478.419 377.87 478.419 cv
cp
1 /0 /CSD get_res sepcs
1 sep
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
377.87 494.109 mo
376.612 494.109 375.592 494.31 375.592 494.557 cv
375.592 494.804 376.612 495.005 377.87 495.005 cv
379.131 495.005 380.151 494.804 380.151 494.557 cv
380.151 494.31 379.131 494.109 377.87 494.109 cv
cp
1 /0 /CSD get_res sepcs
.153 sep
ef
377.87 494.109 mo
376.612 494.109 375.592 494.31 375.592 494.557 cv
375.592 494.804 376.612 495.005 377.87 495.005 cv
379.131 495.005 380.151 494.804 380.151 494.557 cv
380.151 494.31 379.131 494.109 377.87 494.109 cv
cp
1 /0 /CSD get_res sepcs
1 sep
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
372.883 488.428 mo
390.662 488.112 li
390.345 483.693 li
372.566 484.009 li
372.883 488.428 li
1 /0 /CSD get_res sepcs
.651 sep
ef
372.883 488.428 mo
372.88 488.27 li
390.492 487.957 li
390.197 483.854 li
372.736 484.164 li
373.041 488.417 li
372.883 488.428 li
372.88 488.27 li
372.883 488.428 li
372.725 488.439 li
372.407 484.02 li
372.448 483.902 li
372.563 483.851 li
390.342 483.535 li
390.503 483.682 li
390.821 488.101 li
390.779 488.219 li
390.665 488.27 li
372.886 488.586 li
372.725 488.439 li
372.883 488.428 li
1 /0 /CSD get_res sepcs
1 sep
f
390.954 485.807 mo
390.933 484.556 390.755 483.542 390.557 483.546 cv
390.362 483.55 390.218 484.568 390.243 485.82 cv
390.264 487.072 390.442 488.083 390.637 488.08 cv
390.836 488.077 390.976 487.059 390.954 485.807 cv
1 /0 /CSD get_res sepcs
.153 sep
ef
390.954 485.807 mo
390.796 485.81 li
390.785 485.192 390.736 484.633 390.666 484.235 cv
390.632 484.037 390.591 483.878 390.552 483.781 cv
390.506 483.689 li
390.503 483.686 li
390.558 483.629 li
390.558 483.704 li
390.503 483.686 li
390.558 483.629 li
390.558 483.704 li
390.558 483.694 li
390.558 483.704 li
390.558 483.694 li
390.558 483.704 li
390.556 483.546 li
390.56 483.704 li
390.558 483.611 li
390.608 483.69 li
390.56 483.704 li
390.558 483.611 li
390.608 483.69 li
390.592 483.664 li
390.616 483.684 li
390.608 483.69 li
390.592 483.664 li
390.616 483.684 li
390.587 483.706 390.507 483.95 390.469 484.279 cv
390.425 484.612 390.399 485.05 390.399 485.535 cv
390.399 485.627 390.4 485.721 390.402 485.817 cv
390.402 485.817 li
390.412 486.435 390.462 486.994 390.531 487.392 cv
390.565 487.59 390.606 487.748 390.644 487.846 cv
390.69 487.937 li
390.692 487.941 li
390.636 487.999 li
390.636 487.922 li
390.692 487.941 li
390.636 487.999 li
390.636 487.922 li
390.636 488.063 li
390.628 487.923 li
390.636 487.922 li
390.636 488.063 li
390.628 487.923 li
390.634 487.922 li
390.636 488.013 li
390.587 487.935 li
390.634 487.922 li
390.636 488.013 li
390.587 487.935 li
390.602 487.96 li
390.579 487.941 li
390.587 487.935 li
390.602 487.96 li
390.579 487.941 li
390.609 487.918 390.691 487.67 390.728 487.335 cv
390.772 486.995 390.798 486.549 390.798 486.056 cv
390.796 485.81 li
390.954 485.807 li
391.113 485.805 li
391.115 486.056 li
391.115 486.63 391.082 487.141 391.023 487.517 cv
390.994 487.705 390.959 487.859 390.914 487.978 cv
390.828 488.137 li
390.793 488.182 390.731 488.236 390.64 488.238 cv
390.637 488.08 li
390.646 488.238 li
390.636 488.238 li
390.537 488.236 390.476 488.178 390.439 488.131 cv
390.316 487.963 390.256 487.685 390.192 487.281 cv
390.133 486.882 390.094 486.375 390.084 485.823 cv
390.084 485.823 li
390.082 485.726 390.082 485.629 390.082 485.535 cv
390.082 484.97 390.116 484.467 390.174 484.098 cv
390.204 483.913 390.238 483.762 390.283 483.645 cv
390.367 483.489 li
390.402 483.444 390.462 483.391 390.553 483.388 cv
390.555 483.388 li
390.558 483.388 li
390.656 483.39 390.718 483.447 390.756 483.494 cv
390.88 483.663 390.941 483.942 391.005 484.346 cv
391.064 484.746 391.104 485.252 391.113 485.805 cv
390.954 485.807 li
1 /0 /CSD get_res sepcs
1 sep
f
373.065 486.118 mo
373.04 484.866 372.866 483.853 372.667 483.857 cv
372.472 483.861 372.329 484.878 372.35 486.13 cv
372.371 487.382 372.549 488.394 372.748 488.391 cv
372.942 488.387 373.086 487.37 373.065 486.118 cv
cp
1 /0 /CSD get_res sepcs
.353 sep
ef
373.065 486.118 mo
373.04 484.866 372.866 483.853 372.667 483.857 cv
372.472 483.861 372.329 484.878 372.35 486.13 cv
372.371 487.382 372.549 488.394 372.748 488.391 cv
372.942 488.387 373.086 487.37 373.065 486.118 cv
cp
1 /0 /CSD get_res sepcs
1 sep
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
364.311 460.964 mo
384.948 460.649 li
384.948 456.229 li
364.311 456.545 li
364.311 460.964 li
cp
1 /0 /CSD get_res sepcs
.651 sep
ef
364.311 460.965 mo
384.948 460.649 li
384.948 456.229 li
364.311 456.545 li
364.311 460.965 li
cp
1 /0 /CSD get_res sepcs
1 sep
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
385.553 458.342 mo
385.532 457.088 385.329 456.078 385.1 456.082 cv
384.871 456.086 384.706 457.105 384.727 458.355 cv
384.749 459.605 384.952 460.619 385.18 460.615 cv
385.409 460.611 385.578 459.592 385.553 458.342 cv
cp
1 /0 /CSD get_res sepcs
.153 sep
ef
385.553 458.342 mo
385.532 457.088 385.329 456.078 385.1 456.082 cv
384.871 456.086 384.706 457.105 384.727 458.355 cv
384.749 459.605 384.952 460.619 385.18 460.615 cv
385.409 460.611 385.578 459.592 385.553 458.342 cv
cp
1 /0 /CSD get_res sepcs
1 sep
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
364.781 458.7 mo
364.755 457.45 364.552 456.436 364.324 456.44 cv
364.095 456.444 363.93 457.463 363.951 458.717 cv
363.972 459.967 364.175 460.977 364.404 460.973 cv
364.633 460.973 364.802 459.954 364.781 458.7 cv
cp
1 /0 /CSD get_res sepcs
.353 sep
ef
364.781 458.7 mo
364.755 457.45 364.552 456.436 364.324 456.44 cv
364.095 456.444 363.93 457.463 363.951 458.717 cv
363.972 459.967 364.175 460.977 364.404 460.973 cv
364.633 460.973 364.802 459.954 364.781 458.7 cv
cp
1 /0 /CSD get_res sepcs
1 sep
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
403.997 422.136 mo
405.584 422.136 li
405.584 418.033 li
403.997 418.033 li
cp
1 /0 /CSD get_res sepcs
.651 sep
ef
403.997 422.136 mo
405.584 422.136 li
405.584 418.033 li
403.997 418.033 li
cp
1 /0 /CSD get_res sepcs
1 sep
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
404.911 418.087 mo
404.492 418.087 404.153 418.104 404.153 418.129 cv
404.153 418.155 404.492 418.176 404.911 418.176 cv
405.335 418.176 405.673 418.155 405.673 418.129 cv
405.673 418.104 405.335 418.087 404.911 418.087 cv
cp
1 /0 /CSD get_res sepcs
.153 sep
ef
404.911 418.087 mo
404.492 418.087 404.153 418.104 404.153 418.129 cv
404.153 418.155 404.492 418.176 404.911 418.176 cv
405.334 418.176 405.673 418.155 405.673 418.129 cv
405.673 418.104 405.334 418.087 404.911 418.087 cv
cp
1 /0 /CSD get_res sepcs
1 sep
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
404.907 422.208 mo
404.488 422.208 404.145 422.229 404.145 422.254 cv
404.145 422.28 404.488 422.301 404.907 422.301 cv
405.326 422.301 405.669 422.28 405.669 422.254 cv
405.669 422.229 405.326 422.208 404.907 422.208 cv
cp
1 /0 /CSD get_res sepcs
.353 sep
ef
404.907 422.208 mo
404.488 422.208 404.145 422.229 404.145 422.254 cv
404.145 422.28 404.488 422.301 404.907 422.301 cv
405.326 422.301 405.669 422.28 405.669 422.254 cv
405.669 422.229 405.326 422.208 404.907 422.208 cv
cp
1 /0 /CSD get_res sepcs
1 sep
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
337.324 420.242 mo
409.077 418.98 li
409.077 416.454 li
337.324 417.717 li
337.324 420.242 li
cp
1 /0 /CSD get_res sepcs
.651 sep
ef
337.324 420.242 mo
409.077 418.98 li
409.077 416.454 li
337.324 417.717 li
337.324 420.242 li
cp
1 /0 /CSD get_res sepcs
1 sep
[11.25 6.75 ] 0 dsh
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
409.568 417.696 mo
409.555 417.031 409.314 416.496 409.03 416.501 cv
408.742 416.505 408.522 417.048 408.535 417.713 cv
408.547 418.378 408.785 418.912 409.072 418.908 cv
409.356 418.904 409.576 418.361 409.568 417.696 cv
cp
1 /0 /CSD get_res sepcs
.153 sep
ef
409.568 417.696 mo
409.555 417.031 409.314 416.496 409.03 416.501 cv
408.742 416.505 408.522 417.048 408.535 417.713 cv
408.547 418.378 408.785 418.912 409.072 418.908 cv
409.356 418.904 409.576 418.361 409.568 417.696 cv
cp
1 /0 /CSD get_res sepcs
1 sep
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
337.978 418.887 mo
337.966 418.222 337.716 417.688 337.418 417.692 cv
337.12 417.696 336.888 418.239 336.9 418.904 cv
336.912 419.569 337.162 420.103 337.46 420.099 cv
337.758 420.095 337.99 419.552 337.978 418.887 cv
cp
1 /0 /CSD get_res sepcs
.353 sep
ef
337.978 418.887 mo
337.966 418.222 337.716 417.688 337.418 417.692 cv
337.12 417.696 336.888 418.239 336.9 418.904 cv
336.912 419.569 337.162 420.104 337.46 420.099 cv
337.758 420.095 337.99 419.552 337.978 418.887 cv
cp
1 /0 /CSD get_res sepcs
1 sep
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
407.451 430.95 mo
407.451 429.49 406.24 428.307 404.75 428.307 cv
403.26 428.307 402.05 429.49 402.05 430.95 cv
402.05 432.411 403.26 433.593 404.75 433.593 cv
406.24 433.593 407.451 432.411 407.451 430.95 cv
cp
1 /0 /CSD get_res sepcs
.051 sep
ef
407.451 430.95 mo
407.451 429.49 406.24 428.307 404.75 428.307 cv
403.26 428.307 402.05 429.49 402.05 430.95 cv
402.05 432.411 403.26 433.593 404.75 433.593 cv
406.24 433.593 407.451 432.411 407.451 430.95 cv
cp
1 /0 /CSD get_res sepcs
1 sep
[] 0 dsh
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
380.452 431.548 mo
380.452 430.091 379.241 428.909 377.751 428.909 cv
376.261 428.909 375.05 430.091 375.05 431.548 cv
375.05 433.008 376.261 434.191 377.751 434.191 cv
379.241 434.191 380.452 433.008 380.452 431.548 cv
cp
1 /0 /CSD get_res sepcs
.051 sep
ef
380.452 431.548 mo
380.452 430.091 379.241 428.909 377.751 428.909 cv
376.261 428.909 375.05 430.091 375.05 431.548 cv
375.05 433.008 376.261 434.191 377.751 434.191 cv
379.241 434.191 380.452 433.008 380.452 431.548 cv
cp
1 /0 /CSD get_res sepcs
1 sep
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
447.167 500.91 mo
449.567 508.861 449.567 516.822 447.167 524.773 cv
1 lw
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
444.17 524.774 mo
441.769 516.823 441.769 508.862 444.17 500.911 cv
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
377.328 500.739 mo
446.223 499.476 li
446.223 496.951 li
377.01 498.214 li
377.328 500.739 li
1 /0 /CSD get_res sepcs
.651 sep
ef
381.134 500.512 mo
383.356 500.471 li
383.518 500.626 li
383.362 500.786 li
381.14 500.827 li
380.978 500.672 li
381.134 500.512 li
384.943 500.442 mo
387.165 500.401 li
387.327 500.556 li
387.171 500.717 li
384.949 500.757 li
384.788 500.602 li
384.943 500.442 li
388.753 500.372 mo
390.975 500.331 li
391.136 500.486 li
390.98 500.647 li
388.758 500.688 li
388.597 500.533 li
388.753 500.372 li
392.562 500.302 mo
394.784 500.261 li
394.945 500.416 li
394.79 500.577 li
392.568 500.618 li
392.406 500.463 li
392.562 500.302 li
396.371 500.232 mo
398.593 500.191 li
398.755 500.346 li
398.599 500.507 li
396.377 500.548 li
396.215 500.393 li
396.371 500.232 li
400.18 500.163 mo
402.402 500.122 li
402.564 500.277 li
402.408 500.437 li
400.186 500.478 li
400.024 500.323 li
400.18 500.163 li
403.989 500.093 mo
406.211 500.052 li
406.373 500.207 li
406.217 500.368 li
403.995 500.408 li
403.834 500.253 li
403.989 500.093 li
407.798 500.023 mo
410.021 499.982 li
410.182 500.137 li
410.026 500.298 li
407.804 500.338 li
407.643 500.184 li
407.798 500.023 li
411.608 499.953 mo
413.83 499.912 li
413.991 500.067 li
413.836 500.228 li
411.614 500.269 li
411.452 500.114 li
411.608 499.953 li
415.417 499.883 mo
417.639 499.842 li
417.801 499.997 li
417.645 500.158 li
415.423 500.199 li
415.261 500.044 li
415.417 499.883 li
419.226 499.813 mo
421.448 499.773 li
421.61 499.927 li
421.454 500.088 li
419.232 500.129 li
419.07 499.974 li
419.226 499.813 li
423.035 499.744 mo
425.257 499.703 li
425.419 499.858 li
425.263 500.019 li
423.041 500.059 li
422.88 499.904 li
423.035 499.744 li
426.845 499.674 mo
429.066 499.633 li
429.228 499.788 li
429.072 499.949 li
426.85 499.989 li
426.689 499.835 li
426.845 499.674 li
430.654 499.604 mo
432.876 499.563 li
433.037 499.718 li
432.882 499.879 li
430.66 499.92 li
430.498 499.765 li
430.654 499.604 li
434.463 499.534 mo
436.685 499.493 li
436.847 499.648 li
436.691 499.809 li
434.469 499.85 li
434.307 499.695 li
434.463 499.534 li
438.272 499.464 mo
440.494 499.424 li
440.656 499.578 li
440.5 499.739 li
438.278 499.78 li
438.116 499.625 li
438.272 499.464 li
442.081 499.394 mo
444.303 499.354 li
444.465 499.509 li
444.309 499.669 li
442.087 499.71 li
441.925 499.555 li
442.081 499.394 li
445.891 499.325 mo
446.064 499.322 li
446.064 497.594 li
446.223 497.436 li
446.381 497.594 li
446.381 499.477 li
446.225 499.634 li
445.896 499.64 li
445.735 499.485 li
445.891 499.325 li
445.285 497.126 mo
443.063 497.167 li
442.901 497.012 li
443.057 496.851 li
445.279 496.81 li
445.441 496.965 li
445.285 497.126 li
441.476 497.195 mo
439.254 497.236 li
439.092 497.081 li
439.248 496.92 li
441.47 496.88 li
441.632 497.035 li
441.476 497.195 li
437.666 497.265 mo
435.444 497.306 li
435.283 497.151 li
435.439 496.99 li
437.661 496.949 li
437.822 497.104 li
437.666 497.265 li
433.857 497.334 mo
431.635 497.375 li
431.474 497.22 li
431.629 497.059 li
433.852 497.019 li
434.013 497.174 li
433.857 497.334 li
430.048 497.404 mo
427.826 497.445 li
427.664 497.29 li
427.82 497.129 li
430.042 497.088 li
430.204 497.243 li
430.048 497.404 li
426.239 497.473 mo
424.017 497.514 li
423.855 497.359 li
424.011 497.198 li
426.233 497.158 li
426.395 497.313 li
426.239 497.473 li
422.43 497.543 mo
420.208 497.584 li
420.046 497.429 li
420.202 497.268 li
422.424 497.227 li
422.585 497.382 li
422.43 497.543 li
418.621 497.612 mo
416.398 497.653 li
416.237 497.498 li
416.393 497.337 li
418.615 497.297 li
418.776 497.452 li
418.621 497.612 li
414.811 497.682 mo
412.589 497.723 li
412.428 497.568 li
412.583 497.407 li
414.805 497.366 li
414.967 497.521 li
414.811 497.682 li
411.002 497.751 mo
408.78 497.792 li
408.618 497.637 li
408.774 497.476 li
410.996 497.436 li
411.158 497.591 li
411.002 497.751 li
407.193 497.821 mo
404.971 497.862 li
404.809 497.707 li
404.965 497.546 li
407.187 497.505 li
407.349 497.66 li
407.193 497.821 li
403.384 497.89 mo
401.162 497.931 li
401 497.776 li
401.156 497.615 li
403.378 497.575 li
403.539 497.73 li
403.384 497.89 li
399.574 497.96 mo
397.352 498 li
397.191 497.846 li
397.347 497.685 li
399.569 497.644 li
399.73 497.799 li
399.574 497.96 li
395.765 498.029 mo
393.543 498.07 li
393.382 497.915 li
393.537 497.754 li
395.76 497.714 li
395.921 497.869 li
395.765 498.029 li
391.956 498.099 mo
389.734 498.14 li
389.572 497.985 li
389.728 497.824 li
391.95 497.783 li
392.112 497.938 li
391.956 498.099 li
388.147 498.168 mo
385.925 498.209 li
385.763 498.054 li
385.919 497.893 li
388.141 497.853 li
388.303 498.008 li
388.147 498.168 li
384.338 498.238 mo
382.116 498.278 li
381.954 498.124 li
382.11 497.963 li
384.332 497.922 li
384.493 498.077 li
384.338 498.238 li
380.528 498.307 mo
378.306 498.348 li
378.145 498.193 li
378.301 498.032 li
380.523 497.992 li
380.684 498.147 li
380.528 498.307 li
377.204 498.484 mo
377.48 500.677 li
377.342 500.853 li
377.165 500.716 li
376.889 498.523 li
377.027 498.347 li
377.204 498.484 li
377.325 500.581 mo
379.547 500.541 li
379.709 500.696 li
379.553 500.856 li
377.331 500.897 li
377.169 500.742 li
377.325 500.581 li
1 /0 /CSD get_res sepcs
1 sep
f
446.866 498.236 mo
446.853 497.571 446.506 497.039 446.091 497.046 cv
445.672 497.053 445.346 497.598 445.359 498.263 cv
445.368 498.927 445.715 499.46 446.134 499.453 cv
446.549 499.446 446.879 498.901 446.866 498.236 cv
cp
1 /0 /CSD get_res sepcs
.153 sep
ef
446.866 498.236 mo
446.853 497.571 446.506 497.039 446.091 497.046 cv
445.672 497.053 445.346 497.598 445.359 498.263 cv
445.368 498.927 445.715 499.46 446.134 499.453 cv
446.549 499.446 446.879 498.901 446.866 498.236 cv
cp
1 /0 /CSD get_res sepcs
1 sep
.75 lw
[5.25 3.75 ] 0 dsh
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
378.098 499.419 mo
378.086 498.754 377.717 498.221 377.277 498.229 cv
376.833 498.237 376.485 498.782 376.494 499.447 cv
376.507 500.111 376.875 500.644 377.319 500.636 cv
377.76 500.628 378.107 500.083 378.098 499.419 cv
1 /0 /CSD get_res sepcs
.353 sep
ef
376.759 499.985 mo
376.889 500.306 377.109 500.482 377.31 500.479 cv
377.316 500.479 li
377.441 500.476 377.562 500.413 377.673 500.285 cv
377.782 500.157 377.871 499.967 377.912 499.742 cv
378.097 499.616 li
378.224 499.8 li
378.174 500.07 378.068 500.309 377.915 500.489 cv
377.764 500.668 377.557 500.79 377.322 500.794 cv
377.31 500.794 li
376.922 500.791 376.621 500.492 376.464 500.103 cv
376.552 499.898 li
376.759 499.985 li
377.94 499.422 mo
377.934 499.12 377.847 498.85 377.72 498.665 cv
377.592 498.479 377.436 498.386 377.287 498.387 cv
377.28 498.387 li
377.139 498.389 377.002 498.468 376.884 498.626 cv
376.662 498.66 li
376.628 498.439 li
376.785 498.226 377.011 498.076 377.274 498.072 cv
377.287 498.071 li
377.573 498.072 377.817 498.245 377.983 498.488 cv
378.15 498.733 378.25 499.058 378.257 499.416 cv
378.101 499.577 li
377.94 499.422 li
1 /0 /CSD get_res sepcs
1 sep
f
403.997 444.549 mo
405.584 444.549 li
405.584 440.446 li
403.997 440.446 li
cp
1 /0 /CSD get_res sepcs
.651 sep
ef
403.997 444.549 mo
405.584 444.549 li
405.584 440.446 li
403.997 440.446 li
cp
1 /0 /CSD get_res sepcs
1 sep
[] 0 dsh
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
404.793 440.294 mo
404.374 440.294 404.031 440.311 404.031 440.336 cv
404.031 440.361 404.374 440.382 404.793 440.382 cv
405.212 440.382 405.555 440.361 405.555 440.336 cv
405.555 440.311 405.212 440.294 404.793 440.294 cv
cp
1 /0 /CSD get_res sepcs
.153 sep
ef
404.793 440.294 mo
404.374 440.294 404.031 440.311 404.031 440.336 cv
404.031 440.361 404.374 440.382 404.793 440.382 cv
405.212 440.382 405.555 440.361 405.555 440.336 cv
405.555 440.311 405.212 440.294 404.793 440.294 cv
cp
1 /0 /CSD get_res sepcs
1 sep
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
404.784 444.41 mo
404.365 444.41 404.026 444.436 404.026 444.461 cv
404.026 444.486 404.365 444.507 404.784 444.507 cv
405.208 444.507 405.546 444.486 405.546 444.461 cv
405.546 444.436 405.208 444.41 404.784 444.41 cv
cp
1 /0 /CSD get_res sepcs
.353 sep
ef
404.784 444.41 mo
404.365 444.41 404.026 444.436 404.026 444.461 cv
404.026 444.486 404.365 444.507 404.784 444.507 cv
405.207 444.507 405.546 444.486 405.546 444.461 cv
405.546 444.436 405.207 444.41 404.784 444.41 cv
cp
1 /0 /CSD get_res sepcs
1 sep
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
446.807 419.838 mo
449.207 427.789 449.207 435.753 446.807 443.703 cv
1 lw
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
443.81 443.703 mo
441.41 435.753 441.41 427.789 443.81 419.838 cv
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
377.01 447.075 mo
444.635 445.812 li
444.635 443.602 li
377.01 444.549 li
377.01 447.075 li
1 /0 /CSD get_res sepcs
.651 sep
ef
377.01 447.075 mo
377.007 446.917 li
444.476 445.657 li
444.476 443.762 li
377.169 444.705 li
377.169 447.075 li
377.01 447.075 li
377.007 446.917 li
377.01 447.075 li
376.852 447.075 li
376.852 444.549 li
377.008 444.392 li
444.633 443.445 li
444.747 443.49 li
444.794 443.602 li
444.794 445.812 li
444.638 445.97 li
377.013 447.233 li
376.899 447.188 li
376.852 447.075 li
377.01 447.075 li
1 /0 /CSD get_res sepcs
1 sep
f
445.088 444.73 mo
445.075 444.065 444.737 443.531 444.33 443.539 cv
443.924 443.548 443.602 444.091 443.615 444.756 cv
443.628 445.421 443.966 445.955 444.373 445.947 cv
444.779 445.938 445.097 445.395 445.088 444.73 cv
cp
1 /0 /CSD get_res sepcs
.153 sep
ef
445.088 444.73 mo
445.075 444.065 444.737 443.531 444.33 443.539 cv
443.924 443.548 443.602 444.091 443.615 444.756 cv
443.628 445.421 443.966 445.955 444.373 445.947 cv
444.779 445.938 445.097 445.395 445.088 444.73 cv
cp
1 /0 /CSD get_res sepcs
1 sep
.75 lw
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
378.039 445.884 mo
378.026 445.219 377.667 444.684 377.239 444.692 cv
376.807 444.701 376.464 445.244 376.477 445.909 cv
376.49 446.574 376.85 447.108 377.281 447.1 cv
377.709 447.092 378.052 446.549 378.039 445.884 cv
cp
1 /0 /CSD get_res sepcs
.353 sep
ef
378.039 445.884 mo
378.026 445.219 377.667 444.684 377.239 444.693 cv
376.807 444.701 376.464 445.244 376.477 445.909 cv
376.49 446.574 376.85 447.108 377.281 447.1 cv
377.709 447.092 378.052 446.549 378.039 445.884 cv
cp
1 /0 /CSD get_res sepcs
1 sep
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
363.041 472.329 mo
365.263 472.329 li
365.263 427.819 li
363.041 427.819 li
cp
1 /0 /CSD get_res sepcs
.651 sep
ef
363.041 472.329 mo
365.263 472.329 li
365.263 427.819 li
363.041 427.819 li
cp
1 /0 /CSD get_res sepcs
1 sep
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
364.205 427.718 mo
363.536 427.718 362.994 427.869 362.994 428.054 cv
362.994 428.24 363.536 428.391 364.205 428.391 cv
364.874 428.391 365.416 428.24 365.416 428.054 cv
365.416 427.869 364.874 427.718 364.205 427.718 cv
cp
1 /0 /CSD get_res sepcs
.153 sep
ef
364.205 427.718 mo
363.536 427.718 362.994 427.869 362.994 428.054 cv
362.994 428.24 363.536 428.391 364.205 428.391 cv
364.874 428.391 365.416 428.24 365.416 428.054 cv
365.416 427.869 364.874 427.718 364.205 427.718 cv
cp
1 /0 /CSD get_res sepcs
1 sep
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
364.197 458.296 mo
363.528 458.296 362.986 458.456 362.986 458.654 cv
362.986 458.852 363.528 459.012 364.197 459.012 cv
364.861 459.012 365.407 458.852 365.407 458.654 cv
365.407 458.456 364.861 458.296 364.197 458.296 cv
cp
1 /0 /CSD get_res sepcs
.353 sep
ef
364.197 458.296 mo
363.528 458.296 362.986 458.456 362.986 458.654 cv
362.986 458.852 363.528 459.012 364.197 459.012 cv
364.861 459.012 365.407 458.852 365.407 458.654 cv
365.407 458.456 364.861 458.296 364.197 458.296 cv
cp
1 /0 /CSD get_res sepcs
1 sep
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
365.991 431.889 mo
365.991 431.013 365.268 430.306 364.37 430.306 cv
363.477 430.306 362.753 431.013 362.753 431.889 cv
362.753 432.764 363.477 433.475 364.37 433.475 cv
365.268 433.475 365.991 432.764 365.991 431.889 cv
cp
.00970474 .337682 .879118 0 cmyk
ef
365.991 431.889 mo
365.991 431.013 365.268 430.306 364.37 430.306 cv
363.477 430.306 362.753 431.013 362.753 431.889 cv
362.753 432.764 363.477 433.476 364.37 433.476 cv
365.268 433.476 365.991 432.764 365.991 431.889 cv
cp
1 /0 /CSD get_res sepcs
1 sep
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
365.991 459.125 mo
365.991 458.25 365.268 457.543 364.37 457.543 cv
363.477 457.543 362.753 458.25 362.753 459.125 cv
362.753 460.005 363.477 460.712 364.37 460.712 cv
365.268 460.712 365.991 460.005 365.991 459.125 cv
cp
.00970474 .337682 .879118 0 cmyk
ef
365.991 459.125 mo
365.991 458.25 365.268 457.543 364.37 457.543 cv
363.477 457.543 362.753 458.25 362.753 459.125 cv
362.753 460.005 363.477 460.712 364.37 460.712 cv
365.268 460.712 365.991 460.005 365.991 459.125 cv
cp
1 /0 /CSD get_res sepcs
1 sep
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
341.153 419.826 mo
341.153 418.104 339.728 416.711 337.97 416.711 cv
336.212 416.711 334.786 418.104 334.786 419.826 cv
334.786 421.547 336.212 422.94 337.97 422.94 cv
339.728 422.94 341.153 421.547 341.153 419.826 cv
cp
.00970474 .337682 .879118 0 cmyk
ef
341.153 419.826 mo
341.153 418.104 339.728 416.711 337.97 416.711 cv
336.212 416.711 334.786 418.104 334.786 419.826 cv
334.786 421.547 336.212 422.94 337.97 422.94 cv
339.728 422.94 341.153 421.547 341.153 419.826 cv
cp
1 /0 /CSD get_res sepcs
1 sep
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
449.33 498.837 mo
449.33 497.116 447.907 495.721 446.151 495.721 cv
444.39 495.721 442.967 497.116 442.967 498.837 cv
442.967 500.557 444.39 501.952 446.151 501.952 cv
447.907 501.952 449.33 500.557 449.33 498.837 cv
cp
.00970474 .337682 .879118 0 cmyk
ef
449.33 498.837 mo
449.33 497.116 447.907 495.721 446.151 495.721 cv
444.39 495.721 442.967 497.116 442.967 498.837 cv
442.967 500.557 444.39 501.952 446.151 501.952 cv
447.907 501.952 449.33 500.557 449.33 498.837 cv
cp
1 /0 /CSD get_res sepcs
1 sep
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
337.007 473.591 mo
364.628 473.276 li
364.628 470.75 li
337.007 471.382 li
337.007 473.591 li
cp
1 /0 /CSD get_res sepcs
.651 sep
ef
337.007 473.592 mo
364.628 473.276 li
364.628 470.75 li
337.007 471.382 li
337.007 473.592 li
cp
1 /0 /CSD get_res sepcs
1 sep
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
364.722 471.984 mo
364.709 471.319 364.565 470.784 364.4 470.788 cv
364.235 470.788 364.108 471.331 364.12 471.996 cv
364.129 472.661 364.277 473.196 364.442 473.192 cv
364.607 473.192 364.734 472.649 364.722 471.984 cv
cp
1 /0 /CSD get_res sepcs
.153 sep
ef
364.721 471.984 mo
364.709 471.319 364.565 470.784 364.4 470.788 cv
364.235 470.788 364.108 471.331 364.12 471.996 cv
364.129 472.661 364.277 473.196 364.442 473.192 cv
364.607 473.192 364.734 472.649 364.721 471.984 cv
cp
1 /0 /CSD get_res sepcs
1 sep
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
337.281 472.451 mo
337.269 471.786 337.117 471.247 336.94 471.251 cv
336.764 471.255 336.63 471.798 336.642 472.459 cv
336.654 473.124 336.806 473.663 336.982 473.659 cv
337.159 473.655 337.292 473.116 337.281 472.451 cv
cp
1 /0 /CSD get_res sepcs
.353 sep
ef
337.281 472.451 mo
337.269 471.786 337.117 471.247 336.94 471.251 cv
336.764 471.256 336.63 471.798 336.642 472.459 cv
336.654 473.124 336.806 473.663 336.982 473.659 cv
337.159 473.655 337.292 473.116 337.281 472.451 cv
cp
1 /0 /CSD get_res sepcs
1 sep
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
377.01 449.6 mo
378.598 449.6 li
378.598 440.446 li
377.01 440.446 li
cp
1 /0 /CSD get_res sepcs
.651 sep
ef
377.01 449.6 mo
378.598 449.6 li
378.598 440.446 li
377.01 440.446 li
cp
1 /0 /CSD get_res sepcs
1 sep
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
377.751 440.387 mo
377.332 440.387 376.993 440.429 376.993 440.483 cv
376.993 440.538 377.332 440.585 377.751 440.585 cv
378.175 440.585 378.513 440.538 378.513 440.483 cv
378.513 440.429 378.175 440.387 377.751 440.387 cv
cp
1 /0 /CSD get_res sepcs
.153 sep
ef
377.751 440.387 mo
377.332 440.387 376.993 440.429 376.993 440.484 cv
376.993 440.538 377.332 440.585 377.751 440.585 cv
378.174 440.585 378.513 440.538 378.513 440.484 cv
378.513 440.429 378.174 440.387 377.751 440.387 cv
cp
1 /0 /CSD get_res sepcs
1 sep
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
377.747 449.478 mo
377.328 449.478 376.985 449.529 376.985 449.583 cv
376.985 449.642 377.328 449.693 377.747 449.693 cv
378.166 449.693 378.509 449.642 378.509 449.583 cv
378.509 449.529 378.166 449.478 377.747 449.478 cv
cp
1 /0 /CSD get_res sepcs
.353 sep
ef
377.747 449.478 mo
377.328 449.478 376.985 449.529 376.985 449.583 cv
376.985 449.642 377.328 449.693 377.747 449.693 cv
378.166 449.693 378.509 449.642 378.509 449.583 cv
378.509 449.529 378.166 449.478 377.747 449.478 cv
cp
1 /0 /CSD get_res sepcs
1 sep
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
380.033 445.416 mo
380.033 444.192 379.017 443.198 377.764 443.198 cv
376.511 443.198 375.495 444.192 375.495 445.416 cv
375.495 446.645 376.511 447.639 377.764 447.639 cv
379.017 447.639 380.033 446.645 380.033 445.416 cv
cp
.00970474 .337682 .879118 0 cmyk
ef
380.033 445.416 mo
380.033 444.192 379.017 443.198 377.764 443.198 cv
376.511 443.198 375.495 444.192 375.495 445.416 cv
375.495 446.645 376.511 447.639 377.764 447.639 cv
379.017 447.639 380.033 446.645 380.033 445.416 cv
cp
1 /0 /CSD get_res sepcs
1 sep
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
377.01 478.642 mo
378.598 478.642 li
378.598 468.225 li
377.01 468.225 li
cp
1 /0 /CSD get_res sepcs
.651 sep
ef
377.01 478.642 mo
378.598 478.642 li
378.598 468.225 li
377.01 468.225 li
cp
1 /0 /CSD get_res sepcs
1 sep
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
377.912 468.204 mo
377.493 468.204 377.154 468.254 377.154 468.313 cv
377.154 468.377 377.493 468.427 377.912 468.427 cv
378.335 468.427 378.674 468.377 378.674 468.313 cv
378.674 468.254 378.335 468.204 377.912 468.204 cv
cp
1 /0 /CSD get_res sepcs
.153 sep
ef
377.912 468.204 mo
377.493 468.204 377.154 468.255 377.154 468.313 cv
377.154 468.377 377.493 468.427 377.912 468.427 cv
378.335 468.427 378.674 468.377 378.674 468.313 cv
378.674 468.255 378.335 468.204 377.912 468.204 cv
cp
1 /0 /CSD get_res sepcs
1 sep
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
377.908 478.432 mo
377.489 478.432 377.146 478.487 377.146 478.554 cv
377.146 478.617 377.489 478.672 377.908 478.672 cv
378.327 478.672 378.67 478.617 378.67 478.554 cv
378.67 478.487 378.327 478.432 377.908 478.432 cv
cp
1 /0 /CSD get_res sepcs
.353 sep
ef
377.908 478.432 mo
377.489 478.432 377.146 478.487 377.146 478.554 cv
377.146 478.617 377.489 478.672 377.908 478.672 cv
378.327 478.672 378.67 478.617 378.67 478.554 cv
378.67 478.487 378.327 478.432 377.908 478.432 cv
cp
1 /0 /CSD get_res sepcs
1 sep
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
379.969 472.72 mo
379.969 471.588 379.03 470.666 377.87 470.666 cv
376.71 470.666 375.77 471.588 375.77 472.72 cv
375.77 473.857 376.71 474.778 377.87 474.778 cv
379.03 474.778 379.969 473.857 379.969 472.72 cv
cp
.00970474 .337682 .879118 0 cmyk
ef
379.969 472.72 mo
379.969 471.588 379.03 470.666 377.87 470.666 cv
376.71 470.666 375.77 471.588 375.77 472.72 cv
375.77 473.857 376.71 474.778 377.87 474.778 cv
379.03 474.778 379.969 473.857 379.969 472.72 cv
cp
1 /0 /CSD get_res sepcs
1 sep
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
365.572 472.253 mo
365.572 471.378 364.849 470.666 363.951 470.666 cv
363.058 470.666 362.334 471.378 362.334 472.253 cv
362.33 473.129 363.058 473.836 363.951 473.836 cv
364.849 473.836 365.572 473.129 365.572 472.253 cv
cp
.00970474 .337682 .879118 0 cmyk
ef
365.572 472.253 mo
365.572 471.378 364.849 470.666 363.951 470.666 cv
363.058 470.666 362.334 471.378 362.334 472.253 cv
362.33 473.129 363.058 473.836 363.951 473.836 cv
364.849 473.836 365.572 473.129 365.572 472.253 cv
cp
1 /0 /CSD get_res sepcs
1 sep
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
377.01 501.055 mo
378.598 501.055 li
378.598 494.426 li
377.01 494.426 li
377.01 501.055 li
1 /0 /CSD get_res sepcs
.651 sep
ef
377.01 501.055 mo
377.01 500.897 li
378.439 500.897 li
378.439 494.583 li
377.169 494.583 li
377.169 501.055 li
377.01 501.055 li
377.01 500.897 li
377.01 501.055 li
376.852 501.055 li
376.852 494.426 li
376.898 494.314 li
377.01 494.268 li
378.598 494.268 li
378.71 494.314 li
378.757 494.426 li
378.757 501.055 li
378.71 501.166 li
378.598 501.213 li
377.01 501.213 li
376.898 501.166 li
376.852 501.055 li
377.01 501.055 li
1 /0 /CSD get_res sepcs
1 sep
f
377.912 494.274 mo
377.493 494.274 377.154 494.306 377.154 494.346 cv
377.154 494.386 377.493 494.418 377.912 494.418 cv
378.335 494.418 378.674 494.386 378.674 494.346 cv
378.674 494.306 378.335 494.274 377.912 494.274 cv
cp
1 /0 /CSD get_res sepcs
.153 sep
ef
377.912 494.274 mo
377.493 494.274 377.154 494.306 377.154 494.346 cv
377.154 494.386 377.493 494.419 377.912 494.419 cv
378.335 494.419 378.674 494.386 378.674 494.346 cv
378.674 494.306 378.335 494.274 377.912 494.274 cv
cp
1 /0 /CSD get_res sepcs
1 sep
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
377.908 500.867 mo
377.489 500.867 377.146 500.902 377.146 500.944 cv
377.146 500.986 377.489 501.021 377.908 501.021 cv
378.327 501.021 378.67 500.986 378.67 500.944 cv
378.67 500.902 378.327 500.867 377.908 500.867 cv
cp
1 /0 /CSD get_res sepcs
.353 sep
ef
377.908 500.867 mo
377.489 500.867 377.146 500.902 377.146 500.944 cv
377.146 500.986 377.489 501.021 377.908 501.021 cv
378.327 501.021 378.67 500.986 378.67 500.944 cv
378.67 500.902 378.327 500.867 377.908 500.867 cv
cp
1 /0 /CSD get_res sepcs
1 sep
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
379.673 499.573 mo
379.673 498.698 378.945 497.988 378.052 497.988 cv
377.159 497.988 376.43 498.698 376.43 499.573 cv
376.43 500.449 377.159 501.159 378.052 501.159 cv
378.945 501.159 379.673 500.449 379.673 499.573 cv
.00970474 .337682 .879118 0 cmyk
ef
379.673 499.573 mo
379.514 499.573 li
379.513 498.787 378.859 498.146 378.052 498.146 cv
377.244 498.146 376.591 498.787 376.589 499.573 cv
376.591 500.36 377.244 501.001 378.052 501.001 cv
378.859 501.001 379.513 500.36 379.514 499.573 cv
379.673 499.573 li
379.832 499.573 li
379.831 500.539 379.031 501.315 378.052 501.317 cv
377.073 501.315 376.272 500.539 376.272 499.573 cv
376.272 498.608 377.073 497.832 378.052 497.83 cv
379.031 497.832 379.831 498.608 379.832 499.573 cv
379.673 499.573 li
1 /0 /CSD get_res sepcs
1 sep
f
418.776 497.452 mo
418.615 497.297 li
416.945 497.327 li
416.859 497.036 416.776 496.744 416.696 496.452 cv
416.696 474.947 li
416.8 474.569 416.908 474.191 417.022 473.814 cv
416.916 473.617 li
416.836 473.659 li
416.696 473.585 li
416.696 470.848 li
416.775 470.806 li
416.797 470.818 li
416.815 470.784 li
416.84 470.771 li
416.831 470.754 li
416.904 470.621 li
416.832 470.385 416.763 470.149 416.696 469.914 cv
416.696 447.558 li
416.763 447.322 416.832 447.087 416.904 446.851 cv
416.832 446.719 li
416.844 446.697 li
416.81 446.679 li
416.797 446.654 li
416.781 446.663 li
416.696 446.618 li
416.696 446.492 li
419.236 446.444 li
419.236 497.443 li
418.776 497.452 li
0 0 0 .2869 cmyk
f
416.832 446.719 mo
416.81 446.679 li
416.844 446.697 li
416.832 446.719 li
416.696 446.708 mo
416.696 446.618 li
416.781 446.663 li
416.696 446.708 li
0 0 0 .979858 cmyk
f
416.797 470.818 mo
416.775 470.806 li
416.815 470.784 li
416.797 470.818 li
416.831 470.754 mo
416.733 470.574 li
416.721 470.57 416.709 470.567 416.696 470.563 cv
416.696 469.914 li
416.763 470.149 416.832 470.385 416.904 470.621 cv
416.831 470.754 li
416.696 447.558 mo
416.696 446.708 li
416.781 446.663 li
416.797 446.654 li
416.81 446.679 li
416.832 446.719 li
416.904 446.851 li
416.832 447.087 416.763 447.322 416.696 447.558 cv
f
416.696 470.848 mo
416.696 470.563 li
416.709 470.567 416.721 470.57 416.733 470.574 cv
416.831 470.754 li
416.84 470.771 li
416.815 470.784 li
416.775 470.806 li
416.696 470.848 li
f
416.696 473.793 mo
416.696 473.585 li
416.836 473.659 li
416.718 473.723 li
416.71 473.746 416.703 473.77 416.696 473.793 cv
f
416.696 497.332 mo
416.696 496.452 li
416.776 496.744 416.859 497.036 416.945 497.327 cv
416.696 497.332 li
416.696 474.947 mo
416.696 473.793 li
416.703 473.77 416.71 473.746 416.718 473.723 cv
416.836 473.659 li
416.916 473.617 li
417.022 473.814 li
416.908 474.191 416.8 474.569 416.696 474.947 cv
f
419.236 499.161 mo
419.112 499.161 li
419.132 499.103 419.143 499.043 419.143 498.982 cv
419.143 498.543 418.601 498.188 417.932 498.188 cv
417.264 498.188 416.722 498.543 416.722 498.982 cv
416.722 499.043 416.732 499.103 416.753 499.161 cv
416.696 499.161 li
416.696 497.648 li
418.621 497.612 li
418.776 497.452 li
418.776 497.452 li
419.236 497.443 li
419.236 499.161 li
0 0 0 .815183 cmyk
f
416.696 497.648 mo
416.696 497.332 li
416.945 497.327 li
418.615 497.297 li
418.776 497.452 li
418.776 497.452 li
418.621 497.612 li
416.696 497.648 li
0 0 0 .979858 cmyk
f
416.79 443.834 mo
416.84 443.808 li
416.799 443.733 li
416.84 443.658 li
416.791 443.496 416.743 443.334 416.696 443.172 cv
416.696 433.392 li
419.236 433.353 li
419.236 443.8 li
416.79 443.834 li
0 0 0 .2869 cmyk
f
416.799 443.733 mo
416.733 443.611 li
416.721 443.607 416.709 443.604 416.696 443.6 cv
416.696 443.172 li
416.743 443.334 416.791 443.496 416.84 443.658 cv
416.799 443.733 li
0 0 0 .979858 cmyk
f
416.696 443.836 mo
416.696 443.6 li
416.709 443.604 416.721 443.607 416.733 443.611 cv
416.799 443.733 li
416.84 443.808 li
416.79 443.834 li
416.696 443.836 li
f
416.696 433.076 mo
416.696 430.659 li
416.736 430.659 li
416.732 430.683 416.73 430.707 416.73 430.731 cv
416.73 431.144 417.272 431.48 417.941 431.48 cv
418.61 431.48 419.152 431.144 419.152 430.731 cv
419.152 430.707 419.15 430.683 419.146 430.659 cv
419.236 430.659 li
419.236 433.037 li
416.696 433.076 li
0 0 0 .815183 cmyk
f
416.696 433.392 mo
416.696 433.076 li
419.236 433.037 li
419.236 433.353 li
416.696 433.392 li
0 0 0 .979858 cmyk
f
416.696 446.176 mo
416.696 444.151 li
419.236 444.116 li
419.236 446.129 li
416.696 446.176 li
0 0 0 .815183 cmyk
f
416.696 446.492 mo
416.696 446.176 li
419.236 446.129 li
419.236 446.444 li
416.696 446.492 li
416.696 444.151 mo
416.696 443.836 li
416.79 443.834 li
419.236 443.8 li
419.236 444.116 li
416.696 444.151 li
0 0 0 .979858 cmyk
f
419.146 430.659 mo
416.736 430.659 li
416.794 430.28 417.311 429.982 417.941 429.982 cv
418.57 429.982 419.087 430.28 419.146 430.659 cv
0 0 0 .619623 cmyk
f
417.941 431.48 mo
417.272 431.48 416.73 431.144 416.73 430.731 cv
416.73 430.707 416.732 430.683 416.736 430.659 cv
419.146 430.659 li
419.15 430.683 419.152 430.707 419.152 430.731 cv
419.152 431.144 418.61 431.48 417.941 431.48 cv
f
417.932 499.776 mo
417.357 499.776 416.876 499.513 416.753 499.161 cv
419.112 499.161 li
418.989 499.513 418.507 499.776 417.932 499.776 cv
0 0 0 .697963 cmyk
f
419.112 499.161 mo
416.753 499.161 li
416.732 499.103 416.722 499.043 416.722 498.982 cv
416.722 498.543 417.264 498.188 417.932 498.188 cv
418.601 498.188 419.143 498.543 419.143 498.982 cv
419.143 499.043 419.132 499.103 419.112 499.161 cv
f
392.112 497.938 mo
391.95 497.783 li
389.823 497.822 li
389.799 497.779 li
389.904 497.585 li
389.838 497.364 389.773 497.143 389.71 496.922 cv
389.71 488.287 li
390.665 488.27 li
390.779 488.219 li
390.796 488.172 li
390.808 488.161 390.819 488.149 390.828 488.137 cv
390.914 487.978 li
390.959 487.859 390.994 487.705 391.023 487.517 cv
391.082 487.141 391.115 486.63 391.115 486.056 cv
391.113 485.805 li
391.104 485.252 391.064 484.746 391.005 484.346 cv
390.941 483.942 390.88 483.663 390.756 483.494 cv
390.718 483.447 390.656 483.39 390.558 483.388 cv
390.555 483.388 li
390.553 483.388 li
390.462 483.391 390.402 483.444 390.367 483.489 cv
390.342 483.535 li
389.71 483.546 li
389.71 474.477 li
389.741 474.366 389.773 474.255 389.806 474.145 cv
389.904 473.963 li
389.866 473.942 li
389.879 473.899 389.892 473.856 389.904 473.814 cv
389.798 473.617 li
389.71 473.664 li
389.71 472.013 li
392.25 472.013 li
392.25 497.936 li
392.112 497.938 li
389.777 497.77 mo
389.754 497.764 389.732 497.757 389.71 497.751 cv
389.71 497.735 li
389.777 497.77 li
0 0 0 .2869 cmyk
f
389.806 474.145 mo
389.826 474.077 389.846 474.01 389.866 473.942 cv
389.904 473.963 li
389.806 474.145 li
0 0 0 .979858 cmyk
f
389.799 497.779 mo
389.798 497.777 li
389.791 497.775 389.784 497.772 389.777 497.77 cv
389.71 497.735 li
389.71 496.922 li
389.773 497.143 389.838 497.364 389.904 497.585 cv
389.799 497.779 li
389.71 474.477 mo
389.71 473.664 li
389.798 473.617 li
389.904 473.814 li
389.892 473.856 389.879 473.899 389.866 473.942 cv
389.846 474.01 389.826 474.077 389.806 474.145 cv
389.773 474.255 389.741 474.366 389.71 474.477 cv
f
389.71 497.843 mo
389.71 497.751 li
389.732 497.757 389.754 497.764 389.777 497.77 cv
389.784 497.772 389.791 497.775 389.798 497.777 cv
389.799 497.779 li
389.823 497.822 li
389.728 497.824 li
389.71 497.843 li
f
389.71 487.971 mo
389.71 483.862 li
390.197 483.854 li
390.203 483.936 li
390.193 483.987 390.183 484.041 390.174 484.098 cv
390.116 484.467 390.082 484.97 390.082 485.535 cv
390.082 485.629 390.082 485.726 390.084 485.823 cv
390.084 485.823 li
390.094 486.375 390.133 486.882 390.192 487.281 cv
390.237 487.57 390.281 487.794 390.348 487.96 cv
389.71 487.971 li
0 0 0 .815183 cmyk
f
389.71 488.287 mo
389.71 487.971 li
390.348 487.96 li
390.374 488.026 390.404 488.083 390.439 488.131 cv
390.476 488.178 390.537 488.236 390.636 488.238 cv
390.64 488.238 li
390.64 488.238 li
390.708 488.236 390.759 488.206 390.796 488.172 cv
390.779 488.219 li
390.665 488.27 li
389.71 488.287 li
390.203 483.936 mo
390.197 483.854 li
389.71 483.862 li
389.71 483.546 li
390.342 483.535 li
390.283 483.645 li
390.252 483.726 390.226 483.823 390.203 483.936 cv
0 0 0 .979858 cmyk
f
390.633 487.817 mo
390.598 487.718 390.562 487.571 390.531 487.392 cv
390.462 486.994 390.412 486.435 390.402 485.817 cv
390.402 485.817 li
390.4 485.721 390.399 485.627 390.399 485.535 cv
390.399 485.05 390.425 484.612 390.469 484.279 cv
390.492 484.081 390.53 483.915 390.563 483.808 cv
390.598 483.907 390.635 484.054 390.666 484.235 cv
390.736 484.633 390.785 485.192 390.796 485.81 cv
390.796 485.81 li
390.798 486.056 li
390.798 486.549 390.772 486.995 390.728 487.335 cv
390.706 487.537 390.667 487.709 390.633 487.817 cv
0 0 0 .413184 cmyk
f
390.64 488.238 mo
390.64 488.238 li
390.636 488.238 li
390.537 488.236 390.476 488.178 390.439 488.131 cv
390.404 488.083 390.374 488.026 390.348 487.96 cv
390.281 487.794 390.237 487.57 390.192 487.281 cv
390.133 486.882 390.094 486.375 390.084 485.823 cv
390.084 485.823 li
390.082 485.726 390.082 485.629 390.082 485.535 cv
390.082 484.97 390.116 484.467 390.174 484.098 cv
390.183 484.041 390.193 483.987 390.203 483.936 cv
390.226 483.823 390.252 483.726 390.283 483.645 cv
390.342 483.535 li
390.367 483.489 li
390.402 483.444 390.462 483.391 390.553 483.388 cv
390.555 483.388 li
390.558 483.388 li
390.656 483.39 390.718 483.447 390.756 483.494 cv
390.88 483.663 390.941 483.942 391.005 484.346 cv
391.064 484.746 391.104 485.252 391.113 485.805 cv
391.113 485.805 li
391.115 486.056 li
391.115 486.63 391.082 487.141 391.023 487.517 cv
390.994 487.705 390.959 487.859 390.914 487.978 cv
390.828 488.137 li
390.819 488.149 390.808 488.161 390.796 488.172 cv
390.759 488.206 390.708 488.236 390.64 488.238 cv
390.563 483.808 mo
390.53 483.915 390.492 484.081 390.469 484.279 cv
390.425 484.612 390.399 485.05 390.399 485.535 cv
390.399 485.627 390.4 485.721 390.402 485.817 cv
390.402 485.817 li
390.412 486.435 390.462 486.994 390.531 487.392 cv
390.562 487.571 390.598 487.718 390.633 487.817 cv
390.667 487.709 390.706 487.537 390.728 487.335 cv
390.772 486.995 390.798 486.549 390.798 486.056 cv
390.796 485.81 li
390.785 485.192 390.736 484.633 390.666 484.235 cv
390.635 484.054 390.598 483.907 390.563 483.808 cv
0 0 0 .979858 cmyk
f
392.25 498.845 mo
389.71 498.845 li
389.71 498.116 li
389.734 498.14 li
391.956 498.099 li
392.112 497.938 li
392.25 497.936 li
392.25 498.845 li
0 0 0 .815183 cmyk
f
389.734 498.14 mo
389.71 498.116 li
389.71 497.843 li
389.728 497.824 li
389.823 497.822 li
391.95 497.783 li
392.112 497.938 li
391.956 498.099 li
389.734 498.14 li
0 0 0 .979858 cmyk
f
392.389 472.064 mo
392.389 471.188 391.666 470.477 390.772 470.477 cv
389.875 470.477 389.151 471.188 389.151 472.064 cv
389.151 472.939 389.875 473.65 390.772 473.65 cv
391.666 473.65 392.389 472.939 392.389 472.064 cv
cp
.00970474 .337682 .879118 0 cmyk
ef
392.389 472.064 mo
392.389 471.188 391.666 470.477 390.772 470.477 cv
389.875 470.477 389.151 471.188 389.151 472.064 cv
389.151 472.939 389.875 473.65 390.772 473.65 cv
391.666 473.65 392.389 472.939 392.389 472.064 cv
cp
1 /0 /CSD get_res sepcs
1 sep
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
420.688 431.127 mo
420.688 429.902 419.672 428.909 418.419 428.909 cv
417.166 428.909 416.15 429.902 416.15 431.127 cv
416.15 432.356 417.166 433.349 418.419 433.349 cv
419.672 433.349 420.688 432.356 420.688 431.127 cv
cp
.00970474 .337682 .879118 0 cmyk
ef
420.688 431.127 mo
420.688 429.902 419.672 428.909 418.419 428.909 cv
417.166 428.909 416.15 429.902 416.15 431.127 cv
416.15 432.356 417.166 433.349 418.419 433.349 cv
419.672 433.349 420.688 432.356 420.688 431.127 cv
cp
1 /0 /CSD get_res sepcs
1 sep
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
449.148 445.147 mo
449.148 443.426 447.721 442.032 445.964 442.032 cv
444.208 442.032 442.781 443.426 442.781 445.147 cv
442.781 446.869 444.208 448.262 445.964 448.262 cv
447.721 448.262 449.148 446.869 449.148 445.147 cv
cp
.00970474 .337682 .879118 0 cmyk
ef
449.148 445.147 mo
449.148 443.426 447.721 442.032 445.964 442.032 cv
444.208 442.032 442.781 443.426 442.781 445.147 cv
442.781 446.869 444.208 448.262 445.964 448.262 cv
447.721 448.262 449.148 446.869 449.148 445.147 cv
cp
1 /0 /CSD get_res sepcs
1 sep
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
341.153 472.325 mo
341.153 470.603 339.728 469.206 337.97 469.206 cv
336.212 469.206 334.786 470.603 334.786 472.325 cv
334.786 474.042 336.212 475.439 337.97 475.439 cv
339.728 475.439 341.153 474.042 341.153 472.325 cv
cp
.00970474 .337682 .879118 0 cmyk
ef
341.153 472.325 mo
341.153 470.603 339.728 469.206 337.97 469.206 cv
336.212 469.206 334.786 470.603 334.786 472.325 cv
334.786 474.042 336.212 475.439 337.97 475.439 cv
339.728 475.439 341.153 474.042 341.153 472.325 cv
cp
1 /0 /CSD get_res sepcs
1 sep
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
335.693 524.953 mo
333.293 517.002 333.293 509.041 335.693 501.09 cv
1 lw
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
338.693 501.089 mo
341.092 509.04 341.093 517.001 338.693 524.952 cv
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
384.63 500.423 mo
379.605 500.423 li
379.749 500.172 379.832 499.883 379.832 499.573 cv
379.832 499.573 li
379.832 499.573 li
379.831 499.085 379.627 498.646 379.298 498.33 cv
380.528 498.307 li
380.619 498.214 li
382.048 498.214 li
382.116 498.278 li
384.338 498.238 li
384.361 498.214 li
384.63 498.214 li
384.63 500.423 li
0 0 0 .815183 cmyk
f
379.298 498.33 mo
379.255 498.289 379.211 498.25 379.164 498.214 cv
380.619 498.214 li
380.528 498.307 li
379.298 498.33 li
382.116 498.278 mo
382.048 498.214 li
384.361 498.214 li
384.338 498.238 li
382.116 498.278 li
0 0 0 .979858 cmyk
f
376.498 500.423 mo
337.007 500.423 li
337.007 498.214 li
376.852 498.214 li
376.852 498.216 li
376.767 498.276 376.692 498.353 376.628 498.439 cv
376.639 498.513 li
376.409 498.807 376.272 499.174 376.272 499.573 cv
376.272 499.883 376.354 500.172 376.498 500.423 cv
0 0 0 .2869 cmyk
f
376.639 498.513 mo
376.628 498.439 li
376.692 498.353 376.767 498.276 376.852 498.216 cv
376.852 498.287 li
376.774 498.356 376.703 498.432 376.639 498.513 cv
0 0 0 .979858 cmyk
f
376.852 498.287 mo
376.852 498.216 li
376.852 498.214 li
376.939 498.214 li
376.909 498.237 376.88 498.262 376.852 498.287 cv
f
379.225 500.423 mo
376.878 500.423 li
376.697 500.186 376.59 499.891 376.589 499.573 cv
376.59 498.939 377.016 498.399 377.605 498.214 cv
378.498 498.214 li
379.087 498.399 379.513 498.939 379.514 499.573 cv
379.673 499.573 li
379.673 499.573 li
379.514 499.573 li
379.514 499.891 379.406 500.186 379.225 500.423 cv
.255436 .449958 1 .0542916 cmyk
f
379.605 500.423 mo
379.225 500.423 li
379.406 500.186 379.514 499.891 379.514 499.573 cv
379.673 499.573 li
379.832 499.573 li
379.832 499.573 li
379.832 499.883 379.749 500.172 379.605 500.423 cv
376.878 500.423 mo
376.498 500.423 li
376.354 500.172 376.272 499.883 376.272 499.573 cv
376.272 499.174 376.409 498.807 376.639 498.513 cv
376.703 498.432 376.774 498.356 376.852 498.287 cv
376.88 498.262 376.909 498.237 376.939 498.214 cv
377.605 498.214 li
377.016 498.399 376.59 498.939 376.589 499.573 cv
376.59 499.891 376.697 500.186 376.878 500.423 cv
379.832 499.573 mo
379.832 499.573 li
379.832 499.573 li
379.832 499.573 mo
379.673 499.573 li
379.514 499.573 li
379.513 498.939 379.087 498.399 378.498 498.214 cv
379.164 498.214 li
379.211 498.25 379.255 498.289 379.298 498.33 cv
379.627 498.646 379.831 499.085 379.832 499.573 cv
0 0 0 .979858 cmyk
f
340.319 499.433 mo
340.319 497.712 338.894 496.318 337.136 496.318 cv
335.378 496.318 333.953 497.712 333.953 499.433 cv
333.953 501.154 335.378 502.549 337.136 502.549 cv
338.894 502.549 340.319 501.154 340.319 499.433 cv
cp
.00970474 .337682 .879118 0 cmyk
ef
340.319 499.433 mo
340.319 497.712 338.894 496.318 337.136 496.318 cv
335.378 496.318 333.953 497.712 333.953 499.433 cv
333.953 501.154 335.378 502.549 337.136 502.549 cv
338.894 502.549 340.319 501.154 340.319 499.433 cv
cp
1 /0 /CSD get_res sepcs
1 sep
.75 lw
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
446.807 392.993 mo
449.207 400.944 449.207 408.908 446.807 416.858 cv
1 lw
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
443.81 416.858 mo
441.41 408.908 441.41 400.944 443.81 392.993 cv
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
446.866 416.677 mo
454.862 414.291 462.872 414.291 470.868 416.677 cv
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
470.868 419.662 mo
462.872 422.048 454.867 422.048 446.87 419.662 cv
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
FCFNLW+Calibri*1 [10.1595 0 0 -10.1015 0 0 ]msf
305.734 394.386 mo
(V)sh
FCFNLW+Calibri*1 [10.1595 0 0 -10.1015 0 0 ]msf
311.499 394.386 mo
(D)sh
FCFNLW+Calibri*1 [10.1595 0 0 -10.1015 0 0 ]msf
317.75 394.386 mo
(D)sh
FCFNLW+Calibri*1 [10.1595 0 0 -10.1015 0 0 ]msf
452.513 522.647 mo
(G)sh
FCFNLW+Calibri*1 [10.1595 0 0 -10.1015 0 0 ]msf
458.922 522.647 mo
(N)sh
FCFNLW+Calibri*1 [10.1595 0 0 -10.1015 0 0 ]msf
465.481 522.647 mo
(D)sh
317.005 396.882 mo
332.88 414.56 li
3 lw
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
335.42 417.086 mo
330.34 415.192 li
330.425 415.158 li
332.014 414.737 333.31 413.592 333.923 412.077 cv
333.832 412.035 li
335.42 417.086 li
cp
ef
true set_gvm
%ADOBeginSubsetFont: PBAAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal FCFNLW+Calibri gcheck setglobal} if
2 606 17 <000300ac00000401050e001e002b003800c8401a1f1810014d1f100f014d
1f100d014d1f180c014d1f200b014d1fb8022e40281a154010014d15400f
014d15150b2c1810014d2c100f014d2c100d014d2c180c014d2c200b014d
2cba02320000ffc0b50b014d002633b8ffe8b310014d33b8fff0b30f014d
33b8fff0b30d014d33b8fff6b30c014d33b8ffe8b30b014d33b80210400d
a00bc00b020b1a27f431310724b80109b2105134b8010bb10754003fed3f
ed12392fed39012f5de12b2b2b2b2b32d42be12b2b2b2b2b12392f2b2b39
e12b2b2b2b2b313001140e0423212226351134363321321e0215140e0207
1e0301342e0223231133323e0213342e0223231133323e0204011f384f63
7149feae17292917012674946332162b412a355c4528fefd1a385a4ab2c4
435236194e25476b51cefa3b58432601733d67523e2a151f270482271f2c
547a4d2e544738120a35526e02012f4c351cfe5d233b4ffddd3a583c1ffe
381c3752>FCFNLW+Calibri AddT42Char 
FCFNLW+Calibri /CharStrings get begin
/B 17 def
end
FCFNLW+Calibri /Encoding get
dup 66 /B put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/FCFNLW+Calibri*1 
[32{/.notdef}rp /space 16{/.notdef}rp /one 8{/.notdef}rp /colon 6{/.notdef}rp /A 
/B /.notdef /D /E /.notdef /G /.notdef /I 
2{/.notdef}rp /L /.notdef /N /.notdef /P /.notdef /R 
/.notdef /T /.notdef /V 169{/.notdef}rp]
FCFNLW+Calibri nf
FCFNLW+Calibri*1 [10.1595 0 0 -10.1015 0 0 ]msf
311.647 487.689 mo
(B)sh
FCFNLW+Calibri*1 [10.1595 0 0 -10.1015 0 0 ]msf
311.539 458.902 mo
(A)sh
318.593 460.333 mo
332.562 469.172 li
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
335.42 471.066 mo
330.34 470.435 li
330.372 470.59 li
331.775 469.736 332.693 468.276 332.85 466.651 cv
332.88 466.647 li
335.42 471.066 li
cp
ef
317.64 488.112 mo
331.927 496.004 li
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
335.102 497.898 mo
330.022 497.582 li
329.932 497.598 li
331.287 496.671 332.123 495.164 332.19 493.53 cv
332.245 493.479 li
335.102 497.898 li
cp
ef
458.605 514.629 mo
450.35 503.896 li
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
448.445 501.055 mo
452.89 503.265 li
453.013 503.417 li
451.396 503.712 450.011 504.748 449.279 506.212 cv
449.398 506.106 li
448.445 501.055 li
cp
ef
true set_gvm
%ADOBeginSubsetFont: PBAAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal FCFNLW+Calibri gcheck setglobal} if
2 2732 75 <00020063ffed04e8052100130027007c401a141810014d14100f014d1414
0d014d14120c014d14180b014d14b80233400920003000800003001eb8ff
e8b310014d1eb8fff0b30f014d1eb8ffecb30d014d1eb8ffeeb30c014d1e
b8ffe8b30b014d1ebb0233000a00190129b20f5323b8012bb10556003fed
3fed012fe12b2b2b2b2bd45de12b2b2b2b2b313001140e0223222e023534
3e0233321e0207342e0223220e0215141e0233323e0204e84a93de9492d5
8b444a94de948fd48d45b5275b987070985f29265a9772719a5e2802969d
fcb15f57a6f6a099faaf5f56a5f3a96ebd8b4e548cbb6772c08b4d548fbc
>FCFNLW+Calibri AddT42Char 
FCFNLW+Calibri /CharStrings get begin
/O 75 def
end
FCFNLW+Calibri /Encoding get
dup 79 /O put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/FCFNLW+Calibri*1 
[32{/.notdef}rp /space 16{/.notdef}rp /one 8{/.notdef}rp /colon 6{/.notdef}rp /A 
/B /.notdef /D /E /.notdef /G /.notdef /I 
2{/.notdef}rp /L /.notdef /N /O /P /.notdef /R 
/.notdef /T /.notdef /V 169{/.notdef}rp]
FCFNLW+Calibri nf
FCFNLW+Calibri*1 [10.1595 0 0 -10.1015 0 0 ]msf
451.078 431.375 mo
(O)sh
true set_gvm
%ADOBeginSubsetFont: PBAAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal FCFNLW+Calibri gcheck setglobal} if
2 3762 104 <000100aaffed04790514002b0099401d602d01201810014d20100f014d20
100d014d200a0c014d20180b014d20b802104011004015014d004013014d
004011014d0016b8ffe8b310014d16b8fff0b30f014d16b8fff0b30d014d
16b8fff6b30c014d16b8ffe8b30b014d16ba0210000affc0b315014d0ab8
ffc0400913014d0a265210521bb80129b10556003fed3f3f012f2b2be12b
2b2b2b2bd42b2b2be12b2b2b2b2b31305d01140e0223222e023511343e02
33321e021511141e0233323e023511343e0233321e021504794580b8756b
b07e440814201a182213082c5375494b75512b081421191821130901de76
b980423e79b6770323080c070505070c08fcf25a86592d2c588257031708
0c070505070c0800>FCFNLW+Calibri AddT42Char 
FCFNLW+Calibri /CharStrings get begin
/U 104 def
end
FCFNLW+Calibri /Encoding get
dup 85 /U put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/FCFNLW+Calibri*1 
[32{/.notdef}rp /space 16{/.notdef}rp /one 8{/.notdef}rp /colon 6{/.notdef}rp /A 
/B /.notdef /D /E /.notdef /G /.notdef /I 
2{/.notdef}rp /L /.notdef /N /O /P /.notdef /R 
/.notdef /T /U /V 169{/.notdef}rp]
FCFNLW+Calibri nf
FCFNLW+Calibri*1 [10.1595 0 0 -10.1015 0 0 ]msf
457.805 431.375 mo
(U)sh
FCFNLW+Calibri*1 [10.1595 0 0 -10.1015 0 0 ]msf
464.323 431.375 mo
(T)sh
458.605 432.554 mo
450.667 440.446 li
gsave
[.423316 0 0 -.4209 305.258 526.465 ]ct
@
grestore newpath
448.128 442.655 mo
449.715 437.92 li
449.779 437.874 li
450.261 439.435 451.459 440.677 453.008 441.228 cv
452.89 441.077 li
448.128 442.655 li
cp
ef
grestore
grestore
grestore
grestore
pgrs
[
[/CSA [/0 /1 ]]
[/CSD [/0 ]]
] del_res
true set_gvm
/FCFNLW+Calibri*1 uf
/FCFNLW+Calibri uf
/PBAAAA+Calibri uf
reset_gvm
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
grestore

%%EndDocument

Pscript_WinNT_Compat dup /suspend get exec
Pscript_WinNT_Incr dup /resume get exec
LH
(%%[Page: 1]%%) = 
%%PageTrailer

%%Trailer

Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%PageOrder: Ascend
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%BoundingBox: 0 0 595 842
%%DocumentNeededResources: 
%%DocumentSuppliedResources: 
%%+ procset Pscript_WinNT_ErrorHandler 5.0 0
%%+ procset Pscript_FatalError 5.0 0
%%+ procset Pscript_Win_Basic 5.0 0
%%+ procset Pscript_Win_Utils_L2 5.0 0
%%+ procset Pscript_WinNT_Compat 5.0 0
%%+ procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
Pscript_WinNT_Incr dup /terminate get exec
ehsave restore
%%Pages: 1
(%%[LastPage]%%) = 
%%EOF

%%EndDocument
%%Trailer
